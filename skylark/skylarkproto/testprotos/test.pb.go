// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/skylark/skylarkproto/testprotos/test.proto

package testprotos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Complex_InnerEnum int32

const (
	Complex_UNKNOWN    Complex_InnerEnum = 0
	Complex_ENUM_VAL_1 Complex_InnerEnum = 1
)

var Complex_InnerEnum_name = map[int32]string{
	0: "UNKNOWN",
	1: "ENUM_VAL_1",
}
var Complex_InnerEnum_value = map[string]int32{
	"UNKNOWN":    0,
	"ENUM_VAL_1": 1,
}

func (x Complex_InnerEnum) String() string {
	return proto.EnumName(Complex_InnerEnum_name, int32(x))
}
func (Complex_InnerEnum) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{3, 0} }

type SimpleFields struct {
	I64    int64   `protobuf:"varint,1,opt,name=i64" json:"i64,omitempty"`
	I64Rep []int64 `protobuf:"varint,2,rep,packed,name=i64_rep,json=i64Rep" json:"i64_rep,omitempty"`
	I32    int32   `protobuf:"varint,3,opt,name=i32" json:"i32,omitempty"`
	Ui64   uint64  `protobuf:"varint,4,opt,name=ui64" json:"ui64,omitempty"`
	Ui32   uint32  `protobuf:"varint,5,opt,name=ui32" json:"ui32,omitempty"`
	B      bool    `protobuf:"varint,6,opt,name=b" json:"b,omitempty"`
	F32    float32 `protobuf:"fixed32,7,opt,name=f32" json:"f32,omitempty"`
	F64    float64 `protobuf:"fixed64,8,opt,name=f64" json:"f64,omitempty"`
	S      string  `protobuf:"bytes,9,opt,name=s" json:"s,omitempty"`
}

func (m *SimpleFields) Reset()                    { *m = SimpleFields{} }
func (m *SimpleFields) String() string            { return proto.CompactTextString(m) }
func (*SimpleFields) ProtoMessage()               {}
func (*SimpleFields) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *SimpleFields) GetI64() int64 {
	if m != nil {
		return m.I64
	}
	return 0
}

func (m *SimpleFields) GetI64Rep() []int64 {
	if m != nil {
		return m.I64Rep
	}
	return nil
}

func (m *SimpleFields) GetI32() int32 {
	if m != nil {
		return m.I32
	}
	return 0
}

func (m *SimpleFields) GetUi64() uint64 {
	if m != nil {
		return m.Ui64
	}
	return 0
}

func (m *SimpleFields) GetUi32() uint32 {
	if m != nil {
		return m.Ui32
	}
	return 0
}

func (m *SimpleFields) GetB() bool {
	if m != nil {
		return m.B
	}
	return false
}

func (m *SimpleFields) GetF32() float32 {
	if m != nil {
		return m.F32
	}
	return 0
}

func (m *SimpleFields) GetF64() float64 {
	if m != nil {
		return m.F64
	}
	return 0
}

func (m *SimpleFields) GetS() string {
	if m != nil {
		return m.S
	}
	return ""
}

type MessageFields struct {
	Single *Simple   `protobuf:"bytes,1,opt,name=single" json:"single,omitempty"`
	Rep    []*Simple `protobuf:"bytes,2,rep,name=rep" json:"rep,omitempty"`
}

func (m *MessageFields) Reset()                    { *m = MessageFields{} }
func (m *MessageFields) String() string            { return proto.CompactTextString(m) }
func (*MessageFields) ProtoMessage()               {}
func (*MessageFields) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *MessageFields) GetSingle() *Simple {
	if m != nil {
		return m.Single
	}
	return nil
}

func (m *MessageFields) GetRep() []*Simple {
	if m != nil {
		return m.Rep
	}
	return nil
}

type Simple struct {
	I     int64   `protobuf:"varint,1,opt,name=i" json:"i,omitempty"`
	ManyI []int64 `protobuf:"varint,2,rep,packed,name=many_i,json=manyI" json:"many_i,omitempty"`
}

func (m *Simple) Reset()                    { *m = Simple{} }
func (m *Simple) String() string            { return proto.CompactTextString(m) }
func (*Simple) ProtoMessage()               {}
func (*Simple) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Simple) GetI() int64 {
	if m != nil {
		return m.I
	}
	return 0
}

func (m *Simple) GetManyI() []int64 {
	if m != nil {
		return m.ManyI
	}
	return nil
}

type Complex struct {
	I64     int64                 `protobuf:"varint,1,opt,name=i64" json:"i64,omitempty"`
	I64Rep  []int64               `protobuf:"varint,2,rep,packed,name=i64_rep,json=i64Rep" json:"i64_rep,omitempty"`
	EnumVal Complex_InnerEnum     `protobuf:"varint,3,opt,name=enum_val,json=enumVal,enum=testprotos.Complex_InnerEnum" json:"enum_val,omitempty"`
	MsgVal  *Complex_InnerMessage `protobuf:"bytes,4,opt,name=msg_val,json=msgVal" json:"msg_val,omitempty"`
	// Types that are valid to be assigned to OneofVal:
	//	*Complex_Simple
	//	*Complex_InnerMsg
	OneofVal isComplex_OneofVal `protobuf_oneof:"oneof_val"`
}

func (m *Complex) Reset()                    { *m = Complex{} }
func (m *Complex) String() string            { return proto.CompactTextString(m) }
func (*Complex) ProtoMessage()               {}
func (*Complex) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

type isComplex_OneofVal interface {
	isComplex_OneofVal()
}

type Complex_Simple struct {
	Simple *Simple `protobuf:"bytes,5,opt,name=simple,oneof"`
}
type Complex_InnerMsg struct {
	InnerMsg *Complex_InnerMessage `protobuf:"bytes,6,opt,name=inner_msg,json=innerMsg,oneof"`
}

func (*Complex_Simple) isComplex_OneofVal()   {}
func (*Complex_InnerMsg) isComplex_OneofVal() {}

func (m *Complex) GetOneofVal() isComplex_OneofVal {
	if m != nil {
		return m.OneofVal
	}
	return nil
}

func (m *Complex) GetI64() int64 {
	if m != nil {
		return m.I64
	}
	return 0
}

func (m *Complex) GetI64Rep() []int64 {
	if m != nil {
		return m.I64Rep
	}
	return nil
}

func (m *Complex) GetEnumVal() Complex_InnerEnum {
	if m != nil {
		return m.EnumVal
	}
	return Complex_UNKNOWN
}

func (m *Complex) GetMsgVal() *Complex_InnerMessage {
	if m != nil {
		return m.MsgVal
	}
	return nil
}

func (m *Complex) GetSimple() *Simple {
	if x, ok := m.GetOneofVal().(*Complex_Simple); ok {
		return x.Simple
	}
	return nil
}

func (m *Complex) GetInnerMsg() *Complex_InnerMessage {
	if x, ok := m.GetOneofVal().(*Complex_InnerMsg); ok {
		return x.InnerMsg
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Complex) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Complex_OneofMarshaler, _Complex_OneofUnmarshaler, _Complex_OneofSizer, []interface{}{
		(*Complex_Simple)(nil),
		(*Complex_InnerMsg)(nil),
	}
}

func _Complex_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Complex)
	// oneof_val
	switch x := m.OneofVal.(type) {
	case *Complex_Simple:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Simple); err != nil {
			return err
		}
	case *Complex_InnerMsg:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.InnerMsg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Complex.OneofVal has unexpected type %T", x)
	}
	return nil
}

func _Complex_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Complex)
	switch tag {
	case 5: // oneof_val.simple
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Simple)
		err := b.DecodeMessage(msg)
		m.OneofVal = &Complex_Simple{msg}
		return true, err
	case 6: // oneof_val.inner_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Complex_InnerMessage)
		err := b.DecodeMessage(msg)
		m.OneofVal = &Complex_InnerMsg{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Complex_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Complex)
	// oneof_val
	switch x := m.OneofVal.(type) {
	case *Complex_Simple:
		s := proto.Size(x.Simple)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Complex_InnerMsg:
		s := proto.Size(x.InnerMsg)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Complex_InnerMessage struct {
	I int64 `protobuf:"varint,1,opt,name=i" json:"i,omitempty"`
}

func (m *Complex_InnerMessage) Reset()                    { *m = Complex_InnerMessage{} }
func (m *Complex_InnerMessage) String() string            { return proto.CompactTextString(m) }
func (*Complex_InnerMessage) ProtoMessage()               {}
func (*Complex_InnerMessage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3, 0} }

func (m *Complex_InnerMessage) GetI() int64 {
	if m != nil {
		return m.I
	}
	return 0
}

func init() {
	proto.RegisterType((*SimpleFields)(nil), "testprotos.SimpleFields")
	proto.RegisterType((*MessageFields)(nil), "testprotos.MessageFields")
	proto.RegisterType((*Simple)(nil), "testprotos.Simple")
	proto.RegisterType((*Complex)(nil), "testprotos.Complex")
	proto.RegisterType((*Complex_InnerMessage)(nil), "testprotos.Complex.InnerMessage")
	proto.RegisterEnum("testprotos.Complex_InnerEnum", Complex_InnerEnum_name, Complex_InnerEnum_value)
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/skylark/skylarkproto/testprotos/test.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 445 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0x61, 0x8b, 0xd3, 0x40,
	0x10, 0xed, 0x36, 0x6d, 0xd2, 0x4c, 0x7b, 0x47, 0x59, 0x10, 0x83, 0x28, 0x2c, 0xc1, 0x0f, 0x8b,
	0x68, 0x8a, 0x69, 0x29, 0xfa, 0xe9, 0x50, 0x39, 0xb9, 0x43, 0x5b, 0x61, 0xe5, 0xce, 0x8f, 0x21,
	0x3d, 0xf7, 0xe2, 0x72, 0xd9, 0x6c, 0xc8, 0x36, 0xe2, 0xfd, 0x2e, 0x7f, 0x97, 0xff, 0x41, 0x66,
	0x9b, 0x7a, 0x27, 0x9c, 0xe0, 0x7d, 0xca, 0xcb, 0xcc, 0x7b, 0x33, 0xf3, 0xde, 0xc2, 0x51, 0x61,
	0x92, 0x8b, 0x6f, 0x8d, 0xd1, 0xaa, 0xd5, 0x89, 0x69, 0x8a, 0x59, 0xd9, 0x5e, 0xa8, 0x99, 0xbd,
	0xba, 0x2e, 0xf3, 0xe6, 0x6a, 0xff, 0xad, 0x1b, 0xb3, 0x35, 0xb3, 0xad, 0xb4, 0x5b, 0x87, 0xac,
	0x83, 0x89, 0xc3, 0x14, 0x6e, 0xca, 0xf1, 0x4f, 0x02, 0x93, 0xcf, 0x4a, 0xd7, 0xa5, 0x7c, 0xaf,
	0x64, 0xf9, 0xd5, 0xd2, 0x29, 0x78, 0x6a, 0xb9, 0x88, 0x08, 0x23, 0xdc, 0x13, 0x08, 0xe9, 0x43,
	0x08, 0xd4, 0x72, 0x91, 0x35, 0xb2, 0x8e, 0xfa, 0xcc, 0xe3, 0x9e, 0xf0, 0xd5, 0x72, 0x21, 0x64,
	0xed, 0xa8, 0xf3, 0x34, 0xf2, 0x18, 0xe1, 0x43, 0x81, 0x90, 0x52, 0x18, 0xb4, 0xa8, 0x1e, 0x30,
	0xc2, 0x07, 0xc2, 0xe1, 0x5d, 0x6d, 0x9e, 0x46, 0x43, 0x46, 0xf8, 0x81, 0x70, 0x98, 0x4e, 0x80,
	0x6c, 0x22, 0x9f, 0x11, 0x3e, 0x12, 0x64, 0x83, 0x73, 0x2e, 0xe7, 0x69, 0x14, 0x30, 0xc2, 0xfb,
	0x02, 0xa1, 0xab, 0x2c, 0x17, 0xd1, 0x88, 0x11, 0x4e, 0x04, 0x42, 0x54, 0xd8, 0x28, 0x64, 0x84,
	0x87, 0x82, 0xd8, 0x38, 0x87, 0x83, 0x95, 0xb4, 0x36, 0x2f, 0xf6, 0x57, 0x3f, 0x03, 0xdf, 0xaa,
	0xaa, 0x28, 0xa5, 0x3b, 0x7c, 0x9c, 0xd2, 0xe4, 0xc6, 0x63, 0xb2, 0xf3, 0x27, 0x3a, 0x06, 0x7d,
	0x0a, 0xde, 0xde, 0xcb, 0xdd, 0x44, 0x6c, 0xc7, 0x2f, 0xc0, 0xdf, 0xfd, 0xe2, 0x6a, 0xd5, 0xe5,
	0x41, 0x14, 0x7d, 0x00, 0xbe, 0xce, 0xab, 0xeb, 0x4c, 0x75, 0x61, 0x0c, 0xf1, 0xef, 0x34, 0xfe,
	0xd5, 0x87, 0xe0, 0x9d, 0x41, 0xfe, 0x8f, 0xfb, 0x44, 0xf8, 0x0a, 0x46, 0xb2, 0x6a, 0x75, 0xf6,
	0x3d, 0x2f, 0x5d, 0x8e, 0x87, 0xe9, 0x93, 0xdb, 0x07, 0x75, 0x13, 0x93, 0xd3, 0xaa, 0x92, 0xcd,
	0x71, 0xd5, 0x6a, 0x11, 0x20, 0xfd, 0x3c, 0x2f, 0xe9, 0x6b, 0x08, 0xb4, 0x2d, 0x9c, 0x70, 0xe0,
	0x2c, 0xb3, 0x7f, 0x0a, 0xbb, 0xa8, 0x84, 0xaf, 0x6d, 0x81, 0xd2, 0xe7, 0x18, 0x16, 0xf6, 0xdd,
	0x9b, 0xdc, 0x99, 0xc1, 0x49, 0x4f, 0x74, 0x1c, 0x7a, 0x04, 0xa1, 0xc2, 0x29, 0x99, 0xb6, 0x85,
	0x7b, 0xb3, 0xff, 0x58, 0x75, 0xd2, 0x13, 0x23, 0x27, 0x5a, 0xd9, 0xe2, 0xd1, 0x63, 0x98, 0xdc,
	0xee, 0xfd, 0x9d, 0x67, 0xcc, 0x21, 0xfc, 0xe3, 0x8e, 0x8e, 0x21, 0x38, 0x5b, 0x7f, 0x58, 0x7f,
	0xfa, 0xb2, 0x9e, 0xf6, 0xe8, 0x21, 0xc0, 0xf1, 0xfa, 0x6c, 0x95, 0x9d, 0xbf, 0xf9, 0x98, 0xbd,
	0x9c, 0x92, 0xb7, 0x63, 0x08, 0x4d, 0x25, 0xcd, 0x25, 0x7a, 0xde, 0xf8, 0x6e, 0xfb, 0xfc, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xe2, 0xb7, 0xd7, 0xb5, 0x0d, 0x03, 0x00, 0x00,
}
