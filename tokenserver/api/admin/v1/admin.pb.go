// Code generated by protoc-gen-go.
// source: github.com/luci/luci-go/tokenserver/api/admin/v1/admin.proto
// DO NOT EDIT!

/*
Package admin is a generated protocol buffer package.

It is generated from these files:
	github.com/luci/luci-go/tokenserver/api/admin/v1/admin.proto
	github.com/luci/luci-go/tokenserver/api/admin/v1/certificate_authorities.proto
	github.com/luci/luci-go/tokenserver/api/admin/v1/config.proto

It has these top-level messages:
	ImportedConfigs
	FetchCRLRequest
	FetchCRLResponse
	ListCAsResponse
	GetCAStatusRequest
	GetCAStatusResponse
	IsRevokedCertRequest
	IsRevokedCertResponse
	CheckCertificateRequest
	CheckCertificateResponse
	CRLStatus
	TokenServerConfig
	CertificateAuthorityConfig
	DomainConfig
	DelegationPermissions
	DelegationRule
*/
package admin

import prpc "github.com/luci/luci-go/grpc/prpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/luci/luci-go/common/proto/google"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ImportedConfigs is returned by ImportConfigs methods on success.
type ImportedConfigs struct {
	// The list of imported config files with their revision numbers.
	ImportedConfigs []*ImportedConfigs_ConfigFile `protobuf:"bytes,1,rep,name=imported_configs,json=importedConfigs" json:"imported_configs,omitempty"`
}

func (m *ImportedConfigs) Reset()                    { *m = ImportedConfigs{} }
func (m *ImportedConfigs) String() string            { return proto.CompactTextString(m) }
func (*ImportedConfigs) ProtoMessage()               {}
func (*ImportedConfigs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ImportedConfigs) GetImportedConfigs() []*ImportedConfigs_ConfigFile {
	if m != nil {
		return m.ImportedConfigs
	}
	return nil
}

type ImportedConfigs_ConfigFile struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Revision string `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
}

func (m *ImportedConfigs_ConfigFile) Reset()                    { *m = ImportedConfigs_ConfigFile{} }
func (m *ImportedConfigs_ConfigFile) String() string            { return proto.CompactTextString(m) }
func (*ImportedConfigs_ConfigFile) ProtoMessage()               {}
func (*ImportedConfigs_ConfigFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func init() {
	proto.RegisterType((*ImportedConfigs)(nil), "tokenserver.admin.ImportedConfigs")
	proto.RegisterType((*ImportedConfigs_ConfigFile)(nil), "tokenserver.admin.ImportedConfigs.ConfigFile")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Admin service

type AdminClient interface {
	// ImportConfigs makes the server read its configs from luci-config.
	//
	// Note that regularly configs are read in background each 5 min.
	// ImportConfigs can be used to force config reread immediately. It will
	// block until the configs are read.
	ImportConfigs(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*ImportedConfigs, error)
}
type adminPRPCClient struct {
	client *prpc.Client
}

func NewAdminPRPCClient(client *prpc.Client) AdminClient {
	return &adminPRPCClient{client}
}

func (c *adminPRPCClient) ImportConfigs(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*ImportedConfigs, error) {
	out := new(ImportedConfigs)
	err := c.client.Call(ctx, "tokenserver.admin.Admin", "ImportConfigs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type adminClient struct {
	cc *grpc.ClientConn
}

func NewAdminClient(cc *grpc.ClientConn) AdminClient {
	return &adminClient{cc}
}

func (c *adminClient) ImportConfigs(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*ImportedConfigs, error) {
	out := new(ImportedConfigs)
	err := grpc.Invoke(ctx, "/tokenserver.admin.Admin/ImportConfigs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Admin service

type AdminServer interface {
	// ImportConfigs makes the server read its configs from luci-config.
	//
	// Note that regularly configs are read in background each 5 min.
	// ImportConfigs can be used to force config reread immediately. It will
	// block until the configs are read.
	ImportConfigs(context.Context, *google_protobuf.Empty) (*ImportedConfigs, error)
}

func RegisterAdminServer(s prpc.Registrar, srv AdminServer) {
	s.RegisterService(&_Admin_serviceDesc, srv)
}

func _Admin_ImportConfigs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AdminServer).ImportConfigs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tokenserver.admin.Admin/ImportConfigs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AdminServer).ImportConfigs(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Admin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tokenserver.admin.Admin",
	HandlerType: (*AdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ImportConfigs",
			Handler:    _Admin_ImportConfigs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() {
	proto.RegisterFile("github.com/luci/luci-go/tokenserver/api/admin/v1/admin.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xb2, 0x49, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x29, 0x4d, 0xce, 0x04, 0x13, 0xba, 0xe9, 0xf9,
	0xfa, 0x25, 0xf9, 0xd9, 0xa9, 0x79, 0xc5, 0xa9, 0x45, 0x65, 0xa9, 0x45, 0xfa, 0x89, 0x05, 0x99,
	0xfa, 0x89, 0x29, 0xb9, 0x99, 0x79, 0xfa, 0x65, 0x86, 0x10, 0x86, 0x5e, 0x41, 0x51, 0x7e, 0x49,
	0xbe, 0x90, 0x20, 0x92, 0x2a, 0x3d, 0xb0, 0x84, 0x94, 0x74, 0x7a, 0x7e, 0x7e, 0x7a, 0x4e, 0xaa,
	0x3e, 0x58, 0x41, 0x52, 0x69, 0x9a, 0x7e, 0x6a, 0x6e, 0x41, 0x49, 0x25, 0x44, 0xbd, 0xd2, 0x4a,
	0x46, 0x2e, 0x7e, 0xcf, 0xdc, 0x82, 0xfc, 0xa2, 0x92, 0xd4, 0x14, 0xe7, 0xfc, 0xbc, 0xb4, 0xcc,
	0xf4, 0x62, 0xa1, 0x08, 0x2e, 0x81, 0x4c, 0xa8, 0x50, 0x7c, 0x32, 0x44, 0x4c, 0x82, 0x51, 0x81,
	0x59, 0x83, 0xdb, 0x48, 0x57, 0x0f, 0xc3, 0x78, 0x3d, 0x34, 0xdd, 0x7a, 0x10, 0xda, 0x2d, 0x33,
	0x27, 0x35, 0x88, 0x3f, 0x13, 0x55, 0x4e, 0xca, 0x86, 0x8b, 0x0b, 0x21, 0x2d, 0x24, 0xc4, 0xc5,
	0x92, 0x97, 0x98, 0x9b, 0x0a, 0x34, 0x9b, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x16, 0x92, 0xe2, 0xe2,
	0x28, 0x4a, 0x2d, 0xcb, 0x2c, 0xce, 0xcc, 0xcf, 0x93, 0x60, 0x02, 0x8b, 0xc3, 0xf9, 0x46, 0x21,
	0x5c, 0xac, 0x8e, 0x20, 0x2b, 0x85, 0xbc, 0xb9, 0x78, 0x21, 0xb6, 0xc2, 0x5c, 0x2c, 0xa6, 0x07,
	0xf1, 0xa3, 0x1e, 0xcc, 0x8f, 0x7a, 0xae, 0x20, 0x3f, 0x4a, 0x29, 0x11, 0x76, 0x6f, 0x12, 0x1b,
	0x58, 0x8f, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x5a, 0xf0, 0xed, 0x87, 0x78, 0x01, 0x00, 0x00,
}
