// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/config/v1/oses.proto

package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// OSConfig describes an operating system.
type OSConfig struct {
	// The name of this operating system.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A description of this operating system.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *OSConfig) Reset()                    { *m = OSConfig{} }
func (m *OSConfig) String() string            { return proto.CompactTextString(m) }
func (*OSConfig) ProtoMessage()               {}
func (*OSConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *OSConfig) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OSConfig) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// OSesConfig enumerates operating systems.
type OSesConfig struct {
	// A list of operating systems.
	OperatingSystem []*OSConfig `protobuf:"bytes,1,rep,name=operating_system,json=operatingSystem" json:"operating_system,omitempty"`
}

func (m *OSesConfig) Reset()                    { *m = OSesConfig{} }
func (m *OSesConfig) String() string            { return proto.CompactTextString(m) }
func (*OSesConfig) ProtoMessage()               {}
func (*OSesConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *OSesConfig) GetOperatingSystem() []*OSConfig {
	if m != nil {
		return m.OperatingSystem
	}
	return nil
}

func init() {
	proto.RegisterType((*OSConfig)(nil), "config.OSConfig")
	proto.RegisterType((*OSesConfig)(nil), "config.OSesConfig")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/config/v1/oses.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 188 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x48, 0xcf, 0xd7, 0x4b,
	0xce, 0x28, 0xca, 0xcf, 0xcd, 0x2c, 0xcd, 0xd5, 0xcb, 0x2f, 0x4a, 0xd7, 0xcf, 0x29, 0x4d, 0xce,
	0xd4, 0xcf, 0x4d, 0x4c, 0xce, 0xc8, 0xcc, 0x4b, 0xd5, 0x4d, 0x49, 0xd2, 0x4f, 0x2c, 0xc8, 0xd4,
	0x4f, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0xd7, 0x2f, 0x33, 0xd4, 0xcf, 0x2f, 0x4e, 0x2d, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0x88, 0x2a, 0x39, 0x70, 0x71, 0xf8, 0x07, 0x3b, 0x83,
	0xd9, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41,
	0x60, 0xb6, 0x90, 0x02, 0x17, 0x77, 0x4a, 0x6a, 0x71, 0x72, 0x51, 0x66, 0x41, 0x49, 0x66, 0x7e,
	0x9e, 0x04, 0x13, 0x58, 0x0a, 0x59, 0x48, 0xc9, 0x93, 0x8b, 0xcb, 0x3f, 0x38, 0xb5, 0x18, 0x6a,
	0x86, 0x35, 0x97, 0x40, 0x7e, 0x41, 0x6a, 0x51, 0x62, 0x49, 0x66, 0x5e, 0x7a, 0x7c, 0x71, 0x65,
	0x71, 0x49, 0x6a, 0xae, 0x04, 0xa3, 0x02, 0xb3, 0x06, 0xb7, 0x91, 0x80, 0x1e, 0xc4, 0x4a, 0x3d,
	0x98, 0x7d, 0x41, 0xfc, 0x70, 0x95, 0xc1, 0x60, 0x85, 0x49, 0x6c, 0x60, 0xb7, 0x19, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x73, 0x2d, 0x9a, 0x1f, 0xd7, 0x00, 0x00, 0x00,
}
