// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/config/v1/oses.proto

package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "go.chromium.org/luci/machine-db/api/common/v1"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// OS describes an operating system.
type OS struct {
	// The name of this operating system.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A description of this operating system.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// The state of this operating system.
	State common.State `protobuf:"varint,4,opt,name=state,enum=common.State" json:"state,omitempty"`
}

func (m *OS) Reset()                    { *m = OS{} }
func (m *OS) String() string            { return proto.CompactTextString(m) }
func (*OS) ProtoMessage()               {}
func (*OS) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *OS) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OS) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *OS) GetState() common.State {
	if m != nil {
		return m.State
	}
	return common.State_STATE_UNSPECIFIED
}

// OSes enumerates operating systems.
type OSes struct {
	// A list of operating systems.
	OperatingSystem []*OS `protobuf:"bytes,1,rep,name=operating_system,json=operatingSystem" json:"operating_system,omitempty"`
}

func (m *OSes) Reset()                    { *m = OSes{} }
func (m *OSes) String() string            { return proto.CompactTextString(m) }
func (*OSes) ProtoMessage()               {}
func (*OSes) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *OSes) GetOperatingSystem() []*OS {
	if m != nil {
		return m.OperatingSystem
	}
	return nil
}

func init() {
	proto.RegisterType((*OS)(nil), "config.OS")
	proto.RegisterType((*OSes)(nil), "config.OSes")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/config/v1/oses.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x8f, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0xd9, 0xba, 0x16, 0x9c, 0xe2, 0x1f, 0x72, 0x5a, 0x3c, 0x85, 0x7a, 0xd9, 0x8b, 0x09,
	0x56, 0x04, 0x11, 0x7c, 0x86, 0x85, 0xcd, 0x03, 0x94, 0x34, 0x8d, 0xe9, 0x80, 0xc9, 0x84, 0x24,
	0x15, 0x7c, 0x7b, 0x69, 0x82, 0xe2, 0xb1, 0xb7, 0xe1, 0xf7, 0x7d, 0xfc, 0x66, 0x06, 0x5e, 0x1d,
	0x09, 0x73, 0x48, 0xe4, 0xf1, 0xe8, 0x05, 0x25, 0x27, 0x3f, 0x8f, 0x06, 0xa5, 0xd7, 0xe6, 0x80,
	0xc1, 0x3e, 0xee, 0x77, 0x52, 0x47, 0x94, 0x86, 0xc2, 0x07, 0x3a, 0xf9, 0xf5, 0x24, 0x29, 0xdb,
	0x2c, 0x62, 0xa2, 0x42, 0x6c, 0xd9, 0xe8, 0xfd, 0xdb, 0x79, 0x06, 0xef, 0x29, 0x9c, 0x0c, 0xb9,
	0xe8, 0xf2, 0xeb, 0x58, 0x6f, 0x61, 0x31, 0x29, 0xc6, 0xa0, 0x0f, 0xda, 0xdb, 0xa1, 0xe3, 0xdd,
	0x78, 0x35, 0xd7, 0x99, 0x71, 0x58, 0xed, 0x6d, 0x36, 0x09, 0x63, 0x41, 0x0a, 0xc3, 0xa2, 0x46,
	0xff, 0x11, 0x7b, 0x80, 0xcb, 0xea, 0x1a, 0x7a, 0xde, 0x8d, 0x37, 0x9b, 0x6b, 0xd1, 0x76, 0x08,
	0x75, 0x82, 0x73, 0xcb, 0xd6, 0xef, 0xd0, 0x4f, 0xca, 0x66, 0xf6, 0x02, 0x77, 0x14, 0x6d, 0xd2,
	0x05, 0x83, 0xdb, 0xe6, 0xef, 0x5c, 0xac, 0x1f, 0x3a, 0x7e, 0x31, 0xae, 0x36, 0x20, 0xda, 0x1f,
	0x62, 0x52, 0xf3, 0xed, 0x5f, 0x47, 0xd5, 0xca, 0x6e, 0x59, 0xcf, 0x7c, 0xfe, 0x09, 0x00, 0x00,
	0xff, 0xff, 0xb1, 0x2a, 0xce, 0x98, 0x26, 0x01, 0x00, 0x00,
}
