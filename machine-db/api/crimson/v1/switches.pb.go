// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/crimson/v1/switches.proto

package crimson

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// SwitchesRequest is a request to retrieve switches.
type SwitchesRequest struct {
	// The names of switches to retrieve.
	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
	// The datacenters to filter retrieved switches on.
	Datacenters []string `protobuf:"bytes,2,rep,name=datacenters" json:"datacenters,omitempty"`
	// The racks to filter retrieved switches on.
	Racks []string `protobuf:"bytes,3,rep,name=racks" json:"racks,omitempty"`
}

func (m *SwitchesRequest) Reset()                    { *m = SwitchesRequest{} }
func (m *SwitchesRequest) String() string            { return proto.CompactTextString(m) }
func (*SwitchesRequest) ProtoMessage()               {}
func (*SwitchesRequest) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *SwitchesRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *SwitchesRequest) GetDatacenters() []string {
	if m != nil {
		return m.Datacenters
	}
	return nil
}

func (m *SwitchesRequest) GetRacks() []string {
	if m != nil {
		return m.Racks
	}
	return nil
}

// Switch describes a switch.
type Switch struct {
	// The name of this switch. Uniquely identifies this switch.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A description of this switch.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// The number of ports this switch has.
	Ports int32 `protobuf:"varint,3,opt,name=ports" json:"ports,omitempty"`
	// The datacenter this switch belongs to.
	Datacenter string `protobuf:"bytes,4,opt,name=datacenter" json:"datacenter,omitempty"`
	// The rack this switch belongs to.
	Rack string `protobuf:"bytes,5,opt,name=rack" json:"rack,omitempty"`
}

func (m *Switch) Reset()                    { *m = Switch{} }
func (m *Switch) String() string            { return proto.CompactTextString(m) }
func (*Switch) ProtoMessage()               {}
func (*Switch) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *Switch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Switch) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Switch) GetPorts() int32 {
	if m != nil {
		return m.Ports
	}
	return 0
}

func (m *Switch) GetDatacenter() string {
	if m != nil {
		return m.Datacenter
	}
	return ""
}

func (m *Switch) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

// SwitchesResponse is a response to a request to retrieve switches.
type SwitchesResponse struct {
	// The switches matching the request.
	Switches []*Switch `protobuf:"bytes,1,rep,name=switches" json:"switches,omitempty"`
}

func (m *SwitchesResponse) Reset()                    { *m = SwitchesResponse{} }
func (m *SwitchesResponse) String() string            { return proto.CompactTextString(m) }
func (*SwitchesResponse) ProtoMessage()               {}
func (*SwitchesResponse) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *SwitchesResponse) GetSwitches() []*Switch {
	if m != nil {
		return m.Switches
	}
	return nil
}

func init() {
	proto.RegisterType((*SwitchesRequest)(nil), "crimson.SwitchesRequest")
	proto.RegisterType((*Switch)(nil), "crimson.Switch")
	proto.RegisterType((*SwitchesResponse)(nil), "crimson.SwitchesResponse")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/crimson/v1/switches.proto", fileDescriptor7)
}

var fileDescriptor7 = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x50, 0xcd, 0x4e, 0xf3, 0x30,
	0x10, 0x54, 0xda, 0xa6, 0xdf, 0xd7, 0xed, 0xa1, 0xc8, 0xe2, 0xe0, 0x13, 0x8a, 0x72, 0x8a, 0x84,
	0xb0, 0x05, 0x9c, 0x11, 0xef, 0x60, 0x1e, 0x00, 0xb9, 0xae, 0xd5, 0x58, 0xe0, 0x1f, 0xbc, 0x0e,
	0xbc, 0x02, 0x8f, 0x8d, 0x6c, 0x07, 0x9a, 0xdb, 0xee, 0xcc, 0xce, 0x8c, 0x76, 0xe0, 0xe9, 0xec,
	0x99, 0x1a, 0xa3, 0xb7, 0x66, 0xb2, 0xcc, 0xc7, 0x33, 0x7f, 0x9f, 0x94, 0xe1, 0x56, 0xaa, 0xd1,
	0x38, 0x7d, 0x77, 0x3a, 0x72, 0x19, 0x0c, 0x57, 0xd1, 0x58, 0xf4, 0x8e, 0x7f, 0xde, 0x73, 0xfc,
	0x32, 0x49, 0x8d, 0x1a, 0x59, 0x88, 0x3e, 0x79, 0xf2, 0x6f, 0xa6, 0xfa, 0x57, 0x38, 0xbc, 0xcc,
	0x94, 0xd0, 0x1f, 0x93, 0xc6, 0x44, 0xae, 0xa1, 0x75, 0xd2, 0x6a, 0xa4, 0x4d, 0xb7, 0x1e, 0x76,
	0xa2, 0x2e, 0xa4, 0x83, 0xfd, 0x49, 0x26, 0xa9, 0xb4, 0x4b, 0x3a, 0x22, 0x5d, 0x15, 0x6e, 0x09,
	0x65, 0x5d, 0x94, 0xea, 0x0d, 0xe9, 0xba, 0xea, 0xca, 0xd2, 0x7f, 0x37, 0xb0, 0xad, 0x09, 0x84,
	0xc0, 0x26, 0x7b, 0xd1, 0xa6, 0x6b, 0x86, 0x9d, 0x28, 0x73, 0xb1, 0xd5, 0xa8, 0xa2, 0x09, 0xc9,
	0x78, 0x47, 0x57, 0x85, 0x5a, 0x42, 0xd9, 0x36, 0xf8, 0x98, 0xb2, 0x6d, 0x33, 0xb4, 0xa2, 0x2e,
	0xe4, 0x06, 0xe0, 0x92, 0x4d, 0x37, 0x45, 0xb6, 0x40, 0x72, 0x56, 0xce, 0xa7, 0x6d, 0xcd, 0xca,
	0x73, 0xff, 0x0c, 0x57, 0x97, 0x5f, 0x31, 0x78, 0x87, 0x9a, 0xdc, 0xc2, 0xff, 0xdf, 0x6a, 0xca,
	0xbf, 0xfb, 0x87, 0x03, 0x9b, 0xbb, 0x61, 0xf5, 0x58, 0xfc, 0x1d, 0x1c, 0xb7, 0xa5, 0xbc, 0xc7,
	0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x91, 0x4f, 0x59, 0x7d, 0x01, 0x00, 0x00,
}
