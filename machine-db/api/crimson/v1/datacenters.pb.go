// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/crimson/v1/datacenters.proto

package crimson

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// DatacentersRequest is a request to retrieve datacenters.
type DatacentersRequest struct {
	// The names of datacenters to retrieve.
	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
}

func (m *DatacentersRequest) Reset()                    { *m = DatacentersRequest{} }
func (m *DatacentersRequest) String() string            { return proto.CompactTextString(m) }
func (*DatacentersRequest) ProtoMessage()               {}
func (*DatacentersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *DatacentersRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

// Datacenter describes a datacenter.
type Datacenter struct {
	// The name of this datacenter. Uniquely identifies this datacenter.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A description of this datacenter.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *Datacenter) Reset()                    { *m = Datacenter{} }
func (m *Datacenter) String() string            { return proto.CompactTextString(m) }
func (*Datacenter) ProtoMessage()               {}
func (*Datacenter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Datacenter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Datacenter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// DatacentersResponse is a response to a request to retrieve datacenters.
type DatacentersResponse struct {
	// The datacenters matching the request.
	Datacenters []*Datacenter `protobuf:"bytes,1,rep,name=datacenters" json:"datacenters,omitempty"`
}

func (m *DatacentersResponse) Reset()                    { *m = DatacentersResponse{} }
func (m *DatacentersResponse) String() string            { return proto.CompactTextString(m) }
func (*DatacentersResponse) ProtoMessage()               {}
func (*DatacentersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *DatacentersResponse) GetDatacenters() []*Datacenter {
	if m != nil {
		return m.Datacenters
	}
	return nil
}

func init() {
	proto.RegisterType((*DatacentersRequest)(nil), "crimson.DatacentersRequest")
	proto.RegisterType((*Datacenter)(nil), "crimson.Datacenter")
	proto.RegisterType((*DatacentersResponse)(nil), "crimson.DatacentersResponse")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/crimson/v1/datacenters.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x4f, 0x6b, 0x84, 0x30,
	0x10, 0xc5, 0xb1, 0x7f, 0x71, 0xbc, 0xc5, 0x1e, 0x3c, 0x8a, 0x27, 0x29, 0x34, 0xa1, 0x2d, 0xbd,
	0x97, 0xd2, 0xe3, 0x9e, 0xf2, 0x0d, 0x62, 0x1c, 0x34, 0xb0, 0xc9, 0x64, 0x93, 0xb8, 0x9f, 0x7f,
	0xd9, 0xac, 0xa0, 0x7b, 0x9b, 0x79, 0xbf, 0x37, 0xbc, 0x37, 0xf0, 0x3b, 0x11, 0xd7, 0x73, 0x20,
	0x6b, 0x16, 0xcb, 0x29, 0x4c, 0xe2, 0xb8, 0x68, 0x23, 0xac, 0xd2, 0xb3, 0x71, 0xf8, 0x31, 0x0e,
	0x42, 0x79, 0x23, 0x74, 0x30, 0x36, 0x92, 0x13, 0xe7, 0x4f, 0x31, 0xaa, 0xa4, 0x34, 0xba, 0x84,
	0x21, 0x72, 0x1f, 0x28, 0x11, 0x7b, 0x5d, 0x69, 0xf7, 0x0e, 0xec, 0x7f, 0xa3, 0x12, 0x4f, 0x0b,
	0xc6, 0xc4, 0xde, 0xe0, 0xd9, 0x29, 0x8b, 0xb1, 0x29, 0xda, 0xc7, 0xbe, 0x94, 0xb7, 0xa5, 0xfb,
	0x03, 0xd8, 0xbc, 0x8c, 0xc1, 0xd3, 0x55, 0x6e, 0x8a, 0xb6, 0xe8, 0x4b, 0x99, 0x67, 0xd6, 0x42,
	0x35, 0x62, 0xd4, 0xc1, 0xf8, 0x64, 0xc8, 0x35, 0x0f, 0x19, 0xed, 0xa5, 0xee, 0x00, 0xf5, 0x5d,
	0x5e, 0xf4, 0xe4, 0x22, 0xb2, 0x1f, 0xa8, 0x76, 0x25, 0x73, 0x6c, 0xf5, 0x55, 0xf3, 0xb5, 0x25,
	0xdf, 0x4e, 0xe4, 0xde, 0x37, 0xbc, 0xe4, 0x6f, 0xbe, 0x2f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x96,
	0x30, 0x48, 0x42, 0x11, 0x01, 0x00, 0x00,
}
