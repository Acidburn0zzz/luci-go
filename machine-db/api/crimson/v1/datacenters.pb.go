// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/crimson/v1/datacenters.proto

package crimson

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "go.chromium.org/luci/machine-db/api/common/v1"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ListDatacentersRequest is a request to retrieve datacenters.
type ListDatacentersRequest struct {
	// The names of datacenters to retrieve.
	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
}

func (m *ListDatacentersRequest) Reset()                    { *m = ListDatacentersRequest{} }
func (m *ListDatacentersRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDatacentersRequest) ProtoMessage()               {}
func (*ListDatacentersRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *ListDatacentersRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

// Datacenter describes a datacenter.
type Datacenter struct {
	// The name of this datacenter. Uniquely identifies this datacenter.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A description of this datacenter.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// The state of this datacenter.
	State common.State `protobuf:"varint,3,opt,name=state,enum=common.State" json:"state,omitempty"`
}

func (m *Datacenter) Reset()                    { *m = Datacenter{} }
func (m *Datacenter) String() string            { return proto.CompactTextString(m) }
func (*Datacenter) ProtoMessage()               {}
func (*Datacenter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *Datacenter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Datacenter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Datacenter) GetState() common.State {
	if m != nil {
		return m.State
	}
	return common.State_STATE_UNSPECIFIED
}

// ListDatacentersResponse is a response to a request to retrieve datacenters.
type ListDatacentersResponse struct {
	// The datacenters matching the request.
	Datacenters []*Datacenter `protobuf:"bytes,1,rep,name=datacenters" json:"datacenters,omitempty"`
}

func (m *ListDatacentersResponse) Reset()                    { *m = ListDatacentersResponse{} }
func (m *ListDatacentersResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDatacentersResponse) ProtoMessage()               {}
func (*ListDatacentersResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ListDatacentersResponse) GetDatacenters() []*Datacenter {
	if m != nil {
		return m.Datacenters
	}
	return nil
}

func init() {
	proto.RegisterType((*ListDatacentersRequest)(nil), "crimson.ListDatacentersRequest")
	proto.RegisterType((*Datacenter)(nil), "crimson.Datacenter")
	proto.RegisterType((*ListDatacentersResponse)(nil), "crimson.ListDatacentersResponse")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/crimson/v1/datacenters.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x15, 0x4a, 0x41, 0xbd, 0x0a, 0x06, 0x83, 0x20, 0x62, 0x8a, 0xc2, 0x92, 0x05, 0x5b,
	0x14, 0xb1, 0x30, 0x31, 0x30, 0x32, 0x20, 0xf3, 0x04, 0xae, 0x73, 0x4a, 0x2d, 0x61, 0x5f, 0xf0,
	0x39, 0x3c, 0x3f, 0xaa, 0x13, 0x29, 0x91, 0x58, 0xd8, 0xec, 0xff, 0x3f, 0x7f, 0xfa, 0x7c, 0xf0,
	0xda, 0x91, 0xb4, 0x87, 0x48, 0xde, 0x0d, 0x5e, 0x52, 0xec, 0xd4, 0xd7, 0x60, 0x9d, 0xf2, 0xc6,
	0x1e, 0x5c, 0xc0, 0x87, 0x76, 0xaf, 0x4c, 0xef, 0x94, 0x8d, 0xce, 0x33, 0x05, 0xf5, 0xf3, 0xa8,
	0x5a, 0x93, 0x8c, 0xc5, 0x90, 0x30, 0xb2, 0xec, 0x23, 0x25, 0x12, 0xe7, 0x53, 0x7b, 0xf7, 0xf2,
	0x2f, 0x14, 0x79, 0x3f, 0x92, 0x38, 0x99, 0x84, 0x13, 0xa4, 0x96, 0x70, 0xf3, 0xee, 0x38, 0xbd,
	0xcd, 0x74, 0x8d, 0xdf, 0x03, 0x72, 0x12, 0xd7, 0xb0, 0x0e, 0xc6, 0x23, 0x97, 0x45, 0xb5, 0x6a,
	0x36, 0x7a, 0xbc, 0xd4, 0x1d, 0xc0, 0x3c, 0x2b, 0x04, 0x9c, 0x1e, 0xe3, 0xb2, 0xa8, 0x8a, 0x66,
	0xa3, 0xf3, 0x59, 0x54, 0xb0, 0x6d, 0x91, 0x6d, 0x74, 0x7d, 0x72, 0x14, 0xca, 0x93, 0x5c, 0x2d,
	0x23, 0x71, 0x0f, 0xeb, 0xec, 0x50, 0xae, 0xaa, 0xa2, 0xb9, 0xdc, 0x5d, 0xc8, 0xd1, 0x4d, 0x7e,
	0x1e, 0x43, 0x3d, 0x76, 0xf5, 0x07, 0xdc, 0xfe, 0x11, 0xe3, 0x9e, 0x02, 0xa3, 0x78, 0x86, 0xed,
	0x62, 0x1b, 0xd9, 0x6f, 0xbb, 0xbb, 0x92, 0xd3, 0x3a, 0xe4, 0xfc, 0x44, 0x2f, 0xe7, 0xf6, 0x67,
	0xf9, 0xc7, 0x4f, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x42, 0xdc, 0xe9, 0x10, 0x7a, 0x01, 0x00,
	0x00,
}
