// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/crimson/v1/datacenters.proto

/*
Package crimson is a generated protocol buffer package.

It is generated from these files:
	go.chromium.org/luci/machine-db/api/crimson/v1/datacenters.proto
	go.chromium.org/luci/machine-db/api/crimson/v1/hosts.proto
	go.chromium.org/luci/machine-db/api/crimson/v1/machines.proto
	go.chromium.org/luci/machine-db/api/crimson/v1/oses.proto
	go.chromium.org/luci/machine-db/api/crimson/v1/platforms.proto
	go.chromium.org/luci/machine-db/api/crimson/v1/racks.proto
	go.chromium.org/luci/machine-db/api/crimson/v1/switches.proto
	go.chromium.org/luci/machine-db/api/crimson/v1/vlans.proto

It has these top-level messages:
	DatacentersRequest
	Datacenter
	DatacentersResponse
	Host
	AddHostRequest
	AddHostResponse
	DeleteHostRequest
	DeleteHostResponse
	EditHostRequest
	EditHostResponse
	GetHostsRequest
	GetHostsResponse
	Machine
	AddMachineRequest
	AddMachineResponse
	DeleteMachineRequest
	DeleteMachineResponse
	EditMachineRequest
	EditMachineResponse
	GetMachinesRequest
	GetMachinesResponse
	OperatingSystemsRequest
	OperatingSystem
	OperatingSystemsResponse
	PlatformsRequest
	Platform
	PlatformsResponse
	RacksRequest
	Rack
	RacksResponse
	SwitchesRequest
	Switch
	SwitchesResponse
	VLANsRequest
	VLAN
	VLANsResponse
*/
package crimson

import prpc "go.chromium.org/luci/grpc/prpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DatacentersRequest is a request to retrieve datacenters.
type DatacentersRequest struct {
	// The names of datacenters to retrieve.
	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
}

func (m *DatacentersRequest) Reset()                    { *m = DatacentersRequest{} }
func (m *DatacentersRequest) String() string            { return proto.CompactTextString(m) }
func (*DatacentersRequest) ProtoMessage()               {}
func (*DatacentersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DatacentersRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

// Datacenter describes a datacenter.
type Datacenter struct {
	// The name of this datacenter.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A description of this datacenter.
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *Datacenter) Reset()                    { *m = Datacenter{} }
func (m *Datacenter) String() string            { return proto.CompactTextString(m) }
func (*Datacenter) ProtoMessage()               {}
func (*Datacenter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Datacenter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Datacenter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// DatacentersResponse is a response to a request to retrieve datacenters.
type DatacentersResponse struct {
	// The datacenters matching the request.
	Datacenters []*Datacenter `protobuf:"bytes,1,rep,name=datacenters" json:"datacenters,omitempty"`
}

func (m *DatacentersResponse) Reset()                    { *m = DatacentersResponse{} }
func (m *DatacentersResponse) String() string            { return proto.CompactTextString(m) }
func (*DatacentersResponse) ProtoMessage()               {}
func (*DatacentersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DatacentersResponse) GetDatacenters() []*Datacenter {
	if m != nil {
		return m.Datacenters
	}
	return nil
}

func init() {
	proto.RegisterType((*DatacentersRequest)(nil), "crimson.DatacentersRequest")
	proto.RegisterType((*Datacenter)(nil), "crimson.Datacenter")
	proto.RegisterType((*DatacentersResponse)(nil), "crimson.DatacentersResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Datacenters service

type DatacentersClient interface {
	// GetDatacenters retrieves datacenters.
	GetDatacenters(ctx context.Context, in *DatacentersRequest, opts ...grpc.CallOption) (*DatacentersResponse, error)
}
type datacentersPRPCClient struct {
	client *prpc.Client
}

func NewDatacentersPRPCClient(client *prpc.Client) DatacentersClient {
	return &datacentersPRPCClient{client}
}

func (c *datacentersPRPCClient) GetDatacenters(ctx context.Context, in *DatacentersRequest, opts ...grpc.CallOption) (*DatacentersResponse, error) {
	out := new(DatacentersResponse)
	err := c.client.Call(ctx, "crimson.Datacenters", "GetDatacenters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type datacentersClient struct {
	cc *grpc.ClientConn
}

func NewDatacentersClient(cc *grpc.ClientConn) DatacentersClient {
	return &datacentersClient{cc}
}

func (c *datacentersClient) GetDatacenters(ctx context.Context, in *DatacentersRequest, opts ...grpc.CallOption) (*DatacentersResponse, error) {
	out := new(DatacentersResponse)
	err := grpc.Invoke(ctx, "/crimson.Datacenters/GetDatacenters", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Datacenters service

type DatacentersServer interface {
	// GetDatacenters retrieves datacenters.
	GetDatacenters(context.Context, *DatacentersRequest) (*DatacentersResponse, error)
}

func RegisterDatacentersServer(s prpc.Registrar, srv DatacentersServer) {
	s.RegisterService(&_Datacenters_serviceDesc, srv)
}

func _Datacenters_GetDatacenters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DatacentersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatacentersServer).GetDatacenters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/crimson.Datacenters/GetDatacenters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatacentersServer).GetDatacenters(ctx, req.(*DatacentersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Datacenters_serviceDesc = grpc.ServiceDesc{
	ServiceName: "crimson.Datacenters",
	HandlerType: (*DatacentersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDatacenters",
			Handler:    _Datacenters_GetDatacenters_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/machine-db/api/crimson/v1/datacenters.proto",
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/crimson/v1/datacenters.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 228 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x3f, 0x4b, 0x04, 0x31,
	0x10, 0xc5, 0x59, 0xff, 0x72, 0xb3, 0x60, 0x31, 0x67, 0xb1, 0xa8, 0xc5, 0xb2, 0xd5, 0x21, 0x98,
	0xe0, 0x89, 0xbd, 0x88, 0x60, 0xa1, 0xd5, 0x96, 0x76, 0xb9, 0xec, 0x70, 0x17, 0x30, 0x99, 0x98,
	0x64, 0xfd, 0xfc, 0x62, 0xee, 0x64, 0x23, 0x6c, 0x97, 0xbc, 0xdf, 0xe4, 0xbd, 0x97, 0x81, 0xa7,
	0x2d, 0x0b, 0xbd, 0x0b, 0x6c, 0xcd, 0x68, 0x05, 0x87, 0xad, 0xfc, 0x1c, 0xb5, 0x91, 0x56, 0xe9,
	0x9d, 0x71, 0x74, 0x37, 0x6c, 0xa4, 0xf2, 0x46, 0xea, 0x60, 0x6c, 0x64, 0x27, 0xbf, 0xef, 0xe5,
	0xa0, 0x92, 0xd2, 0xe4, 0x12, 0x85, 0x28, 0x7c, 0xe0, 0xc4, 0x78, 0x7e, 0xa0, 0xdd, 0x2d, 0xe0,
	0xcb, 0x44, 0x7b, 0xfa, 0x1a, 0x29, 0x26, 0xbc, 0x84, 0x53, 0xa7, 0x2c, 0xc5, 0xa6, 0x6a, 0x8f,
	0x57, 0x8b, 0x7e, 0x7f, 0xe9, 0x9e, 0x01, 0xa6, 0x59, 0x44, 0x38, 0xf9, 0x95, 0x9b, 0xaa, 0xad,
	0x56, 0x8b, 0x3e, 0x9f, 0xb1, 0x85, 0x7a, 0xa0, 0xa8, 0x83, 0xf1, 0xc9, 0xb0, 0x6b, 0x8e, 0x32,
	0x2a, 0xa5, 0xee, 0x1d, 0x96, 0xff, 0xf2, 0xa2, 0x67, 0x17, 0x09, 0x1f, 0xa1, 0x2e, 0x4a, 0xe6,
	0xd8, 0x7a, 0xbd, 0x14, 0x87, 0x96, 0x62, 0x7a, 0xd2, 0x97, 0x73, 0xeb, 0x0f, 0xa8, 0x0b, 0x37,
	0x7c, 0x83, 0x8b, 0x57, 0x4a, 0xa5, 0x72, 0x3d, 0x63, 0xf1, 0xf7, 0xcb, 0xab, 0x9b, 0x79, 0xb8,
	0xaf, 0xb4, 0x39, 0xcb, 0x9b, 0x7a, 0xf8, 0x09, 0x00, 0x00, 0xff, 0xff, 0x5b, 0x63, 0x9e, 0x73,
	0x6d, 0x01, 0x00, 0x00,
}
