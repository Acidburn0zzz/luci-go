// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/crimson/v1/hosts.proto

package crimson

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A host in the database.
type Host struct {
	// The name of this host on the network. With VLAN ID, uniquely identifies this host.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The VLAN this host belongs to. With hostname, uniquely identifies this host.
	Vlan int64 `protobuf:"varint,2,opt,name=vlan" json:"vlan,omitempty"`
	// The machine backing this host.
	Machine string `protobuf:"bytes,3,opt,name=machine" json:"machine,omitempty"`
	// The operating system backing this host.
	Os string `protobuf:"bytes,5,opt,name=os" json:"os,omitempty"`
	// The number of VMs which can be deployed on this host.
	VmSlots int32 `protobuf:"varint,6,opt,name=vm_slots,json=vmSlots" json:"vm_slots,omitempty"`
	// A description of this host.
	Description string `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	// The deployment ticket associated with this host.
	DeploymentTicket string `protobuf:"bytes,8,opt,name=deployment_ticket,json=deploymentTicket" json:"deployment_ticket,omitempty"`
}

func (m *Host) Reset()                    { *m = Host{} }
func (m *Host) String() string            { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()               {}
func (*Host) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Host) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Host) GetVlan() int64 {
	if m != nil {
		return m.Vlan
	}
	return 0
}

func (m *Host) GetMachine() string {
	if m != nil {
		return m.Machine
	}
	return ""
}

func (m *Host) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *Host) GetVmSlots() int32 {
	if m != nil {
		return m.VmSlots
	}
	return 0
}

func (m *Host) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Host) GetDeploymentTicket() string {
	if m != nil {
		return m.DeploymentTicket
	}
	return ""
}

// CreateHostRequest is a request to create a new host in the database.
type CreateHostRequest struct {
	// The host to create in the database.
	Host *Host `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
}

func (m *CreateHostRequest) Reset()                    { *m = CreateHostRequest{} }
func (m *CreateHostRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateHostRequest) ProtoMessage()               {}
func (*CreateHostRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *CreateHostRequest) GetHost() *Host {
	if m != nil {
		return m.Host
	}
	return nil
}

// ListHostsRequest is a request to list hosts in the database.
type ListHostsRequest struct {
	// The names of hosts to get.
	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
	// The VLANs to filter retrieved hosts on.
	Vlans []int64 `protobuf:"varint,2,rep,packed,name=vlans" json:"vlans,omitempty"`
}

func (m *ListHostsRequest) Reset()                    { *m = ListHostsRequest{} }
func (m *ListHostsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListHostsRequest) ProtoMessage()               {}
func (*ListHostsRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ListHostsRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *ListHostsRequest) GetVlans() []int64 {
	if m != nil {
		return m.Vlans
	}
	return nil
}

// ListHostsResponse is a response to a request to list hosts.
type ListHostsResponse struct {
	// The hosts matching this request.
	Hosts []*Host `protobuf:"bytes,1,rep,name=hosts" json:"hosts,omitempty"`
}

func (m *ListHostsResponse) Reset()                    { *m = ListHostsResponse{} }
func (m *ListHostsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListHostsResponse) ProtoMessage()               {}
func (*ListHostsResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *ListHostsResponse) GetHosts() []*Host {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func init() {
	proto.RegisterType((*Host)(nil), "crimson.Host")
	proto.RegisterType((*CreateHostRequest)(nil), "crimson.CreateHostRequest")
	proto.RegisterType((*ListHostsRequest)(nil), "crimson.ListHostsRequest")
	proto.RegisterType((*ListHostsResponse)(nil), "crimson.ListHostsResponse")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/crimson/v1/hosts.proto", fileDescriptor2)
}

var fileDescriptor2 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0x41, 0x4b, 0xf3, 0x40,
	0x10, 0x86, 0x49, 0xd2, 0x34, 0xed, 0x94, 0xef, 0xa3, 0x5d, 0x3c, 0xac, 0xb7, 0x18, 0x2f, 0x01,
	0x31, 0x41, 0x05, 0x11, 0x0f, 0x5e, 0xbc, 0x78, 0xf0, 0x14, 0xbd, 0x97, 0x34, 0x5d, 0xda, 0xc5,
	0xec, 0x4e, 0xcc, 0x6c, 0x03, 0xfe, 0x3d, 0x7f, 0x99, 0xec, 0xb4, 0xc5, 0x82, 0xb7, 0x79, 0x9f,
	0x99, 0xc9, 0xf0, 0x64, 0xe1, 0x71, 0x83, 0x45, 0xb3, 0xed, 0xd1, 0xe8, 0x9d, 0x29, 0xb0, 0xdf,
	0x94, 0xed, 0xae, 0xd1, 0xa5, 0xa9, 0x9b, 0xad, 0xb6, 0xea, 0x7a, 0xbd, 0x2a, 0xeb, 0x4e, 0x97,
	0x4d, 0xaf, 0x0d, 0xa1, 0x2d, 0x87, 0x9b, 0x72, 0x8b, 0xe4, 0xa8, 0xe8, 0x7a, 0x74, 0x28, 0x92,
	0x03, 0xcf, 0xbe, 0x03, 0x18, 0xbd, 0x20, 0x39, 0x21, 0x60, 0x64, 0x6b, 0xa3, 0x64, 0x90, 0x06,
	0xf9, 0xb4, 0xe2, 0xda, 0xb3, 0xa1, 0xad, 0xad, 0x0c, 0xd3, 0x20, 0x8f, 0x2a, 0xae, 0x85, 0x84,
	0xe4, 0x70, 0x42, 0x46, 0x3c, 0x7a, 0x8c, 0xe2, 0x3f, 0x84, 0x48, 0x32, 0x66, 0x18, 0x22, 0x89,
	0x73, 0x98, 0x0c, 0x66, 0x49, 0x2d, 0x3a, 0x92, 0xe3, 0x34, 0xc8, 0xe3, 0x2a, 0x19, 0xcc, 0x9b,
	0x8f, 0x22, 0x85, 0xd9, 0x5a, 0x51, 0xd3, 0xeb, 0xce, 0x69, 0xb4, 0x32, 0xe1, 0x9d, 0x53, 0x24,
	0xae, 0x60, 0xb1, 0x56, 0x5d, 0x8b, 0x5f, 0x46, 0x59, 0xb7, 0x74, 0xba, 0xf9, 0x50, 0x4e, 0x4e,
	0x78, 0x6e, 0xfe, 0xdb, 0x78, 0x67, 0x9e, 0xdd, 0xc3, 0xe2, 0xb9, 0x57, 0xb5, 0x53, 0xde, 0xa4,
	0x52, 0x9f, 0x3b, 0x45, 0x4e, 0x5c, 0xc0, 0xc8, 0x1b, 0xb3, 0xd0, 0xec, 0xf6, 0x5f, 0x71, 0x30,
	0x2e, 0x78, 0x86, 0x5b, 0xd9, 0x13, 0xcc, 0x5f, 0x35, 0x39, 0x4f, 0xe8, 0xb8, 0x76, 0x06, 0xb1,
	0x77, 0x27, 0x19, 0xa4, 0x51, 0x3e, 0xad, 0xf6, 0xc1, 0x53, 0x6f, 0x4f, 0x32, 0x4c, 0xa3, 0x3c,
	0xaa, 0xf6, 0x21, 0x7b, 0x80, 0xc5, 0xc9, 0x3e, 0x75, 0x68, 0x49, 0x89, 0x4b, 0x88, 0xf9, 0x4f,
	0xf3, 0x07, 0xfe, 0x1c, 0xde, 0xf7, 0x56, 0x63, 0x7e, 0x86, 0xbb, 0x9f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x50, 0xec, 0x60, 0x49, 0xc4, 0x01, 0x00, 0x00,
}
