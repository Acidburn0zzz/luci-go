// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/crimson/v1/vms.proto

package crimson

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A VM in the database.
type VM struct {
	// The name of this VM on the network. With VLAN ID, uniquely identifies this VM.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The VLAN this VM belongs to. With hostname, uniquely identifies this VM.
	Vlan int64 `protobuf:"varint,2,opt,name=vlan" json:"vlan,omitempty"`
	// The physical host this VM is running on.
	Host string `protobuf:"bytes,3,opt,name=host" json:"host,omitempty"`
	// The operating system running on this VM.
	Os string `protobuf:"bytes,4,opt,name=os" json:"os,omitempty"`
	// A description of this VM.
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	// The deployment ticket associated with this VM.
	DeploymentTicket string `protobuf:"bytes,6,opt,name=deployment_ticket,json=deploymentTicket" json:"deployment_ticket,omitempty"`
}

func (m *VM) Reset()                    { *m = VM{} }
func (m *VM) String() string            { return proto.CompactTextString(m) }
func (*VM) ProtoMessage()               {}
func (*VM) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{0} }

func (m *VM) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VM) GetVlan() int64 {
	if m != nil {
		return m.Vlan
	}
	return 0
}

func (m *VM) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *VM) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *VM) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *VM) GetDeploymentTicket() string {
	if m != nil {
		return m.DeploymentTicket
	}
	return ""
}

// A request to create a new VM in the database.
type CreateVMRequest struct {
	// The VM to create in the database.
	Vm *VM `protobuf:"bytes,1,opt,name=vm" json:"vm,omitempty"`
}

func (m *CreateVMRequest) Reset()                    { *m = CreateVMRequest{} }
func (m *CreateVMRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateVMRequest) ProtoMessage()               {}
func (*CreateVMRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{1} }

func (m *CreateVMRequest) GetVm() *VM {
	if m != nil {
		return m.Vm
	}
	return nil
}

// A request to list VMs in the database.
type ListVMsRequest struct {
	// The names of VMs to get.
	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
	// The VLANs to filter retrieved VMs on.
	Vlans []int64 `protobuf:"varint,2,rep,packed,name=vlans" json:"vlans,omitempty"`
}

func (m *ListVMsRequest) Reset()                    { *m = ListVMsRequest{} }
func (m *ListVMsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListVMsRequest) ProtoMessage()               {}
func (*ListVMsRequest) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{2} }

func (m *ListVMsRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *ListVMsRequest) GetVlans() []int64 {
	if m != nil {
		return m.Vlans
	}
	return nil
}

// A response containing a list of VMs in the database.
type ListVMsResponse struct {
	// The VMs matching this request.
	Vms []*VM `protobuf:"bytes,1,rep,name=vms" json:"vms,omitempty"`
}

func (m *ListVMsResponse) Reset()                    { *m = ListVMsResponse{} }
func (m *ListVMsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListVMsResponse) ProtoMessage()               {}
func (*ListVMsResponse) Descriptor() ([]byte, []int) { return fileDescriptor10, []int{3} }

func (m *ListVMsResponse) GetVms() []*VM {
	if m != nil {
		return m.Vms
	}
	return nil
}

func init() {
	proto.RegisterType((*VM)(nil), "crimson.VM")
	proto.RegisterType((*CreateVMRequest)(nil), "crimson.CreateVMRequest")
	proto.RegisterType((*ListVMsRequest)(nil), "crimson.ListVMsRequest")
	proto.RegisterType((*ListVMsResponse)(nil), "crimson.ListVMsResponse")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/crimson/v1/vms.proto", fileDescriptor10)
}

var fileDescriptor10 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x3f, 0x6b, 0xc3, 0x30,
	0x10, 0xc5, 0xb1, 0x9c, 0xa4, 0xe4, 0x02, 0x49, 0x2b, 0x3a, 0x08, 0x4a, 0xc1, 0x78, 0x32, 0x94,
	0xda, 0xfd, 0xb3, 0x74, 0xe8, 0xd6, 0xb5, 0x5e, 0x4c, 0xf1, 0x5a, 0x1c, 0x47, 0x24, 0xa2, 0x91,
	0xce, 0xd5, 0x29, 0x82, 0x7e, 0x9a, 0x7e, 0xd5, 0x22, 0x39, 0xfd, 0x43, 0xb7, 0x77, 0xbf, 0x7b,
	0x0f, 0xe9, 0x1d, 0x3c, 0x6c, 0xb1, 0xec, 0x77, 0x16, 0xb5, 0x3a, 0xe8, 0x12, 0xed, 0xb6, 0xda,
	0x1f, 0x7a, 0x55, 0xe9, 0xae, 0xdf, 0x29, 0x23, 0xaf, 0x37, 0xeb, 0xaa, 0x1b, 0x54, 0xd5, 0x5b,
	0xa5, 0x09, 0x4d, 0xe5, 0x6f, 0x2b, 0xaf, 0xa9, 0x1c, 0x2c, 0x3a, 0xe4, 0x27, 0x47, 0x9a, 0x7f,
	0x26, 0xc0, 0xda, 0x9a, 0x73, 0x98, 0x98, 0x4e, 0x4b, 0x91, 0x64, 0x49, 0x31, 0x6f, 0xa2, 0x0e,
	0xcc, 0xef, 0x3b, 0x23, 0x58, 0x96, 0x14, 0x69, 0x13, 0x75, 0x60, 0x3b, 0x24, 0x27, 0xd2, 0xd1,
	0x17, 0x34, 0x5f, 0x02, 0x43, 0x12, 0x93, 0x48, 0x18, 0x12, 0xcf, 0x60, 0xb1, 0x91, 0xd4, 0x5b,
	0x35, 0x38, 0x85, 0x46, 0x4c, 0xe3, 0xe2, 0x2f, 0xe2, 0x57, 0x70, 0xb6, 0x91, 0xc3, 0x1e, 0x3f,
	0xb4, 0x34, 0xee, 0xd5, 0xa9, 0xfe, 0x4d, 0x3a, 0x31, 0x8b, 0xbe, 0xd3, 0xdf, 0xc5, 0x4b, 0xe4,
	0x79, 0x09, 0xab, 0x27, 0x2b, 0x3b, 0x27, 0xdb, 0xba, 0x91, 0xef, 0x07, 0x49, 0x8e, 0x5f, 0x00,
	0xf3, 0x3a, 0xfe, 0x75, 0x71, 0xb7, 0x28, 0x8f, 0x55, 0xca, 0xb6, 0x6e, 0x98, 0xd7, 0xf9, 0x23,
	0x2c, 0x9f, 0x15, 0xb9, 0xb6, 0xa6, 0x6f, 0xfb, 0x39, 0x4c, 0x43, 0x21, 0x12, 0x49, 0x96, 0x16,
	0xf3, 0x66, 0x1c, 0x02, 0x0d, 0x95, 0x48, 0xb0, 0x2c, 0x2d, 0xd2, 0x66, 0x1c, 0xf2, 0x1b, 0x58,
	0xfd, 0xa4, 0x69, 0x40, 0x43, 0x92, 0x5f, 0x42, 0xea, 0xf5, 0x18, 0xfe, 0xf7, 0x5c, 0xe0, 0xeb,
	0x59, 0xbc, 0xe8, 0xfd, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0xd1, 0x9c, 0x76, 0x8d, 0x01,
	0x00, 0x00,
}
