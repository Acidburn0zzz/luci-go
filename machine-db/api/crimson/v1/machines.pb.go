// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/crimson/v1/machines.proto

package crimson

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Machine describes a machine.
type Machine struct {
	// The name of this machine. Uniquely identifies this machine.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The type of platform this machine is.
	Platform string `protobuf:"bytes,2,opt,name=platform" json:"platform,omitempty"`
	// The rack this machine belongs to.
	Rack string `protobuf:"bytes,3,opt,name=rack" json:"rack,omitempty"`
	// A description of this machine.
	Description string `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// The asset tag associated with this machine.
	AssetTag string `protobuf:"bytes,5,opt,name=asset_tag,json=assetTag" json:"asset_tag,omitempty"`
	// The service tag associated with this machine.
	ServiceTag string `protobuf:"bytes,6,opt,name=service_tag,json=serviceTag" json:"service_tag,omitempty"`
	// The deployment ticket associated with this machine.
	DeploymentTicket string `protobuf:"bytes,7,opt,name=deployment_ticket,json=deploymentTicket" json:"deployment_ticket,omitempty"`
}

func (m *Machine) Reset()                    { *m = Machine{} }
func (m *Machine) String() string            { return proto.CompactTextString(m) }
func (*Machine) ProtoMessage()               {}
func (*Machine) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *Machine) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Machine) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *Machine) GetRack() string {
	if m != nil {
		return m.Rack
	}
	return ""
}

func (m *Machine) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Machine) GetAssetTag() string {
	if m != nil {
		return m.AssetTag
	}
	return ""
}

func (m *Machine) GetServiceTag() string {
	if m != nil {
		return m.ServiceTag
	}
	return ""
}

func (m *Machine) GetDeploymentTicket() string {
	if m != nil {
		return m.DeploymentTicket
	}
	return ""
}

// CreateMachineRequest is a request to create a new machine in the database.
type CreateMachineRequest struct {
	// The machine to create in the database.
	Machine *Machine `protobuf:"bytes,1,opt,name=machine" json:"machine,omitempty"`
}

func (m *CreateMachineRequest) Reset()                    { *m = CreateMachineRequest{} }
func (m *CreateMachineRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateMachineRequest) ProtoMessage()               {}
func (*CreateMachineRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *CreateMachineRequest) GetMachine() *Machine {
	if m != nil {
		return m.Machine
	}
	return nil
}

// ListMachinesRequest is a request to list machines in the database.
type ListMachinesRequest struct {
	// The names of machines to get.
	Names []string `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
}

func (m *ListMachinesRequest) Reset()                    { *m = ListMachinesRequest{} }
func (m *ListMachinesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListMachinesRequest) ProtoMessage()               {}
func (*ListMachinesRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *ListMachinesRequest) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

// ListMachinesResponse is a response to a request to list machines.
type ListMachinesResponse struct {
	// The machines matching this request.
	Machines []*Machine `protobuf:"bytes,1,rep,name=machines" json:"machines,omitempty"`
}

func (m *ListMachinesResponse) Reset()                    { *m = ListMachinesResponse{} }
func (m *ListMachinesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListMachinesResponse) ProtoMessage()               {}
func (*ListMachinesResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *ListMachinesResponse) GetMachines() []*Machine {
	if m != nil {
		return m.Machines
	}
	return nil
}

func init() {
	proto.RegisterType((*Machine)(nil), "crimson.Machine")
	proto.RegisterType((*CreateMachineRequest)(nil), "crimson.CreateMachineRequest")
	proto.RegisterType((*ListMachinesRequest)(nil), "crimson.ListMachinesRequest")
	proto.RegisterType((*ListMachinesResponse)(nil), "crimson.ListMachinesResponse")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/crimson/v1/machines.proto", fileDescriptor3)
}

var fileDescriptor3 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0x87, 0x95, 0xb7, 0x7f, 0xd2, 0x5e, 0x97, 0xbe, 0xa6, 0x83, 0x05, 0x03, 0x55, 0xa6, 0x8a,
	0x42, 0x22, 0x60, 0x66, 0x01, 0x46, 0x58, 0xaa, 0xee, 0x95, 0xeb, 0x1e, 0xa9, 0xd5, 0x3a, 0x36,
	0x3e, 0xb7, 0x12, 0x5f, 0x95, 0x4f, 0x83, 0xe2, 0x38, 0x05, 0x24, 0x36, 0xdf, 0xef, 0x79, 0x72,
	0xd1, 0xdd, 0xc1, 0x43, 0x69, 0x72, 0xb9, 0x75, 0x46, 0xab, 0x83, 0xce, 0x8d, 0x2b, 0x8b, 0xfd,
	0x41, 0xaa, 0x42, 0x0b, 0xb9, 0x55, 0x15, 0xde, 0x6c, 0xd6, 0x85, 0xb0, 0xaa, 0x90, 0x4e, 0x69,
	0x32, 0x55, 0x71, 0xbc, 0x6d, 0x09, 0xe5, 0xd6, 0x19, 0x6f, 0x58, 0x1a, 0x51, 0xf6, 0x99, 0x40,
	0xfa, 0xda, 0x30, 0xc6, 0xa0, 0x5b, 0x09, 0x8d, 0x3c, 0x99, 0x26, 0xb3, 0xe1, 0x22, 0xbc, 0xd9,
	0x39, 0x0c, 0xec, 0x5e, 0xf8, 0x37, 0xe3, 0x34, 0xff, 0x17, 0xf2, 0x53, 0x5d, 0xfb, 0x4e, 0xc8,
	0x1d, 0xef, 0x34, 0x7e, 0xfd, 0x66, 0x53, 0x18, 0x6d, 0x90, 0xa4, 0x53, 0xd6, 0x2b, 0x53, 0xf1,
	0x6e, 0x40, 0x3f, 0x23, 0x76, 0x01, 0x43, 0x41, 0x84, 0x7e, 0xe5, 0x45, 0xc9, 0x7b, 0x4d, 0xcb,
	0x10, 0x2c, 0x45, 0xc9, 0x2e, 0x61, 0x44, 0xe8, 0x8e, 0x4a, 0x62, 0xc0, 0xfd, 0x80, 0x21, 0x46,
	0xb5, 0x30, 0x87, 0xff, 0x1b, 0xb4, 0x7b, 0xf3, 0xa1, 0xb1, 0xf2, 0x2b, 0xaf, 0xe4, 0x0e, 0x3d,
	0x4f, 0x83, 0x36, 0xfe, 0x06, 0xcb, 0x90, 0x67, 0x8f, 0x30, 0x79, 0x72, 0x28, 0x3c, 0xc6, 0x09,
	0x17, 0xf8, 0x7e, 0x40, 0xf2, 0xec, 0x0a, 0xd2, 0xb8, 0x8f, 0x30, 0xeb, 0xe8, 0x6e, 0x9c, 0xc7,
	0x7d, 0xe4, 0xad, 0xd9, 0x0a, 0xd9, 0x1c, 0xce, 0x5e, 0x14, 0xf9, 0x98, 0x53, 0xdb, 0x62, 0x02,
	0xbd, 0x7a, 0x3f, 0xc4, 0x93, 0x69, 0x67, 0x36, 0x5c, 0x34, 0x45, 0xf6, 0x0c, 0x93, 0xdf, 0x32,
	0x59, 0x53, 0x11, 0xb2, 0x6b, 0x18, 0xb4, 0x07, 0x08, 0x1f, 0xfc, 0xf5, 0xc7, 0x93, 0xb1, 0xee,
	0x87, 0x1b, 0xdd, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x8b, 0xaa, 0x69, 0x6b, 0xe4, 0x01, 0x00,
	0x00,
}
