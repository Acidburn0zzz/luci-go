// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/machine-db/api/crimson/v1/vlans.proto

package crimson

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ListVLANsRequest is a request to retrieve VLANs.
type ListVLANsRequest struct {
	// The IDs of VLANs to retrieve.
	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids" json:"ids,omitempty"`
	// The aliases of VLANs to retrieve.
	Aliases []string `protobuf:"bytes,2,rep,name=aliases" json:"aliases,omitempty"`
}

func (m *ListVLANsRequest) Reset()                    { *m = ListVLANsRequest{} }
func (m *ListVLANsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListVLANsRequest) ProtoMessage()               {}
func (*ListVLANsRequest) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *ListVLANsRequest) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *ListVLANsRequest) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

// VLAN describes a VLAN.
type VLAN struct {
	// The ID of this VLAN. Uniquely identifies this VLAN.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// An alias for this VLAN.
	Alias string `protobuf:"bytes,2,opt,name=alias" json:"alias,omitempty"`
	// A description of this VLAN.
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *VLAN) Reset()                    { *m = VLAN{} }
func (m *VLAN) String() string            { return proto.CompactTextString(m) }
func (*VLAN) ProtoMessage()               {}
func (*VLAN) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *VLAN) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *VLAN) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *VLAN) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// ListVLANsResponse is a response to a request to retrieve VLANs.
type ListVLANsResponse struct {
	// The VLANs matching the request.
	Vlans []*VLAN `protobuf:"bytes,1,rep,name=vlans" json:"vlans,omitempty"`
}

func (m *ListVLANsResponse) Reset()                    { *m = ListVLANsResponse{} }
func (m *ListVLANsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListVLANsResponse) ProtoMessage()               {}
func (*ListVLANsResponse) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *ListVLANsResponse) GetVlans() []*VLAN {
	if m != nil {
		return m.Vlans
	}
	return nil
}

func init() {
	proto.RegisterType((*ListVLANsRequest)(nil), "crimson.ListVLANsRequest")
	proto.RegisterType((*VLAN)(nil), "crimson.VLAN")
	proto.RegisterType((*ListVLANsResponse)(nil), "crimson.ListVLANsResponse")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/machine-db/api/crimson/v1/vlans.proto", fileDescriptor8)
}

var fileDescriptor8 = []byte{
	// 226 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x3f, 0x6b, 0xc3, 0x30,
	0x10, 0xc5, 0xb1, 0xd5, 0x34, 0xe4, 0x42, 0x4b, 0x2a, 0x3a, 0x68, 0x14, 0xee, 0xe2, 0xa5, 0x12,
	0x6d, 0x97, 0xd2, 0xa1, 0xd0, 0x3d, 0x64, 0xd0, 0xd0, 0x5d, 0x91, 0x44, 0x72, 0x60, 0x4b, 0xae,
	0xce, 0xce, 0xe7, 0x2f, 0x56, 0x12, 0xc8, 0x76, 0xef, 0xcf, 0xc1, 0xef, 0xc1, 0xd7, 0x21, 0x29,
	0x77, 0xcc, 0xa9, 0xc7, 0xa9, 0x57, 0x29, 0x1f, 0x74, 0x37, 0x39, 0xd4, 0xbd, 0x75, 0x47, 0x8c,
	0xe1, 0xd5, 0xef, 0xb5, 0x1d, 0x50, 0xbb, 0x8c, 0x3d, 0xa5, 0xa8, 0x4f, 0x6f, 0xfa, 0xd4, 0xd9,
	0x48, 0x6a, 0xc8, 0x69, 0x4c, 0x7c, 0x79, 0xf1, 0x9b, 0x6f, 0xd8, 0x6c, 0x91, 0xc6, 0xdf, 0xed,
	0xcf, 0x8e, 0x4c, 0xf8, 0x9b, 0x02, 0x8d, 0x7c, 0x03, 0x0c, 0x3d, 0x89, 0x4a, 0xb2, 0x96, 0x99,
	0xf9, 0xe4, 0x02, 0x96, 0xb6, 0x43, 0x4b, 0x81, 0x44, 0x2d, 0x59, 0xbb, 0x32, 0x57, 0xd9, 0xec,
	0xe0, 0x6e, 0xfe, 0xe5, 0x8f, 0x50, 0xa3, 0x17, 0x95, 0xac, 0x5a, 0x66, 0x6a, 0xf4, 0xfc, 0x19,
	0x16, 0xa5, 0x22, 0x6a, 0x59, 0xb5, 0x2b, 0x73, 0x16, 0x5c, 0xc2, 0xda, 0x07, 0x72, 0x19, 0x87,
	0x11, 0x53, 0x14, 0xac, 0x64, 0xb7, 0x56, 0xf3, 0x09, 0x4f, 0x37, 0x3c, 0x34, 0xa4, 0x48, 0x81,
	0xbf, 0xc0, 0xa2, 0xc0, 0x17, 0xa4, 0xf5, 0xfb, 0x83, 0xba, 0xd0, 0xab, 0xb9, 0x66, 0xce, 0xd9,
	0xfe, 0xbe, 0x2c, 0xfb, 0xf8, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xf2, 0xd1, 0xa1, 0x17, 0x17, 0x01,
	0x00, 0x00,
}
