// Code generated by protoc-gen-go.
// source: github.com/luci/luci-go/dm/api/distributor/swarming/v1/result.proto
// DO NOT EDIT!

package swarmingV1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is the swarming-specific result for Executions run via swarming.
type Result struct {
	ExitCode int64 `protobuf:"varint,1,opt,name=exit_code,json=exitCode" json:"exit_code,omitempty"`
	// The isolated hash of the output directory
	IsolatedOutdir *IsolatedRef `protobuf:"bytes,2,opt,name=isolated_outdir,json=isolatedOutdir" json:"isolated_outdir,omitempty"`
	// The pinned cipd packages that this task actually used.
	CipdPins *CipdSpec `protobuf:"bytes,3,opt,name=cipd_pins,json=cipdPins" json:"cipd_pins,omitempty"`
	// The captured snapshot dimensions that the bot actually had.
	SnapshotDimensions map[string]string `protobuf:"bytes,4,rep,name=snapshot_dimensions,json=snapshotDimensions" json:"snapshot_dimensions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *Result) GetIsolatedOutdir() *IsolatedRef {
	if m != nil {
		return m.IsolatedOutdir
	}
	return nil
}

func (m *Result) GetCipdPins() *CipdSpec {
	if m != nil {
		return m.CipdPins
	}
	return nil
}

func (m *Result) GetSnapshotDimensions() map[string]string {
	if m != nil {
		return m.SnapshotDimensions
	}
	return nil
}

func init() {
	proto.RegisterType((*Result)(nil), "swarmingV1.Result")
}

func init() {
	proto.RegisterFile("github.com/luci/luci-go/dm/api/distributor/swarming/v1/result.proto", fileDescriptor4)
}

var fileDescriptor4 = []byte{
	// 310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x90, 0x4f, 0x4b, 0xc3, 0x30,
	0x18, 0xc6, 0xd9, 0xaa, 0x63, 0x8d, 0xa0, 0x12, 0x07, 0x1b, 0xf3, 0x32, 0x3c, 0x89, 0x60, 0xc3,
	0xf4, 0x22, 0x9e, 0x94, 0x39, 0xd0, 0x93, 0x92, 0x81, 0x17, 0x0f, 0xa5, 0x6b, 0xb2, 0xee, 0xc5,
	0xb6, 0x09, 0xf9, 0x33, 0xdd, 0x97, 0xf3, 0xb3, 0x99, 0xa6, 0x9d, 0x0e, 0xc4, 0xcb, 0x2e, 0x21,
	0x6f, 0x9e, 0xdf, 0xf3, 0x90, 0xe7, 0x45, 0x93, 0x0c, 0xcc, 0xd2, 0xce, 0xa3, 0x54, 0x14, 0x24,
	0xb7, 0x29, 0xf8, 0xe3, 0x32, 0x13, 0x84, 0x15, 0x24, 0x91, 0x40, 0x18, 0x68, 0xa3, 0x60, 0x6e,
	0x8d, 0x50, 0x44, 0x7f, 0x24, 0xaa, 0x80, 0x32, 0x23, 0xab, 0x31, 0x51, 0x5c, 0xdb, 0xdc, 0x44,
	0x52, 0x09, 0x23, 0x30, 0xda, 0x28, 0xaf, 0xe3, 0xe1, 0xfd, 0x8e, 0x81, 0x29, 0x48, 0x56, 0xc7,
	0x0d, 0x1f, 0x77, 0x8c, 0x00, 0x2d, 0xf2, 0xc4, 0xf0, 0x58, 0xf1, 0x45, 0x9d, 0x74, 0xf6, 0xd5,
	0x46, 0x1d, 0xea, 0x7f, 0x8a, 0x4f, 0x51, 0xc8, 0x3f, 0xc1, 0xc4, 0xa9, 0x60, 0x7c, 0xd0, 0x1a,
	0xb5, 0xce, 0x03, 0xda, 0xad, 0x1e, 0x26, 0x6e, 0xc6, 0x77, 0xe8, 0xa8, 0x31, 0xb3, 0x58, 0x58,
	0xc3, 0x40, 0x0d, 0xda, 0x0e, 0x39, 0xb8, 0xea, 0x47, 0xbf, 0xd5, 0xa2, 0xa7, 0x06, 0xa1, 0x7c,
	0x41, 0x0f, 0x37, 0xfc, 0xb3, 0xc7, 0xf1, 0x18, 0x85, 0x55, 0x83, 0x58, 0x42, 0xa9, 0x07, 0x81,
	0xf7, 0xf6, 0xb6, 0xbd, 0x13, 0x27, 0xce, 0x24, 0x4f, 0x69, 0xb7, 0xc2, 0x5e, 0x1c, 0x85, 0xdf,
	0xd0, 0x89, 0x2e, 0x13, 0xa9, 0x97, 0xc2, 0xc4, 0x0c, 0x0a, 0x5e, 0x6a, 0x10, 0xce, 0xbc, 0x37,
	0x0a, 0x9c, 0xf9, 0x62, 0xdb, 0x5c, 0x57, 0x88, 0x66, 0x0d, 0xfd, 0xf0, 0x03, 0x4f, 0x4b, 0xa3,
	0xd6, 0x14, 0xeb, 0x3f, 0xc2, 0x70, 0x8a, 0xfa, 0xff, 0xe0, 0xf8, 0x18, 0x05, 0xef, 0x7c, 0xed,
	0x77, 0x10, 0xd2, 0xea, 0x8a, 0x7b, 0x68, 0x7f, 0x95, 0xe4, 0x96, 0xfb, 0xd2, 0x21, 0xad, 0x87,
	0xdb, 0xf6, 0x4d, 0x6b, 0xde, 0xf1, 0x7b, 0xbc, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x16, 0xba,
	0xd0, 0x69, 0x27, 0x02, 0x00, 0x00,
}
