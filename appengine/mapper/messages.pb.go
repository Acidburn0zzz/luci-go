// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/appengine/mapper/messages.proto

package mapper

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// State of a job or one of its shards.
type State int32

const (
	State_STATE_UNSPECIFIED State = 0
	State_STARTING          State = 1
	State_RUNNING           State = 2
	State_SUCCESS           State = 3
	State_FAIL              State = 4
)

var State_name = map[int32]string{
	0: "STATE_UNSPECIFIED",
	1: "STARTING",
	2: "RUNNING",
	3: "SUCCESS",
	4: "FAIL",
}

var State_value = map[string]int32{
	"STATE_UNSPECIFIED": 0,
	"STARTING":          1,
	"RUNNING":           2,
	"SUCCESS":           3,
	"FAIL":              4,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}

func (State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_009da4539d0ef669, []int{0}
}

// Information about some single shard of a job.
type ShardInfo struct {
	Index                int32                `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	State                State                `protobuf:"varint,2,opt,name=state,proto3,enum=appengine.mapper.messages.State" json:"state,omitempty"`
	Error                string               `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
	Eta                  *timestamp.Timestamp `protobuf:"bytes,6,opt,name=eta,proto3" json:"eta,omitempty"`
	ProcessedEntities    int64                `protobuf:"varint,7,opt,name=processed_entities,json=processedEntities,proto3" json:"processed_entities,omitempty"`
	TotalEntities        int64                `protobuf:"varint,8,opt,name=total_entities,json=totalEntities,proto3" json:"total_entities,omitempty"`
	EntitiesPerSec       float32              `protobuf:"fixed32,9,opt,name=entities_per_sec,json=entitiesPerSec,proto3" json:"entities_per_sec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ShardInfo) Reset()         { *m = ShardInfo{} }
func (m *ShardInfo) String() string { return proto.CompactTextString(m) }
func (*ShardInfo) ProtoMessage()    {}
func (*ShardInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_009da4539d0ef669, []int{0}
}

func (m *ShardInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardInfo.Unmarshal(m, b)
}
func (m *ShardInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardInfo.Marshal(b, m, deterministic)
}
func (m *ShardInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardInfo.Merge(m, src)
}
func (m *ShardInfo) XXX_Size() int {
	return xxx_messageInfo_ShardInfo.Size(m)
}
func (m *ShardInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ShardInfo proto.InternalMessageInfo

func (m *ShardInfo) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *ShardInfo) GetState() State {
	if m != nil {
		return m.State
	}
	return State_STATE_UNSPECIFIED
}

func (m *ShardInfo) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ShardInfo) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *ShardInfo) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *ShardInfo) GetEta() *timestamp.Timestamp {
	if m != nil {
		return m.Eta
	}
	return nil
}

func (m *ShardInfo) GetProcessedEntities() int64 {
	if m != nil {
		return m.ProcessedEntities
	}
	return 0
}

func (m *ShardInfo) GetTotalEntities() int64 {
	if m != nil {
		return m.TotalEntities
	}
	return 0
}

func (m *ShardInfo) GetEntitiesPerSec() float32 {
	if m != nil {
		return m.EntitiesPerSec
	}
	return 0
}

// Information about a job.
type JobInfo struct {
	Id                   int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	State                State                `protobuf:"varint,2,opt,name=state,proto3,enum=appengine.mapper.messages.State" json:"state,omitempty"`
	Created              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated,proto3" json:"updated,omitempty"`
	Eta                  *timestamp.Timestamp `protobuf:"bytes,5,opt,name=eta,proto3" json:"eta,omitempty"`
	ProcessedEntities    int64                `protobuf:"varint,6,opt,name=processed_entities,json=processedEntities,proto3" json:"processed_entities,omitempty"`
	TotalEntities        int64                `protobuf:"varint,7,opt,name=total_entities,json=totalEntities,proto3" json:"total_entities,omitempty"`
	EntitiesPerSec       float32              `protobuf:"fixed32,8,opt,name=entities_per_sec,json=entitiesPerSec,proto3" json:"entities_per_sec,omitempty"`
	Shards               []*ShardInfo         `protobuf:"bytes,20,rep,name=shards,proto3" json:"shards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *JobInfo) Reset()         { *m = JobInfo{} }
func (m *JobInfo) String() string { return proto.CompactTextString(m) }
func (*JobInfo) ProtoMessage()    {}
func (*JobInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_009da4539d0ef669, []int{1}
}

func (m *JobInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobInfo.Unmarshal(m, b)
}
func (m *JobInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobInfo.Marshal(b, m, deterministic)
}
func (m *JobInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobInfo.Merge(m, src)
}
func (m *JobInfo) XXX_Size() int {
	return xxx_messageInfo_JobInfo.Size(m)
}
func (m *JobInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_JobInfo.DiscardUnknown(m)
}

var xxx_messageInfo_JobInfo proto.InternalMessageInfo

func (m *JobInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *JobInfo) GetState() State {
	if m != nil {
		return m.State
	}
	return State_STATE_UNSPECIFIED
}

func (m *JobInfo) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *JobInfo) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *JobInfo) GetEta() *timestamp.Timestamp {
	if m != nil {
		return m.Eta
	}
	return nil
}

func (m *JobInfo) GetProcessedEntities() int64 {
	if m != nil {
		return m.ProcessedEntities
	}
	return 0
}

func (m *JobInfo) GetTotalEntities() int64 {
	if m != nil {
		return m.TotalEntities
	}
	return 0
}

func (m *JobInfo) GetEntitiesPerSec() float32 {
	if m != nil {
		return m.EntitiesPerSec
	}
	return 0
}

func (m *JobInfo) GetShards() []*ShardInfo {
	if m != nil {
		return m.Shards
	}
	return nil
}

func init() {
	proto.RegisterEnum("appengine.mapper.messages.State", State_name, State_value)
	proto.RegisterType((*ShardInfo)(nil), "appengine.mapper.messages.ShardInfo")
	proto.RegisterType((*JobInfo)(nil), "appengine.mapper.messages.JobInfo")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/appengine/mapper/messages.proto", fileDescriptor_009da4539d0ef669)
}

var fileDescriptor_009da4539d0ef669 = []byte{
	// 455 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0xdf, 0x8e, 0x93, 0x40,
	0x14, 0x87, 0x05, 0xca, 0x9f, 0x4e, 0xb5, 0x61, 0x27, 0x6b, 0x82, 0x7b, 0x23, 0xd9, 0x68, 0x42,
	0x8c, 0x0e, 0x49, 0xdd, 0x78, 0xe5, 0x4d, 0xad, 0xac, 0xc1, 0x98, 0xa6, 0x19, 0xe8, 0x8d, 0x37,
	0x0d, 0x85, 0xb3, 0xec, 0x24, 0x85, 0x21, 0x33, 0xd3, 0xc4, 0x57, 0xf0, 0x51, 0x7c, 0x4b, 0x03,
	0x94, 0xea, 0x85, 0xba, 0x6b, 0xf7, 0x8e, 0x33, 0xf3, 0xfd, 0x38, 0x27, 0xdf, 0x01, 0x74, 0x55,
	0x72, 0x92, 0xdf, 0x0a, 0x5e, 0xb1, 0x7d, 0x45, 0xb8, 0x28, 0xc3, 0xdd, 0x3e, 0x67, 0x61, 0xd6,
	0x34, 0x50, 0x97, 0xac, 0x86, 0xb0, 0x6a, 0x1f, 0x45, 0x58, 0x81, 0x94, 0x59, 0x09, 0x92, 0x34,
	0x82, 0x2b, 0x8e, 0x9f, 0x1d, 0x01, 0xd2, 0x03, 0x64, 0x00, 0x2e, 0x9e, 0x97, 0x9c, 0x97, 0x3b,
	0x08, 0x3b, 0x70, 0xbb, 0xbf, 0x09, 0x15, 0xab, 0x40, 0xaa, 0xac, 0x6a, 0xfa, 0xec, 0xe5, 0x77,
	0x03, 0x8d, 0x93, 0xdb, 0x4c, 0x14, 0x71, 0x7d, 0xc3, 0xf1, 0x39, 0x32, 0x59, 0x5d, 0xc0, 0x37,
	0x4f, 0xf3, 0xb5, 0xc0, 0xa4, 0x7d, 0x81, 0xdf, 0x21, 0x53, 0xaa, 0x4c, 0x81, 0xa7, 0xfb, 0x5a,
	0x30, 0x9d, 0xf9, 0xe4, 0xaf, 0xfd, 0x48, 0xd2, 0x72, 0xb4, 0xc7, 0xdb, 0xb7, 0x81, 0x10, 0x5c,
	0x78, 0x86, 0xaf, 0x05, 0x63, 0xda, 0x17, 0xf8, 0x0a, 0xd9, 0xb9, 0x80, 0x4c, 0x41, 0xe1, 0x8d,
	0x7c, 0x2d, 0x98, 0xcc, 0x2e, 0x48, 0x3f, 0x24, 0x19, 0x86, 0x24, 0xe9, 0x30, 0x24, 0x1d, 0xd0,
	0x36, 0xb5, 0x6f, 0x8a, 0x2e, 0x65, 0xde, 0x9d, 0x3a, 0xa0, 0xf8, 0x35, 0x32, 0x40, 0x65, 0x9e,
	0x75, 0x67, 0xa2, 0xc5, 0xf0, 0x1b, 0x84, 0x1b, 0xc1, 0x73, 0x90, 0x12, 0x8a, 0x0d, 0xd4, 0x8a,
	0x29, 0x06, 0xd2, 0xb3, 0x7d, 0x2d, 0x30, 0xe8, 0xd9, 0xf1, 0x26, 0x3a, 0x5c, 0xe0, 0x97, 0x68,
	0xaa, 0xb8, 0xca, 0x76, 0xbf, 0x50, 0xa7, 0x43, 0x9f, 0x74, 0xa7, 0x47, 0x2c, 0x40, 0xee, 0x00,
	0x6c, 0x1a, 0x10, 0x1b, 0x09, 0xb9, 0x37, 0xf6, 0xb5, 0x40, 0xa7, 0xd3, 0xe1, 0x7c, 0x05, 0x22,
	0x81, 0xfc, 0xf2, 0x87, 0x81, 0xec, 0xcf, 0x7c, 0xdb, 0x6d, 0x62, 0x8a, 0x74, 0x56, 0x74, 0x6b,
	0x30, 0xa8, 0xce, 0x8a, 0x93, 0x77, 0xf0, 0x9b, 0x6d, 0xe3, 0x24, 0xdb, 0xa3, 0xff, 0xb6, 0x6d,
	0x3e, 0xc4, 0xb6, 0x75, 0x7f, 0xdb, 0xf6, 0x7d, 0x6d, 0x3b, 0x7f, 0xb2, 0x8d, 0xdf, 0x23, 0x4b,
	0xb6, 0x1f, 0xbe, 0xf4, 0xce, 0x7d, 0x23, 0x98, 0xcc, 0x5e, 0xfc, 0x4b, 0xe9, 0xf0, 0x87, 0xd0,
	0x43, 0xe6, 0xd5, 0x0a, 0x99, 0x9d, 0x67, 0xfc, 0x14, 0x9d, 0x25, 0xe9, 0x3c, 0x8d, 0x36, 0xeb,
	0x65, 0xb2, 0x8a, 0x16, 0xf1, 0x75, 0x1c, 0x7d, 0x74, 0x1f, 0xe1, 0xc7, 0xc8, 0x49, 0xd2, 0x39,
	0x4d, 0xe3, 0xe5, 0x27, 0x57, 0xc3, 0x13, 0x64, 0xd3, 0xf5, 0x72, 0xd9, 0x16, 0x7a, 0x5b, 0x24,
	0xeb, 0xc5, 0x22, 0x4a, 0x12, 0xd7, 0xc0, 0x0e, 0x1a, 0x5d, 0xcf, 0xe3, 0x2f, 0xee, 0xe8, 0x83,
	0xf3, 0xd5, 0xea, 0xdb, 0x6e, 0xad, 0x4e, 0xd9, 0xdb, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x70,
	0x05, 0x6b, 0x03, 0x0e, 0x04, 0x00, 0x00,
}
