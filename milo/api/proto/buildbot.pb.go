// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/milo/api/proto/buildbot.proto

/*
Package milo is a generated protocol buffer package.

It is generated from these files:
	go.chromium.org/luci/milo/api/proto/buildbot.proto
	go.chromium.org/luci/milo/api/proto/buildinfo.proto
	go.chromium.org/luci/milo/api/proto/console_git_info.proto

It has these top-level messages:
	MasterRequest
	CompressedMasterJSON
	BuildbotBuildRequest
	BuildbotBuildJSON
	BuildbotBuildsRequest
	BuildbotBuildsJSON
	BuildInfoRequest
	BuildInfoResponse
	ConsoleGitInfo
*/
package milo

import prpc "go.chromium.org/luci/grpc/prpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request containing the name of the master.
type MasterRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *MasterRequest) Reset()                    { *m = MasterRequest{} }
func (m *MasterRequest) String() string            { return proto.CompactTextString(m) }
func (*MasterRequest) ProtoMessage()               {}
func (*MasterRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MasterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response message containing master information.
type CompressedMasterJSON struct {
	// Whether the master is internal or not.
	Internal bool `protobuf:"varint,1,opt,name=internal" json:"internal,omitempty"`
	// Timestamp of the freshness of the master data.
	Modified *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=modified" json:"modified,omitempty"`
	// Gzipped json data of the master.
	Data []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *CompressedMasterJSON) Reset()                    { *m = CompressedMasterJSON{} }
func (m *CompressedMasterJSON) String() string            { return proto.CompactTextString(m) }
func (*CompressedMasterJSON) ProtoMessage()               {}
func (*CompressedMasterJSON) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CompressedMasterJSON) GetInternal() bool {
	if m != nil {
		return m.Internal
	}
	return false
}

func (m *CompressedMasterJSON) GetModified() *google_protobuf.Timestamp {
	if m != nil {
		return m.Modified
	}
	return nil
}

func (m *CompressedMasterJSON) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// The request for a specific build.
type BuildbotBuildRequest struct {
	Master   string `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Builder  string `protobuf:"bytes,2,opt,name=builder" json:"builder,omitempty"`
	BuildNum int64  `protobuf:"varint,3,opt,name=build_num,json=buildNum" json:"build_num,omitempty"`
}

func (m *BuildbotBuildRequest) Reset()                    { *m = BuildbotBuildRequest{} }
func (m *BuildbotBuildRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildbotBuildRequest) ProtoMessage()               {}
func (*BuildbotBuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BuildbotBuildRequest) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *BuildbotBuildRequest) GetBuilder() string {
	if m != nil {
		return m.Builder
	}
	return ""
}

func (m *BuildbotBuildRequest) GetBuildNum() int64 {
	if m != nil {
		return m.BuildNum
	}
	return 0
}

// The response message for a specific build.
type BuildbotBuildJSON struct {
	// Json data of the build.
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *BuildbotBuildJSON) Reset()                    { *m = BuildbotBuildJSON{} }
func (m *BuildbotBuildJSON) String() string            { return proto.CompactTextString(m) }
func (*BuildbotBuildJSON) ProtoMessage()               {}
func (*BuildbotBuildJSON) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BuildbotBuildJSON) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// The request for multiple build on a builder.
type BuildbotBuildsRequest struct {
	Master  string `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Builder string `protobuf:"bytes,2,opt,name=builder" json:"builder,omitempty"`
	// Limit to the number of builds to return (default: 20).
	Limit int32 `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	// Include ongoing builds (default: false).
	IncludeCurrent bool `protobuf:"varint,4,opt,name=include_current,json=includeCurrent" json:"include_current,omitempty"`
	// Return builds starting from this cursor.
	Cursor string `protobuf:"bytes,5,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *BuildbotBuildsRequest) Reset()                    { *m = BuildbotBuildsRequest{} }
func (m *BuildbotBuildsRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildbotBuildsRequest) ProtoMessage()               {}
func (*BuildbotBuildsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BuildbotBuildsRequest) GetMaster() string {
	if m != nil {
		return m.Master
	}
	return ""
}

func (m *BuildbotBuildsRequest) GetBuilder() string {
	if m != nil {
		return m.Builder
	}
	return ""
}

func (m *BuildbotBuildsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *BuildbotBuildsRequest) GetIncludeCurrent() bool {
	if m != nil {
		return m.IncludeCurrent
	}
	return false
}

func (m *BuildbotBuildsRequest) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

// The response message for multiple builds in a builder.
type BuildbotBuildsJSON struct {
	// builds is the list of builds resulting from the builds request.
	Builds []*BuildbotBuildJSON `protobuf:"bytes,1,rep,name=builds" json:"builds,omitempty"`
	// The cursor to the next request from, if the exact same query was given.
	Cursor string `protobuf:"bytes,2,opt,name=cursor" json:"cursor,omitempty"`
}

func (m *BuildbotBuildsJSON) Reset()                    { *m = BuildbotBuildsJSON{} }
func (m *BuildbotBuildsJSON) String() string            { return proto.CompactTextString(m) }
func (*BuildbotBuildsJSON) ProtoMessage()               {}
func (*BuildbotBuildsJSON) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *BuildbotBuildsJSON) GetBuilds() []*BuildbotBuildJSON {
	if m != nil {
		return m.Builds
	}
	return nil
}

func (m *BuildbotBuildsJSON) GetCursor() string {
	if m != nil {
		return m.Cursor
	}
	return ""
}

func init() {
	proto.RegisterType((*MasterRequest)(nil), "milo.MasterRequest")
	proto.RegisterType((*CompressedMasterJSON)(nil), "milo.CompressedMasterJSON")
	proto.RegisterType((*BuildbotBuildRequest)(nil), "milo.BuildbotBuildRequest")
	proto.RegisterType((*BuildbotBuildJSON)(nil), "milo.BuildbotBuildJSON")
	proto.RegisterType((*BuildbotBuildsRequest)(nil), "milo.BuildbotBuildsRequest")
	proto.RegisterType((*BuildbotBuildsJSON)(nil), "milo.BuildbotBuildsJSON")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Buildbot service

type BuildbotClient interface {
	GetCompressedMasterJSON(ctx context.Context, in *MasterRequest, opts ...grpc.CallOption) (*CompressedMasterJSON, error)
	GetBuildbotBuildJSON(ctx context.Context, in *BuildbotBuildRequest, opts ...grpc.CallOption) (*BuildbotBuildJSON, error)
	GetBuildbotBuildsJSON(ctx context.Context, in *BuildbotBuildsRequest, opts ...grpc.CallOption) (*BuildbotBuildsJSON, error)
}
type buildbotPRPCClient struct {
	client *prpc.Client
}

func NewBuildbotPRPCClient(client *prpc.Client) BuildbotClient {
	return &buildbotPRPCClient{client}
}

func (c *buildbotPRPCClient) GetCompressedMasterJSON(ctx context.Context, in *MasterRequest, opts ...grpc.CallOption) (*CompressedMasterJSON, error) {
	out := new(CompressedMasterJSON)
	err := c.client.Call(ctx, "milo.Buildbot", "GetCompressedMasterJSON", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildbotPRPCClient) GetBuildbotBuildJSON(ctx context.Context, in *BuildbotBuildRequest, opts ...grpc.CallOption) (*BuildbotBuildJSON, error) {
	out := new(BuildbotBuildJSON)
	err := c.client.Call(ctx, "milo.Buildbot", "GetBuildbotBuildJSON", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildbotPRPCClient) GetBuildbotBuildsJSON(ctx context.Context, in *BuildbotBuildsRequest, opts ...grpc.CallOption) (*BuildbotBuildsJSON, error) {
	out := new(BuildbotBuildsJSON)
	err := c.client.Call(ctx, "milo.Buildbot", "GetBuildbotBuildsJSON", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type buildbotClient struct {
	cc *grpc.ClientConn
}

func NewBuildbotClient(cc *grpc.ClientConn) BuildbotClient {
	return &buildbotClient{cc}
}

func (c *buildbotClient) GetCompressedMasterJSON(ctx context.Context, in *MasterRequest, opts ...grpc.CallOption) (*CompressedMasterJSON, error) {
	out := new(CompressedMasterJSON)
	err := grpc.Invoke(ctx, "/milo.Buildbot/GetCompressedMasterJSON", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildbotClient) GetBuildbotBuildJSON(ctx context.Context, in *BuildbotBuildRequest, opts ...grpc.CallOption) (*BuildbotBuildJSON, error) {
	out := new(BuildbotBuildJSON)
	err := grpc.Invoke(ctx, "/milo.Buildbot/GetBuildbotBuildJSON", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *buildbotClient) GetBuildbotBuildsJSON(ctx context.Context, in *BuildbotBuildsRequest, opts ...grpc.CallOption) (*BuildbotBuildsJSON, error) {
	out := new(BuildbotBuildsJSON)
	err := grpc.Invoke(ctx, "/milo.Buildbot/GetBuildbotBuildsJSON", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Buildbot service

type BuildbotServer interface {
	GetCompressedMasterJSON(context.Context, *MasterRequest) (*CompressedMasterJSON, error)
	GetBuildbotBuildJSON(context.Context, *BuildbotBuildRequest) (*BuildbotBuildJSON, error)
	GetBuildbotBuildsJSON(context.Context, *BuildbotBuildsRequest) (*BuildbotBuildsJSON, error)
}

func RegisterBuildbotServer(s prpc.Registrar, srv BuildbotServer) {
	s.RegisterService(&_Buildbot_serviceDesc, srv)
}

func _Buildbot_GetCompressedMasterJSON_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MasterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildbotServer).GetCompressedMasterJSON(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milo.Buildbot/GetCompressedMasterJSON",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildbotServer).GetCompressedMasterJSON(ctx, req.(*MasterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buildbot_GetBuildbotBuildJSON_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildbotBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildbotServer).GetBuildbotBuildJSON(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milo.Buildbot/GetBuildbotBuildJSON",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildbotServer).GetBuildbotBuildJSON(ctx, req.(*BuildbotBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Buildbot_GetBuildbotBuildsJSON_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildbotBuildsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildbotServer).GetBuildbotBuildsJSON(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/milo.Buildbot/GetBuildbotBuildsJSON",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildbotServer).GetBuildbotBuildsJSON(ctx, req.(*BuildbotBuildsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Buildbot_serviceDesc = grpc.ServiceDesc{
	ServiceName: "milo.Buildbot",
	HandlerType: (*BuildbotServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCompressedMasterJSON",
			Handler:    _Buildbot_GetCompressedMasterJSON_Handler,
		},
		{
			MethodName: "GetBuildbotBuildJSON",
			Handler:    _Buildbot_GetBuildbotBuildJSON_Handler,
		},
		{
			MethodName: "GetBuildbotBuildsJSON",
			Handler:    _Buildbot_GetBuildbotBuildsJSON_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/milo/api/proto/buildbot.proto",
}

func init() { proto.RegisterFile("go.chromium.org/luci/milo/api/proto/buildbot.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xeb, 0xe6, 0x03, 0x67, 0xca, 0x87, 0x58, 0x52, 0x6a, 0xb9, 0x07, 0x22, 0x73, 0x68,
	0x4e, 0x6b, 0x29, 0x48, 0x3c, 0x00, 0x3d, 0x54, 0x42, 0xb4, 0xa0, 0x85, 0x2b, 0xaa, 0x1c, 0x7b,
	0x1a, 0x56, 0xf2, 0x7a, 0xc3, 0x7e, 0x5c, 0x79, 0x16, 0x5e, 0x93, 0x1b, 0xca, 0xac, 0xb7, 0x4a,
	0xa8, 0xb9, 0xf4, 0xe4, 0x9d, 0xf1, 0x7f, 0xe7, 0xff, 0x9b, 0xd9, 0x81, 0xd5, 0x46, 0xf3, 0xfa,
	0x87, 0xd1, 0x4a, 0x7a, 0xc5, 0xb5, 0xd9, 0x94, 0xad, 0xaf, 0x65, 0xa9, 0x64, 0xab, 0xcb, 0x6a,
	0x2b, 0xcb, 0xad, 0xd1, 0x4e, 0x97, 0x6b, 0x2f, 0xdb, 0x66, 0xad, 0x1d, 0xa7, 0x90, 0x8d, 0x77,
	0xbf, 0xf3, 0x37, 0x1b, 0xad, 0x37, 0x2d, 0x06, 0xc9, 0xda, 0xdf, 0x95, 0x4e, 0x2a, 0xb4, 0xae,
	0x52, 0xdb, 0x20, 0x2b, 0xde, 0xc2, 0xb3, 0xeb, 0xca, 0x3a, 0x34, 0x02, 0x7f, 0x7a, 0xb4, 0x8e,
	0x31, 0x18, 0x77, 0x95, 0xc2, 0x2c, 0x59, 0x24, 0xcb, 0x99, 0xa0, 0x73, 0xf1, 0x0b, 0xe6, 0x97,
	0x5a, 0x6d, 0x0d, 0x5a, 0x8b, 0x4d, 0x90, 0x7f, 0xfc, 0xfa, 0xf9, 0x86, 0xe5, 0x90, 0xca, 0xce,
	0xa1, 0xe9, 0xaa, 0x96, 0xf4, 0xa9, 0xb8, 0x8f, 0xd9, 0x7b, 0x48, 0x95, 0x6e, 0xe4, 0x9d, 0xc4,
	0x26, 0x3b, 0x5e, 0x24, 0xcb, 0x93, 0x55, 0xce, 0x03, 0x0c, 0x8f, 0x30, 0xfc, 0x5b, 0x84, 0x11,
	0xf7, 0xda, 0x9d, 0x7f, 0x53, 0xb9, 0x2a, 0x1b, 0x2d, 0x92, 0xe5, 0x53, 0x41, 0xe7, 0x02, 0x61,
	0xfe, 0xa1, 0xef, 0x8e, 0xbe, 0x91, 0xf5, 0x35, 0x4c, 0x15, 0xd1, 0xf4, 0xb4, 0x7d, 0xc4, 0x32,
	0x78, 0x42, 0xd3, 0x40, 0x43, 0xd6, 0x33, 0x11, 0x43, 0x76, 0x0e, 0x33, 0x3a, 0xde, 0x76, 0x5e,
	0x91, 0xc5, 0x48, 0xa4, 0x94, 0xb8, 0xf1, 0xaa, 0xb8, 0x80, 0x97, 0x07, 0x36, 0xd4, 0x63, 0xe4,
	0x49, 0xf6, 0x78, 0x7e, 0x27, 0x70, 0x7a, 0xa0, 0xb4, 0x8f, 0x27, 0x9a, 0xc3, 0xa4, 0x95, 0x4a,
	0x3a, 0xa2, 0x99, 0x88, 0x10, 0xb0, 0x0b, 0x78, 0x21, 0xbb, 0xba, 0xf5, 0x0d, 0xde, 0xd6, 0xde,
	0x18, 0xec, 0x5c, 0x36, 0xa6, 0x01, 0x3f, 0xef, 0xd3, 0x97, 0x21, 0xbb, 0x33, 0xac, 0xbd, 0xb1,
	0xda, 0x64, 0x93, 0x60, 0x18, 0xa2, 0xe2, 0x3b, 0xb0, 0x43, 0x42, 0x6a, 0xa6, 0x84, 0x29, 0xf9,
	0xda, 0x2c, 0x59, 0x8c, 0x96, 0x27, 0xab, 0x33, 0xbe, 0xdb, 0x12, 0xfe, 0xa0, 0x6b, 0xd1, 0xcb,
	0xf6, 0xca, 0x1f, 0xef, 0x97, 0x5f, 0xfd, 0x49, 0x20, 0x8d, 0xb7, 0xd8, 0x27, 0x38, 0xbb, 0x42,
	0x37, 0xb8, 0x21, 0xaf, 0x82, 0xc1, 0xc1, 0x8a, 0xe5, 0x79, 0x48, 0x0e, 0x5d, 0x28, 0x8e, 0xd8,
	0x35, 0xcc, 0xaf, 0xd0, 0x3d, 0x7c, 0x88, 0x7c, 0x80, 0x35, 0x56, 0xfc, 0x5f, 0x1f, 0xc5, 0x11,
	0xfb, 0x02, 0xa7, 0xff, 0x96, 0x0b, 0xb3, 0x38, 0x1f, 0xb8, 0x13, 0xdf, 0x31, 0xcf, 0x86, 0x7e,
	0x86, 0x8a, 0xeb, 0x29, 0xed, 0xef, 0xbb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x3d, 0xf8,
	0x03, 0x96, 0x03, 0x00, 0x00,
}
