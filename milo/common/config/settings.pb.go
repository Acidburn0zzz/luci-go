// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/luci/luci-go/milo/common/config/settings.proto

package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Settings represents the format for the global (service) config for Milo.
type Settings struct {
	Buildbot    *Settings_Buildbot    `protobuf:"bytes,1,opt,name=buildbot" json:"buildbot,omitempty"`
	Buildbucket *Settings_Buildbucket `protobuf:"bytes,2,opt,name=buildbucket" json:"buildbucket,omitempty"`
	Swarming    *Settings_Swarming    `protobuf:"bytes,3,opt,name=swarming" json:"swarming,omitempty"`
}

func (m *Settings) Reset()                    { *m = Settings{} }
func (m *Settings) String() string            { return proto.CompactTextString(m) }
func (*Settings) ProtoMessage()               {}
func (*Settings) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Settings) GetBuildbot() *Settings_Buildbot {
	if m != nil {
		return m.Buildbot
	}
	return nil
}

func (m *Settings) GetBuildbucket() *Settings_Buildbucket {
	if m != nil {
		return m.Buildbucket
	}
	return nil
}

func (m *Settings) GetSwarming() *Settings_Swarming {
	if m != nil {
		return m.Swarming
	}
	return nil
}

type Settings_Buildbot struct {
	// internal_reader is the infra-auth group that is allowed to read internal
	// buildbot data.
	InternalReader string `protobuf:"bytes,1,opt,name=internal_reader,json=internalReader" json:"internal_reader,omitempty"`
	// public_subscription is the name of the pubsub topic where public builds come in
	// from
	PublicSubscription string `protobuf:"bytes,2,opt,name=public_subscription,json=publicSubscription" json:"public_subscription,omitempty"`
	// internal_subscription is the name of the pubsub topic where internal builds
	// come in from
	InternalSubscription string `protobuf:"bytes,3,opt,name=internal_subscription,json=internalSubscription" json:"internal_subscription,omitempty"`
}

func (m *Settings_Buildbot) Reset()                    { *m = Settings_Buildbot{} }
func (m *Settings_Buildbot) String() string            { return proto.CompactTextString(m) }
func (*Settings_Buildbot) ProtoMessage()               {}
func (*Settings_Buildbot) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *Settings_Buildbot) GetInternalReader() string {
	if m != nil {
		return m.InternalReader
	}
	return ""
}

func (m *Settings_Buildbot) GetPublicSubscription() string {
	if m != nil {
		return m.PublicSubscription
	}
	return ""
}

func (m *Settings_Buildbot) GetInternalSubscription() string {
	if m != nil {
		return m.InternalSubscription
	}
	return ""
}

type Settings_Buildbucket struct {
	// name is the user friendly name of the Buildbucket instance we're pointing to.
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// host is the hostname of the buildbucket instance we're pointing to (sans schema).
	Host string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
}

func (m *Settings_Buildbucket) Reset()                    { *m = Settings_Buildbucket{} }
func (m *Settings_Buildbucket) String() string            { return proto.CompactTextString(m) }
func (*Settings_Buildbucket) ProtoMessage()               {}
func (*Settings_Buildbucket) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 1} }

func (m *Settings_Buildbucket) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Settings_Buildbucket) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

type Settings_Swarming struct {
	// default_host is the hostname of the swarming host Milo defaults to, if
	// none is specified.  Default host is implicitly an allowed host.
	DefaultHost string `protobuf:"bytes,1,opt,name=default_host,json=defaultHost" json:"default_host,omitempty"`
	// allowed_hosts is a whitelist of hostnames of swarming instances
	// that Milo is allowed to talk to.  This is specified here for security
	// reasons, because Milo will hand out its oauth2 token to a swarming host.
	AllowedHosts []string `protobuf:"bytes,2,rep,name=allowed_hosts,json=allowedHosts" json:"allowed_hosts,omitempty"`
}

func (m *Settings_Swarming) Reset()                    { *m = Settings_Swarming{} }
func (m *Settings_Swarming) String() string            { return proto.CompactTextString(m) }
func (*Settings_Swarming) ProtoMessage()               {}
func (*Settings_Swarming) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 2} }

func (m *Settings_Swarming) GetDefaultHost() string {
	if m != nil {
		return m.DefaultHost
	}
	return ""
}

func (m *Settings_Swarming) GetAllowedHosts() []string {
	if m != nil {
		return m.AllowedHosts
	}
	return nil
}

func init() {
	proto.RegisterType((*Settings)(nil), "config.Settings")
	proto.RegisterType((*Settings_Buildbot)(nil), "config.Settings.Buildbot")
	proto.RegisterType((*Settings_Buildbucket)(nil), "config.Settings.Buildbucket")
	proto.RegisterType((*Settings_Swarming)(nil), "config.Settings.Swarming")
}

func init() {
	proto.RegisterFile("github.com/luci/luci-go/milo/common/config/settings.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 319 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x87, 0xd5, 0x06, 0x55, 0xe9, 0xa5, 0x80, 0x64, 0x40, 0x0a, 0x15, 0x43, 0x81, 0x81, 0x2e,
	0x24, 0x12, 0x55, 0x07, 0x16, 0x06, 0x26, 0x66, 0xf7, 0x01, 0xaa, 0xc4, 0x71, 0x53, 0x0b, 0xc7,
	0x57, 0xf9, 0x8f, 0xfa, 0x2c, 0x3c, 0x1d, 0xaf, 0x82, 0xea, 0x38, 0x51, 0x18, 0xba, 0x44, 0xa7,
	0xdf, 0x7d, 0x5f, 0xee, 0x4e, 0x86, 0xf7, 0x5a, 0xd8, 0xbd, 0x2b, 0x33, 0x86, 0x4d, 0x2e, 0x1d,
	0x13, 0xfe, 0xf3, 0x5a, 0x63, 0xde, 0x08, 0x89, 0x39, 0xc3, 0xa6, 0x41, 0x95, 0x33, 0x54, 0x3b,
	0x51, 0xe7, 0x86, 0x5b, 0x2b, 0x54, 0x6d, 0xb2, 0x83, 0x46, 0x8b, 0x64, 0xd2, 0xc6, 0x4f, 0xbf,
	0x11, 0xc4, 0x9b, 0xd0, 0x22, 0x6b, 0x88, 0x4b, 0x27, 0x64, 0x55, 0xa2, 0x4d, 0x47, 0x8b, 0xd1,
	0x32, 0x79, 0xbb, 0xcf, 0x5a, 0x2e, 0xeb, 0x98, 0xec, 0x33, 0x00, 0xb4, 0x47, 0xc9, 0x07, 0x24,
	0x6d, 0xed, 0xd8, 0x37, 0xb7, 0xe9, 0xd8, 0x9b, 0x0f, 0x67, 0x4c, 0xcf, 0xd0, 0xa1, 0x70, 0x1a,
	0x6b, 0x8e, 0x85, 0x6e, 0x84, 0xaa, 0xd3, 0xe8, 0xcc, 0xd8, 0x4d, 0x00, 0x68, 0x8f, 0xce, 0x7f,
	0x46, 0x10, 0x77, 0xdb, 0x90, 0x17, 0xb8, 0x16, 0xca, 0x72, 0xad, 0x0a, 0xb9, 0xd5, 0xbc, 0xa8,
	0xb8, 0xf6, 0x17, 0x4c, 0xe9, 0x55, 0x17, 0x53, 0x9f, 0x92, 0x1c, 0x6e, 0x0e, 0xae, 0x94, 0x82,
	0x6d, 0x8d, 0x2b, 0x0d, 0xd3, 0xe2, 0x60, 0x05, 0x2a, 0xbf, 0xf4, 0x94, 0x92, 0xb6, 0xb5, 0x19,
	0x74, 0xc8, 0x0a, 0xee, 0xfa, 0x3f, 0xff, 0x53, 0x22, 0xaf, 0xdc, 0x76, 0xcd, 0xa1, 0x34, 0x5f,
	0x43, 0x32, 0x38, 0x97, 0x10, 0xb8, 0x50, 0x45, 0xc3, 0xc3, 0x4a, 0xbe, 0x3e, 0x65, 0x7b, 0x34,
	0x36, 0x4c, 0xf6, 0xf5, 0x9c, 0x42, 0xdc, 0x1d, 0x4a, 0x1e, 0x61, 0x56, 0xf1, 0x5d, 0xe1, 0xa4,
	0xdd, 0x7a, 0xae, 0x75, 0x93, 0x90, 0x7d, 0xa1, 0xb1, 0xe4, 0x19, 0x2e, 0x0b, 0x29, 0xf1, 0xc8,
	0x2b, 0x8f, 0x98, 0x74, 0xbc, 0x88, 0x96, 0x53, 0x3a, 0x0b, 0xe1, 0x89, 0x31, 0xe5, 0xc4, 0x3f,
	0xf8, 0xea, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x7b, 0xb5, 0x17, 0x4f, 0x2d, 0x02, 0x00, 0x00,
}
