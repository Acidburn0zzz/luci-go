// Code generated by protoc-gen-go.
// source: github.com/luci/luci-go/common/tsmon/ts_mon_proto/acquisition_task.proto
// DO NOT EDIT!

package ts_mon_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Task_TypeId int32

const (
	Task_MESSAGE_TYPE_ID Task_TypeId = 34049749
)

var Task_TypeId_name = map[int32]string{
	34049749: "MESSAGE_TYPE_ID",
}
var Task_TypeId_value = map[string]int32{
	"MESSAGE_TYPE_ID": 34049749,
}

func (x Task_TypeId) Enum() *Task_TypeId {
	p := new(Task_TypeId)
	*p = x
	return p
}
func (x Task_TypeId) String() string {
	return proto.EnumName(Task_TypeId_name, int32(x))
}
func (x *Task_TypeId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Task_TypeId_value, data, "Task_TypeId")
	if err != nil {
		return err
	}
	*x = Task_TypeId(value)
	return nil
}
func (Task_TypeId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type Task struct {
	ServiceName      *string `protobuf:"bytes,20,opt,name=service_name,json=serviceName" json:"service_name,omitempty"`
	JobName          *string `protobuf:"bytes,30,opt,name=job_name,json=jobName" json:"job_name,omitempty"`
	DataCenter       *string `protobuf:"bytes,40,opt,name=data_center,json=dataCenter" json:"data_center,omitempty"`
	HostName         *string `protobuf:"bytes,50,opt,name=host_name,json=hostName" json:"host_name,omitempty"`
	TaskNum          *int32  `protobuf:"varint,60,opt,name=task_num,json=taskNum" json:"task_num,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Task) Reset()                    { *m = Task{} }
func (m *Task) String() string            { return proto.CompactTextString(m) }
func (*Task) ProtoMessage()               {}
func (*Task) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *Task) GetServiceName() string {
	if m != nil && m.ServiceName != nil {
		return *m.ServiceName
	}
	return ""
}

func (m *Task) GetJobName() string {
	if m != nil && m.JobName != nil {
		return *m.JobName
	}
	return ""
}

func (m *Task) GetDataCenter() string {
	if m != nil && m.DataCenter != nil {
		return *m.DataCenter
	}
	return ""
}

func (m *Task) GetHostName() string {
	if m != nil && m.HostName != nil {
		return *m.HostName
	}
	return ""
}

func (m *Task) GetTaskNum() int32 {
	if m != nil && m.TaskNum != nil {
		return *m.TaskNum
	}
	return 0
}

func init() {
	proto.RegisterType((*Task)(nil), "ts_mon.proto.Task")
	proto.RegisterEnum("ts_mon.proto.Task_TypeId", Task_TypeId_name, Task_TypeId_value)
}

func init() {
	proto.RegisterFile("github.com/luci/luci-go/common/tsmon/ts_mon_proto/acquisition_task.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 236 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xf2, 0x48, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x29, 0x4d, 0xce, 0x04, 0x13, 0xba, 0xe9, 0xf9,
	0xfa, 0x40, 0x81, 0xdc, 0xfc, 0x3c, 0xfd, 0x92, 0x62, 0x08, 0x19, 0x0f, 0xa4, 0xe2, 0x0b, 0x8a,
	0xf2, 0x4b, 0xf2, 0xf5, 0x13, 0x93, 0x0b, 0x4b, 0x33, 0x8b, 0x33, 0x4b, 0x32, 0x81, 0x22, 0x25,
	0x89, 0xc5, 0xd9, 0x7a, 0x60, 0x61, 0x21, 0x1e, 0x88, 0x22, 0x08, 0x4f, 0x69, 0x3f, 0x23, 0x17,
	0x4b, 0x08, 0x50, 0x52, 0x48, 0x91, 0x8b, 0xa7, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x39, 0x35, 0x3e,
	0x2f, 0x31, 0x37, 0x55, 0x42, 0x44, 0x81, 0x51, 0x83, 0x33, 0x88, 0x1b, 0x2a, 0xe6, 0x07, 0x14,
	0x12, 0x92, 0xe4, 0xe2, 0xc8, 0xca, 0x4f, 0x82, 0x48, 0xcb, 0x81, 0xa5, 0xd9, 0x81, 0x7c, 0xb0,
	0x94, 0x3c, 0x17, 0x77, 0x4a, 0x62, 0x49, 0x62, 0x7c, 0x72, 0x6a, 0x5e, 0x49, 0x6a, 0x91, 0x84,
	0x06, 0x58, 0x96, 0x0b, 0x24, 0xe4, 0x0c, 0x16, 0x11, 0x92, 0xe6, 0xe2, 0xcc, 0xc8, 0x2f, 0x2e,
	0x81, 0x68, 0x36, 0x02, 0x4b, 0x73, 0x80, 0x04, 0x60, 0x06, 0x83, 0x1c, 0x18, 0x9f, 0x57, 0x9a,
	0x2b, 0x61, 0x03, 0x94, 0x63, 0x0d, 0x62, 0x07, 0xf1, 0xfd, 0x4a, 0x73, 0x95, 0x14, 0xb8, 0xd8,
	0x42, 0x2a, 0x0b, 0x52, 0x3d, 0x53, 0x84, 0xc4, 0xb8, 0xf8, 0x7d, 0x5d, 0x83, 0x83, 0x1d, 0xdd,
	0x5d, 0xe3, 0x43, 0x22, 0x03, 0x5c, 0xe3, 0x3d, 0x5d, 0x04, 0xae, 0xce, 0x9d, 0x27, 0x00, 0x08,
	0x00, 0x00, 0xff, 0xff, 0x6a, 0xa5, 0x8a, 0x47, 0x1a, 0x01, 0x00, 0x00,
}
