// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/luci/luci-go/common/proto/config/project_config.proto

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	github.com/luci/luci-go/common/proto/config/project_config.proto
	github.com/luci/luci-go/common/proto/config/service_config.proto

It has these top-level messages:
	ProjectCfg
	RefsCfg
	ConfigSetLocation
	Project
	ProjectsCfg
	Service
	ServiceDynamicMetadata
	ServicesCfg
	AclCfg
	ImportCfg
	SchemasCfg
	ConfigPattern
	Validator
	ValidationRequestMessage
	ValidationResponseMessage
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Schema for project.cfg
type ProjectCfg struct {
	// Full name of the project.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// A list of identities that have read-only access to the. An element is one
	// of:
	// * "group:<group>", where group is defined on auth server.
	// * "<email>"
	// * "<identity>"
	//
	// If not specified, only admins and trusted services have access.
	// Talk to admins to determine the group name appropriate for your project.
	Access           []string `protobuf:"bytes,2,rep,name=access" json:"access,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ProjectCfg) Reset()                    { *m = ProjectCfg{} }
func (m *ProjectCfg) String() string            { return proto.CompactTextString(m) }
func (*ProjectCfg) ProtoMessage()               {}
func (*ProjectCfg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProjectCfg) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ProjectCfg) GetAccess() []string {
	if m != nil {
		return m.Access
	}
	return nil
}

// Schema of refs.cfg.
type RefsCfg struct {
	// List of refs that have configuration files and need to be fetched into
	// luci-config. Refs are accessible through get_refs() API endpoint.
	// A CI service can read all refs of all projects and build them.
	Refs             []*RefsCfg_Ref `protobuf:"bytes,1,rep,name=refs" json:"refs,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RefsCfg) Reset()                    { *m = RefsCfg{} }
func (m *RefsCfg) String() string            { return proto.CompactTextString(m) }
func (*RefsCfg) ProtoMessage()               {}
func (*RefsCfg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RefsCfg) GetRefs() []*RefsCfg_Ref {
	if m != nil {
		return m.Refs
	}
	return nil
}

type RefsCfg_Ref struct {
	// Name of the ref. Must start with "refs/".
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Path to config directory for the ref. Defaults to "infra/config".
	ConfigPath       *string `protobuf:"bytes,3,opt,name=config_path,json=configPath" json:"config_path,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RefsCfg_Ref) Reset()                    { *m = RefsCfg_Ref{} }
func (m *RefsCfg_Ref) String() string            { return proto.CompactTextString(m) }
func (*RefsCfg_Ref) ProtoMessage()               {}
func (*RefsCfg_Ref) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *RefsCfg_Ref) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RefsCfg_Ref) GetConfigPath() string {
	if m != nil && m.ConfigPath != nil {
		return *m.ConfigPath
	}
	return ""
}

func init() {
	proto.RegisterType((*ProjectCfg)(nil), "config.ProjectCfg")
	proto.RegisterType((*RefsCfg)(nil), "config.RefsCfg")
	proto.RegisterType((*RefsCfg_Ref)(nil), "config.RefsCfg.Ref")
}

func init() {
	proto.RegisterFile("github.com/luci/luci-go/common/proto/config/project_config.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8d, 0xb1, 0xaa, 0xc3, 0x20,
	0x14, 0x86, 0xc9, 0x35, 0xe4, 0x92, 0x93, 0xcd, 0x0b, 0x17, 0xe9, 0xd2, 0x90, 0xa5, 0x59, 0x9a,
	0x40, 0xa7, 0xd2, 0xa9, 0xd0, 0x17, 0x08, 0xbe, 0x40, 0xb0, 0xa2, 0x26, 0xa5, 0x6a, 0x88, 0xe6,
	0xfd, 0x8b, 0x9a, 0xb1, 0x8b, 0x9e, 0xef, 0x7c, 0xe7, 0xe7, 0x87, 0xbb, 0x9a, 0xfd, 0xb4, 0x3d,
	0x3b, 0x6e, 0x75, 0xff, 0xde, 0xf8, 0x1c, 0x9f, 0xb3, 0xb2, 0x3d, 0xb7, 0x5a, 0x5b, 0xd3, 0x2f,
	0xab, 0xf5, 0x01, 0x8c, 0x9c, 0x55, 0x80, 0x97, 0xe0, 0x7e, 0x4c, 0xd8, 0x45, 0x87, 0x8b, 0x44,
	0xcd, 0x15, 0x60, 0x48, 0xfe, 0x21, 0x15, 0xc6, 0x90, 0x1b, 0xa6, 0x05, 0xc9, 0xea, 0xac, 0x2d,
	0x69, 0x9c, 0xf1, 0x3f, 0x14, 0x8c, 0x73, 0xe1, 0x1c, 0xf9, 0xa9, 0x51, 0x5b, 0xd2, 0x9d, 0x1a,
	0x03, 0xbf, 0x54, 0x48, 0x17, 0x62, 0x27, 0xc8, 0x57, 0x21, 0x1d, 0xc9, 0x6a, 0xd4, 0x56, 0x97,
	0xbf, 0x6e, 0x6f, 0xda, 0x75, 0xf8, 0x69, 0x3c, 0x38, 0xdc, 0x00, 0x51, 0x21, 0xbf, 0xd6, 0x1c,
	0xa1, 0x4a, 0xb1, 0x71, 0x61, 0x7e, 0x22, 0x28, 0x2a, 0x48, 0xab, 0x81, 0xf9, 0xe9, 0x13, 0x00,
	0x00, 0xff, 0xff, 0x5b, 0xb0, 0x80, 0xb0, 0xf4, 0x00, 0x00, 0x00,
}
