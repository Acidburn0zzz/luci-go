// Code generated by protoc-gen-go.
// source: storage.proto
// DO NOT EDIT!

package svcconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/luci/luci-go/common/proto/google"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Storage is the in-transit storage configuration.
type Storage struct {
	// Type is the transport configuration that is being used.
	//
	// Types that are valid to be assigned to Type:
	//	*Storage_Bigtable
	Type isStorage_Type `protobuf_oneof:"Type"`
	// The maximum lifetime of a log's intermediate storage entries. The Storage
	// instance is free to begin deleting log entries if they are older than this.
	//
	// It is recommended that this be set to 4*[terminal archival threshold],
	// where the terminal archival threshold is the amount of time that the
	// Coordinator will wait on a log stream that has not been terminated before
	// constructing an archive.
	//
	// Waiting at least the archival threshold ensures that the log entries are
	// available for streams that expire. Waiting longer than the threshold is
	// good because a user may be streaming logs from intermediate storage as they
	// become archived. Waiting a *lot* longer is useful to prevent data loss in
	// the event of issues with the archival process.
	MaxLogAge *google_protobuf.Duration `protobuf:"bytes,2,opt,name=max_log_age" json:"max_log_age,omitempty"`
}

func (m *Storage) Reset()                    { *m = Storage{} }
func (m *Storage) String() string            { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()               {}
func (*Storage) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type isStorage_Type interface {
	isStorage_Type()
}

type Storage_Bigtable struct {
	Bigtable *Storage_BigTable `protobuf:"bytes,1,opt,name=bigtable,oneof"`
}

func (*Storage_Bigtable) isStorage_Type() {}

func (m *Storage) GetType() isStorage_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Storage) GetBigtable() *Storage_BigTable {
	if x, ok := m.GetType().(*Storage_Bigtable); ok {
		return x.Bigtable
	}
	return nil
}

func (m *Storage) GetMaxLogAge() *google_protobuf.Duration {
	if m != nil {
		return m.MaxLogAge
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Storage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), []interface{}) {
	return _Storage_OneofMarshaler, _Storage_OneofUnmarshaler, []interface{}{
		(*Storage_Bigtable)(nil),
	}
}

func _Storage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Storage)
	// Type
	switch x := m.Type.(type) {
	case *Storage_Bigtable:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Bigtable); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Storage.Type has unexpected type %T", x)
	}
	return nil
}

func _Storage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Storage)
	switch tag {
	case 1: // Type.bigtable
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Storage_BigTable)
		err := b.DecodeMessage(msg)
		m.Type = &Storage_Bigtable{msg}
		return true, err
	default:
		return false, nil
	}
}

// BigTable is the set of BigTable configuration parameters.
type Storage_BigTable struct {
	// The name of the BigTable instance project.
	Project string `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	// The name of the BigTable instance zone.
	Zone string `protobuf:"bytes,2,opt,name=zone" json:"zone,omitempty"`
	// The name of the BigTable instance cluster.
	Cluster string `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
	// The name of the BigTable instance's log table.
	LogTableName string `protobuf:"bytes,4,opt,name=log_table_name" json:"log_table_name,omitempty"`
}

func (m *Storage_BigTable) Reset()                    { *m = Storage_BigTable{} }
func (m *Storage_BigTable) String() string            { return proto.CompactTextString(m) }
func (*Storage_BigTable) ProtoMessage()               {}
func (*Storage_BigTable) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func init() {
	proto.RegisterType((*Storage)(nil), "svcconfig.Storage")
	proto.RegisterType((*Storage_BigTable)(nil), "svcconfig.Storage.BigTable")
}

var fileDescriptor1 = []byte{
	// 217 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x3c, 0x8e, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x09, 0x44, 0x6d, 0x33, 0xe5, 0x47, 0xf2, 0x02, 0x99, 0x22, 0x21, 0xc4, 0x8a, 0xd5,
	0x44, 0x82, 0x1b, 0x54, 0x2c, 0x58, 0x43, 0xf7, 0x91, 0x6d, 0x5c, 0xcb, 0xc8, 0xf5, 0x54, 0x8e,
	0x83, 0x80, 0x03, 0x72, 0x2e, 0x6a, 0x3b, 0xe9, 0x76, 0xde, 0xf7, 0xde, 0x37, 0x70, 0xd1, 0x47,
	0x0a, 0xc2, 0x68, 0xdc, 0x07, 0x8a, 0xc4, 0x9a, 0xfe, 0x4b, 0x29, 0xf2, 0x5b, 0x6b, 0x56, 0x77,
	0x86, 0xc8, 0x38, 0xdd, 0xe6, 0x40, 0x0e, 0xdb, 0xf6, 0x63, 0x08, 0x22, 0x5a, 0xf2, 0x05, 0x7d,
	0xf8, 0xab, 0x60, 0xfe, 0x5e, 0xca, 0xac, 0x85, 0x85, 0xb4, 0x26, 0x0a, 0xe9, 0x34, 0xaf, 0xee,
	0xab, 0xc7, 0xe5, 0xd3, 0x2d, 0x1e, 0x97, 0x70, 0xa4, 0x70, 0x6d, 0xcd, 0x26, 0x21, 0xaf, 0x27,
	0x0c, 0x61, 0xb9, 0x13, 0xdf, 0x9d, 0x23, 0xd3, 0x1d, 0x12, 0x7e, 0x9a, 0x3b, 0x37, 0x58, 0x94,
	0x38, 0x29, 0xf1, 0x65, 0x54, 0xae, 0xde, 0x60, 0x31, 0xb5, 0xd9, 0x15, 0xcc, 0x0f, 0xc0, 0xa7,
	0x56, 0x31, 0xbb, 0x1a, 0x76, 0x0e, 0xf5, 0x2f, 0xf9, 0xb2, 0xd2, 0xa4, 0x58, 0xb9, 0xa1, 0x8f,
	0x3a, 0xf0, 0xb3, 0x7c, 0xb8, 0x86, 0xcb, 0xe4, 0xc9, 0xdf, 0x75, 0x5e, 0xec, 0x34, 0xaf, 0xd3,
	0x7d, 0x3d, 0x83, 0x7a, 0xf3, 0xb3, 0xd7, 0x72, 0x96, 0x75, 0xcf, 0xff, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x1c, 0x49, 0xbe, 0x19, 0x0b, 0x01, 0x00, 0x00,
}
