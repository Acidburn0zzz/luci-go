// Code generated by protoc-gen-go.
// source: github.com/luci/luci-go/common/proto/logdog/svcconfig/transport.proto
// DO NOT EDIT!

package svcconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Transport is the transport configuration.
type Transport struct {
	// Type is the transport configuration that is being used.
	//
	// Types that are valid to be assigned to Type:
	//	*Transport_Pubsub
	Type isTransport_Type `protobuf_oneof:"Type"`
}

func (m *Transport) Reset()                    { *m = Transport{} }
func (m *Transport) String() string            { return proto.CompactTextString(m) }
func (*Transport) ProtoMessage()               {}
func (*Transport) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type isTransport_Type interface {
	isTransport_Type()
}

type Transport_Pubsub struct {
	Pubsub *Transport_PubSub `protobuf:"bytes,1,opt,name=pubsub,oneof"`
}

func (*Transport_Pubsub) isTransport_Type() {}

func (m *Transport) GetType() isTransport_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Transport) GetPubsub() *Transport_PubSub {
	if x, ok := m.GetType().(*Transport_Pubsub); ok {
		return x.Pubsub
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Transport) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Transport_OneofMarshaler, _Transport_OneofUnmarshaler, _Transport_OneofSizer, []interface{}{
		(*Transport_Pubsub)(nil),
	}
}

func _Transport_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Transport)
	// Type
	switch x := m.Type.(type) {
	case *Transport_Pubsub:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Pubsub); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Transport.Type has unexpected type %T", x)
	}
	return nil
}

func _Transport_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Transport)
	switch tag {
	case 1: // Type.pubsub
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Transport_PubSub)
		err := b.DecodeMessage(msg)
		m.Type = &Transport_Pubsub{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Transport_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Transport)
	// Type
	switch x := m.Type.(type) {
	case *Transport_Pubsub:
		s := proto.Size(x.Pubsub)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// PubSub is a transport configuration for Google Cloud Pub/Sub.
type Transport_PubSub struct {
	// The name of the authentication group for administrators.
	Project string `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	// The name of the authentication group for administrators.
	Topic string `protobuf:"bytes,2,opt,name=topic" json:"topic,omitempty"`
	// The name of the authentication group for administrators.
	Subscription string `protobuf:"bytes,3,opt,name=subscription" json:"subscription,omitempty"`
}

func (m *Transport_PubSub) Reset()                    { *m = Transport_PubSub{} }
func (m *Transport_PubSub) String() string            { return proto.CompactTextString(m) }
func (*Transport_PubSub) ProtoMessage()               {}
func (*Transport_PubSub) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0, 0} }

func init() {
	proto.RegisterType((*Transport)(nil), "svcconfig.Transport")
	proto.RegisterType((*Transport_PubSub)(nil), "svcconfig.Transport.PubSub")
}

func init() {
	proto.RegisterFile("github.com/luci/luci-go/common/proto/logdog/svcconfig/transport.proto", fileDescriptor4)
}

var fileDescriptor4 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x72, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x29, 0x4d, 0xce, 0x04, 0x13, 0xba, 0xe9, 0xf9,
	0xfa, 0x40, 0x81, 0xdc, 0xfc, 0x3c, 0xfd, 0x82, 0xa2, 0xfc, 0x92, 0x7c, 0xfd, 0x9c, 0xfc, 0xf4,
	0x94, 0xfc, 0x74, 0xfd, 0xe2, 0xb2, 0xe4, 0xe4, 0xfc, 0xbc, 0xb4, 0xcc, 0x74, 0xfd, 0x92, 0xa2,
	0xc4, 0xbc, 0xe2, 0x82, 0xfc, 0xa2, 0x12, 0x3d, 0xb0, 0x02, 0x21, 0x4e, 0xb8, 0x94, 0xd2, 0x0a,
	0x46, 0x2e, 0xce, 0x10, 0x98, 0xb4, 0x90, 0x29, 0x17, 0x5b, 0x41, 0x69, 0x52, 0x71, 0x69, 0x92,
	0x04, 0xa3, 0x02, 0xa3, 0x06, 0xb7, 0x91, 0xb4, 0x1e, 0x5c, 0xa5, 0x1e, 0x5c, 0x95, 0x5e, 0x40,
	0x69, 0x52, 0x70, 0x69, 0x92, 0x07, 0x43, 0x10, 0x54, 0xb1, 0x54, 0x0c, 0x17, 0x1b, 0x44, 0x4c,
	0x48, 0x82, 0x8b, 0x1d, 0x68, 0x45, 0x56, 0x6a, 0x72, 0x09, 0xd8, 0x04, 0xce, 0x20, 0x18, 0x57,
	0x48, 0x84, 0x8b, 0xb5, 0x24, 0xbf, 0x20, 0x33, 0x59, 0x82, 0x09, 0x2c, 0x0e, 0xe1, 0x08, 0x29,
	0x71, 0xf1, 0x00, 0x0d, 0x28, 0x4e, 0x2e, 0xca, 0x2c, 0x28, 0xc9, 0xcc, 0xcf, 0x93, 0x60, 0x06,
	0x4b, 0xa2, 0x88, 0x39, 0xb1, 0x71, 0xb1, 0x84, 0x54, 0x16, 0xa4, 0x26, 0xb1, 0x81, 0x1d, 0x6f,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x8f, 0x57, 0xd8, 0x3c, 0x05, 0x01, 0x00, 0x00,
}
