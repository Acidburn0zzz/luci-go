// Code generated by protoc-gen-go.
// source: config.proto
// DO NOT EDIT!

/*
Package svcconfig is a generated protocol buffer package.

It is generated from these files:
	config.proto
	storage.proto
	transport.proto

It has these top-level messages:
	Config
	Coordinator
	Collector
	Storage
	Transport
*/
package svcconfig

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Config is the overall instance configuration.
type Config struct {
	// Configuration for the Pub/Sub instances.
	Transport *Transport `protobuf:"bytes,10,opt,name=transport" json:"transport,omitempty"`
	// Configuration for Storage.
	Storage *Storage `protobuf:"bytes,11,opt,name=storage" json:"storage,omitempty"`
	// Coordinator is the coordinator service configuration.
	Coordinator *Coordinator `protobuf:"bytes,20,opt,name=coordinator" json:"coordinator,omitempty"`
	// Collector is the collector fleet configuration.
	Collector *Collector `protobuf:"bytes,21,opt,name=collector" json:"collector,omitempty"`
}

func (m *Config) Reset()                    { *m = Config{} }
func (m *Config) String() string            { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()               {}
func (*Config) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Config) GetTransport() *Transport {
	if m != nil {
		return m.Transport
	}
	return nil
}

func (m *Config) GetStorage() *Storage {
	if m != nil {
		return m.Storage
	}
	return nil
}

func (m *Config) GetCoordinator() *Coordinator {
	if m != nil {
		return m.Coordinator
	}
	return nil
}

func (m *Config) GetCollector() *Collector {
	if m != nil {
		return m.Collector
	}
	return nil
}

// Coordinator is the Coordinator service configuration.
type Coordinator struct {
	// Project is the name of the AppEngine Project that the Coordinator belongs
	// to.
	Project string `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
	// The name of the authentication group for administrators.
	AdminAuthGroup string `protobuf:"bytes,10,opt,name=admin_auth_group" json:"admin_auth_group,omitempty"`
	// The name of the authentication group for backend services.
	ServiceAuthGroup string `protobuf:"bytes,11,opt,name=service_auth_group" json:"service_auth_group,omitempty"`
}

func (m *Coordinator) Reset()                    { *m = Coordinator{} }
func (m *Coordinator) String() string            { return proto.CompactTextString(m) }
func (*Coordinator) ProtoMessage()               {}
func (*Coordinator) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Collector is the set of configuration parameters for Collector instances.
type Collector struct {
	// Workers is the number of ingest workers to run.
	Workers int32 `protobuf:"varint,1,opt,name=workers" json:"workers,omitempty"`
	// The number of transport worker goroutines to run.
	TransportWorkers int32 `protobuf:"varint,2,opt,name=transport_workers" json:"transport_workers,omitempty"`
}

func (m *Collector) Reset()                    { *m = Collector{} }
func (m *Collector) String() string            { return proto.CompactTextString(m) }
func (*Collector) ProtoMessage()               {}
func (*Collector) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Config)(nil), "svcconfig.Config")
	proto.RegisterType((*Coordinator)(nil), "svcconfig.Coordinator")
	proto.RegisterType((*Collector)(nil), "svcconfig.Collector")
}

var fileDescriptor0 = []byte{
	// 241 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4e, 0xc3, 0x30,
	0x0c, 0x86, 0x55, 0x24, 0x36, 0xc5, 0x05, 0x0d, 0xac, 0x81, 0x42, 0x4f, 0xa8, 0x1c, 0x40, 0x42,
	0xea, 0x01, 0x0e, 0x3c, 0x40, 0x1f, 0x81, 0xdd, 0xab, 0x90, 0x85, 0x52, 0x18, 0x75, 0xe5, 0x64,
	0xe3, 0xa5, 0x78, 0x48, 0x9a, 0x94, 0x86, 0x48, 0x1c, 0xe3, 0xef, 0xf3, 0xef, 0xd8, 0x70, 0xa2,
	0xa9, 0x7f, 0xed, 0xda, 0x6a, 0x60, 0x72, 0x84, 0xc2, 0x1e, 0xf4, 0x54, 0x28, 0x56, 0x8e, 0x55,
	0x6f, 0x07, 0x62, 0x37, 0xb1, 0xe2, 0xd4, 0x3a, 0x62, 0xd5, 0x9a, 0xe9, 0x59, 0x7e, 0x67, 0xb0,
	0xa8, 0x83, 0x8a, 0xb7, 0x20, 0xa2, 0x2c, 0xe1, 0x3a, 0xbb, 0xcb, 0x1f, 0xd6, 0x55, 0x4c, 0xaa,
	0x36, 0x33, 0xc3, 0x1b, 0x58, 0xfe, 0x86, 0xc8, 0x3c, 0x68, 0x98, 0x68, 0xcf, 0x13, 0xc1, 0x7b,
	0xc8, 0x35, 0x11, 0x6f, 0xbb, 0x5e, 0x8d, 0x15, 0xb9, 0x0e, 0xe2, 0x65, 0x22, 0xd6, 0x7f, 0xd4,
	0x8f, 0xd6, 0xb4, 0xdb, 0x19, 0xed, 0xd5, 0x8b, 0x7f, 0xa3, 0xeb, 0x99, 0x95, 0x1b, 0xc8, 0xd3,
	0xbe, 0x15, 0x2c, 0xc7, 0x35, 0xde, 0x47, 0x26, 0xb3, 0xb1, 0x4b, 0xa0, 0x84, 0x33, 0xb5, 0xfd,
	0xec, 0xfa, 0x46, 0xed, 0xdd, 0x5b, 0xd3, 0x32, 0xed, 0x87, 0xb0, 0x8a, 0xc0, 0x02, 0xd0, 0x1a,
	0x3e, 0x74, 0xda, 0xa4, 0xcc, 0xff, 0x5f, 0x94, 0x4f, 0x20, 0xe2, 0x08, 0x9f, 0xf9, 0x45, 0xfc,
	0x61, 0xd8, 0x86, 0xcc, 0x63, 0xbc, 0x82, 0xf3, 0x78, 0x97, 0x66, 0x46, 0x47, 0x1e, 0xbd, 0x2c,
	0xc2, 0x11, 0x1f, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x25, 0x80, 0x4f, 0x7f, 0x01, 0x00,
	0x00,
}
