// Code generated by protoc-gen-go.
// source: annotations.proto
// DO NOT EDIT!

/*
Package milo is a generated protocol buffer package.

It is generated from these files:
	annotations.proto

It has these top-level messages:
	FailureDetails
	Step
	Component
	Command
	Progress
	LogdogStream
	IsolateObject
	DMLink
*/
package milo

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// Status is the expressed root step of this step or substep.
type Status int32

const (
	// The step is still running.
	Status_RUNNING Status = 0
	// The step has finished successfully.
	Status_SUCCESS Status = 1
	// The step has finished unsuccessfully.
	Status_FAILURE Status = 2
	// The step has finished unexpectedly.
	Status_EXCEPTION Status = 3
)

var Status_name = map[int32]string{
	0: "RUNNING",
	1: "SUCCESS",
	2: "FAILURE",
	3: "EXCEPTION",
}
var Status_value = map[string]int32{
	"RUNNING":   0,
	"SUCCESS":   1,
	"FAILURE":   2,
	"EXCEPTION": 3,
}

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}
func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (x *Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Status_value, data, "Status")
	if err != nil {
		return err
	}
	*x = Status(value)
	return nil
}

// Type is the type of failure.
type FailureDetails_Type int32

const (
	// The failure is a general failure.
	FailureDetails_GENERAL FailureDetails_Type = 0
	// The failure is related to a failed infrastructure component, not an error
	// with the Step itself.
	FailureDetails_INFRA FailureDetails_Type = 1
	// The failure is due to a failed Dungeon Master dependency. This should be
	// used if a Step's external depdendency fails and the Step cannot recover
	// or proceed without it.
	FailureDetails_DM_DEPENDENCY_FAILED FailureDetails_Type = 2
)

var FailureDetails_Type_name = map[int32]string{
	0: "GENERAL",
	1: "INFRA",
	2: "DM_DEPENDENCY_FAILED",
}
var FailureDetails_Type_value = map[string]int32{
	"GENERAL":              0,
	"INFRA":                1,
	"DM_DEPENDENCY_FAILED": 2,
}

func (x FailureDetails_Type) Enum() *FailureDetails_Type {
	p := new(FailureDetails_Type)
	*p = x
	return p
}
func (x FailureDetails_Type) String() string {
	return proto.EnumName(FailureDetails_Type_name, int32(x))
}
func (x *FailureDetails_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FailureDetails_Type_value, data, "FailureDetails_Type")
	if err != nil {
		return err
	}
	*x = FailureDetails_Type(value)
	return nil
}

// FailureType provides more details on the nature of the Status.
type FailureDetails struct {
	Type *FailureDetails_Type `protobuf:"varint,1,opt,name=type,enum=milo.FailureDetails_Type" json:"type,omitempty"`
	// An optional string describing the failure.
	Text *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	// If the failure type is DEPENDENCY_FAILED, the failed dependencies should be
	// listed here.
	FailedDmDependency []*DMLink `protobuf:"bytes,3,rep,name=failed_dm_dependency" json:"failed_dm_dependency,omitempty"`
	XXX_unrecognized   []byte    `json:"-"`
}

func (m *FailureDetails) Reset()         { *m = FailureDetails{} }
func (m *FailureDetails) String() string { return proto.CompactTextString(m) }
func (*FailureDetails) ProtoMessage()    {}

func (m *FailureDetails) GetType() FailureDetails_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return FailureDetails_GENERAL
}

func (m *FailureDetails) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *FailureDetails) GetFailedDmDependency() []*DMLink {
	if m != nil {
		return m.FailedDmDependency
	}
	return nil
}

// Generic step or substep state.
type Step struct {
	// The command-line invocation of the step, expressed as an argument vector.
	Command *Command `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	// Optional information detailing the failure. This may be populated if the
	// Step's top-level command Status is set to FAILURE.
	FailureDetails *FailureDetails `protobuf:"bytes,2,opt,name=failure_details" json:"failure_details,omitempty"`
	// Base Component information describing the high-level Step.
	StepComponent *Component `protobuf:"bytes,3,opt,name=step_component" json:"step_component,omitempty"`
	// Sub-components that are part of the Step.
	Components []*Component `protobuf:"bytes,4,rep,name=components" json:"components,omitempty"`
	// Substeps will be constructed as extensions on the parent LogDog stream.
	//
	// For example, if the parent's logging base path is:
	// luci/dm/QUEST/ATTEMPT/EXECUTION/+/
	//
	// Its substep #0 will have logging base path:
	// luci/dm/QUEST/ATTEMPT/EXECUTION/+/steps/0
	//
	// ... which can have known log stream names appended to it for the full
	// log stream path. The following appendages are part of the standard
	// Milo protocol expectations:
	// - .../stdout: A text stream containing the Step's STDOUT.
	// - .../stderr: A text stream containing the Step's STDERR.
	// - .../annotation: A text stream containing the Step's annotation stream
	//                   protobuf (Step message protobuf).
	//
	// For example:
	// - luci/dm/QUEST/ATTEMPT/EXECUTION/+/steps/0/stdout
	// - luci/dm/QUEST/ATTEMPT/EXECUTION/+/steps/0/annotations
	SubstepLogdogNameBase []string `protobuf:"bytes,5,rep,name=substep_logdog_name_base" json:"substep_logdog_name_base,omitempty"`
	XXX_unrecognized      []byte   `json:"-"`
}

func (m *Step) Reset()         { *m = Step{} }
func (m *Step) String() string { return proto.CompactTextString(m) }
func (*Step) ProtoMessage()    {}

func (m *Step) GetCommand() *Command {
	if m != nil {
		return m.Command
	}
	return nil
}

func (m *Step) GetFailureDetails() *FailureDetails {
	if m != nil {
		return m.FailureDetails
	}
	return nil
}

func (m *Step) GetStepComponent() *Component {
	if m != nil {
		return m.StepComponent
	}
	return nil
}

func (m *Step) GetComponents() []*Component {
	if m != nil {
		return m.Components
	}
	return nil
}

func (m *Step) GetSubstepLogdogNameBase() []string {
	if m != nil {
		return m.SubstepLogdogNameBase
	}
	return nil
}

// A Component represents a renderable state.
type Component struct {
	// The display name of the Component.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Type classifies the information associated with the Note.
	Status *Status `protobuf:"varint,2,opt,name=status,enum=milo.Status" json:"status,omitempty"`
	// When the step started, expressed as an RFC3339 string using Z (UTC)
	// timezone.
	StartedTs *string `protobuf:"bytes,3,opt,name=started_ts" json:"started_ts,omitempty"`
	// When the step ended, expressed as an RFC3339 string using Z (UTC) timezone.
	EndedTs *string `protobuf:"bytes,4,opt,name=ended_ts" json:"ended_ts,omitempty"`
	// Arbitrary lines of component text. Each string here is a consecutive line,
	// and should not contain newlines.
	Text []string `protobuf:"bytes,5,rep,name=text" json:"text,omitempty"`
	// The Component's progress.
	Progress *Progress `protobuf:"bytes,6,opt,name=progress" json:"progress,omitempty"`
	// The primary link for this Component. This is the link that interaction
	// with the Component will use.
	Link *Component_Link `protobuf:"bytes,7,opt,name=link" json:"link,omitempty"`
	// Additional links related to the Component. These will be rendered alongside
	// the component.
	OtherLinks       []*Component_Link     `protobuf:"bytes,8,rep,name=other_links" json:"other_links,omitempty"`
	Property         []*Component_Property `protobuf:"bytes,9,rep,name=property" json:"property,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *Component) Reset()         { *m = Component{} }
func (m *Component) String() string { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()    {}

func (m *Component) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Component) GetStatus() Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return Status_RUNNING
}

func (m *Component) GetStartedTs() string {
	if m != nil && m.StartedTs != nil {
		return *m.StartedTs
	}
	return ""
}

func (m *Component) GetEndedTs() string {
	if m != nil && m.EndedTs != nil {
		return *m.EndedTs
	}
	return ""
}

func (m *Component) GetText() []string {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *Component) GetProgress() *Progress {
	if m != nil {
		return m.Progress
	}
	return nil
}

func (m *Component) GetLink() *Component_Link {
	if m != nil {
		return m.Link
	}
	return nil
}

func (m *Component) GetOtherLinks() []*Component_Link {
	if m != nil {
		return m.OtherLinks
	}
	return nil
}

func (m *Component) GetProperty() []*Component_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

// A Link is an optional label followed by a typed link to an external
// resource.
type Component_Link struct {
	// An optional display label for the link.
	Label *string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	// (One of) A base URL to link to.
	Url *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	// (One of) A LogDog stream link.
	LogdogStream *LogdogStream `protobuf:"bytes,3,opt,name=logdog_stream" json:"logdog_stream,omitempty"`
	// (One of) An isolate server link.
	IsolateObject *IsolateObject `protobuf:"bytes,4,opt,name=isolate_object" json:"isolate_object,omitempty"`
	// (One of) A link to a Dungeon Master object.
	DmLink           *DMLink `protobuf:"bytes,5,opt,name=dm_link" json:"dm_link,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Component_Link) Reset()         { *m = Component_Link{} }
func (m *Component_Link) String() string { return proto.CompactTextString(m) }
func (*Component_Link) ProtoMessage()    {}

func (m *Component_Link) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *Component_Link) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *Component_Link) GetLogdogStream() *LogdogStream {
	if m != nil {
		return m.LogdogStream
	}
	return nil
}

func (m *Component_Link) GetIsolateObject() *IsolateObject {
	if m != nil {
		return m.IsolateObject
	}
	return nil
}

func (m *Component_Link) GetDmLink() *DMLink {
	if m != nil {
		return m.DmLink
	}
	return nil
}

// Property is an arbitrary key/value (build) property.
type Component_Property struct {
	// name is the property name.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// value is the optional property value.
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Component_Property) Reset()         { *m = Component_Property{} }
func (m *Component_Property) String() string { return proto.CompactTextString(m) }
func (*Component_Property) ProtoMessage()    {}

func (m *Component_Property) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Component_Property) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// Command contains information about a command-line invocation.
type Command struct {
	// The command-line invocation, expressed as an argument vector.
	CommandLine []string `protobuf:"bytes,1,rep,name=command_line" json:"command_line,omitempty"`
	// The current working directory.
	Cwd              *string              `protobuf:"bytes,2,opt,name=cwd" json:"cwd,omitempty"`
	Environ          *Command_Environment `protobuf:"bytes,3,opt,name=environ" json:"environ,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *Command) Reset()         { *m = Command{} }
func (m *Command) String() string { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()    {}

func (m *Command) GetCommandLine() []string {
	if m != nil {
		return m.CommandLine
	}
	return nil
}

func (m *Command) GetCwd() string {
	if m != nil && m.Cwd != nil {
		return *m.Cwd
	}
	return ""
}

func (m *Command) GetEnviron() *Command_Environment {
	if m != nil {
		return m.Environ
	}
	return nil
}

// Environment represents the state of a process' environment.
type Command_Environment struct {
	// The entries that compose the environment.
	Entries          []*Command_Environment_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *Command_Environment) Reset()         { *m = Command_Environment{} }
func (m *Command_Environment) String() string { return proto.CompactTextString(m) }
func (*Command_Environment) ProtoMessage()    {}

func (m *Command_Environment) GetEntries() []*Command_Environment_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

// Entry is a single key/value environment entry.
type Command_Environment_Entry struct {
	// Name is the name of the environment variable.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Value is the value of the environment variable. This may be empty.
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Command_Environment_Entry) Reset()         { *m = Command_Environment_Entry{} }
func (m *Command_Environment_Entry) String() string { return proto.CompactTextString(m) }
func (*Command_Environment_Entry) ProtoMessage()    {}

func (m *Command_Environment_Entry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Command_Environment_Entry) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// Progress expresses a Component's overall progress. It does this using
// arbitrary "progress units", wich are discrete units of work measured by the
// Component that are either completed or not completed.
//
// A simple construction for "percentage complete" is to set `total` to 100 and
// `completed` to the percentage value.
type Progress struct {
	// The total number of progress units. If missing or zero, no progress is
	// expressed.
	Total *int32 `protobuf:"varint,1,opt,name=total" json:"total,omitempty"`
	// The number of completed progress units. This must always be less than or
	// equal to `total`. If omitted, it is implied to be zero.
	Completed        *int32 `protobuf:"varint,2,opt,name=completed" json:"completed,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Progress) Reset()         { *m = Progress{} }
func (m *Progress) String() string { return proto.CompactTextString(m) }
func (*Progress) ProtoMessage()    {}

func (m *Progress) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *Progress) GetCompleted() int32 {
	if m != nil && m.Completed != nil {
		return *m.Completed
	}
	return 0
}

// LogdogLink is a LogDog stream link.
type LogdogStream struct {
	// The stream's server. If omitted, the server is the same server that this
	// annotation stream is homed on.
	Server *string `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// The log Prefix. If empty, the prefix is the same prefix as this annotation
	// stream.
	Prefix *string `protobuf:"bytes,2,opt,name=prefix" json:"prefix,omitempty"`
	// The log name.
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LogdogStream) Reset()         { *m = LogdogStream{} }
func (m *LogdogStream) String() string { return proto.CompactTextString(m) }
func (*LogdogStream) ProtoMessage()    {}

func (m *LogdogStream) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *LogdogStream) GetPrefix() string {
	if m != nil && m.Prefix != nil {
		return *m.Prefix
	}
	return ""
}

func (m *LogdogStream) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// IsolateObject is an Isolate service object specification.
type IsolateObject struct {
	// The Isolate server. If empty, this is the default Isolate server specified
	// by the project's LUCI config.
	Server *string `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// The isolate object hash.
	Hash             *string `protobuf:"bytes,2,opt,name=hash" json:"hash,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *IsolateObject) Reset()         { *m = IsolateObject{} }
func (m *IsolateObject) String() string { return proto.CompactTextString(m) }
func (*IsolateObject) ProtoMessage()    {}

func (m *IsolateObject) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *IsolateObject) GetHash() string {
	if m != nil && m.Hash != nil {
		return *m.Hash
	}
	return ""
}

// Dependency is a Dungeon Master execution specification.
type DMLink struct {
	// The Dungeon Master server. If empty, this is the default Isolate server
	// specified by the project's LUCI config.
	Server *string `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// The quest name.
	Quest *string `protobuf:"bytes,2,opt,name=quest" json:"quest,omitempty"`
	// The attempt number.
	Attempt *int64 `protobuf:"varint,3,opt,name=attempt" json:"attempt,omitempty"`
	// The execution number.
	Execution        *int64 `protobuf:"varint,4,opt,name=execution" json:"execution,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DMLink) Reset()         { *m = DMLink{} }
func (m *DMLink) String() string { return proto.CompactTextString(m) }
func (*DMLink) ProtoMessage()    {}

func (m *DMLink) GetServer() string {
	if m != nil && m.Server != nil {
		return *m.Server
	}
	return ""
}

func (m *DMLink) GetQuest() string {
	if m != nil && m.Quest != nil {
		return *m.Quest
	}
	return ""
}

func (m *DMLink) GetAttempt() int64 {
	if m != nil && m.Attempt != nil {
		return *m.Attempt
	}
	return 0
}

func (m *DMLink) GetExecution() int64 {
	if m != nil && m.Execution != nil {
		return *m.Execution
	}
	return 0
}

func init() {
	proto.RegisterEnum("milo.Status", Status_name, Status_value)
	proto.RegisterEnum("milo.FailureDetails_Type", FailureDetails_Type_name, FailureDetails_Type_value)
}
