// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/common/eventupload/testdata/testmessage.proto

/*
Package testdata is a generated protocol buffer package.

It is generated from these files:
	go.chromium.org/luci/common/eventupload/testdata/testmessage.proto

It has these top-level messages:
	TestMessage
	NestedTestMessage
*/
package testdata

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/struct"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TestMessage struct {
	Name           string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Timestamp      *google_protobuf1.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	Nested         *NestedTestMessage          `protobuf:"bytes,3,opt,name=nested" json:"nested,omitempty"`
	RepeatedNested []*NestedTestMessage        `protobuf:"bytes,4,rep,name=repeated_nested,json=repeatedNested" json:"repeated_nested,omitempty"`
	// This field will be ignored because it is
	// google.protobuf.Struct.
	WillBeIgnored *google_protobuf.Struct `protobuf:"bytes,5,opt,name=will_be_ignored,json=willBeIgnored" json:"will_be_ignored,omitempty"`
}

func (m *TestMessage) Reset()                    { *m = TestMessage{} }
func (m *TestMessage) String() string            { return proto.CompactTextString(m) }
func (*TestMessage) ProtoMessage()               {}
func (*TestMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TestMessage) GetTimestamp() *google_protobuf1.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *TestMessage) GetNested() *NestedTestMessage {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (m *TestMessage) GetRepeatedNested() []*NestedTestMessage {
	if m != nil {
		return m.RepeatedNested
	}
	return nil
}

func (m *TestMessage) GetWillBeIgnored() *google_protobuf.Struct {
	if m != nil {
		return m.WillBeIgnored
	}
	return nil
}

type NestedTestMessage struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *NestedTestMessage) Reset()                    { *m = NestedTestMessage{} }
func (m *NestedTestMessage) String() string            { return proto.CompactTextString(m) }
func (*NestedTestMessage) ProtoMessage()               {}
func (*NestedTestMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *NestedTestMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*TestMessage)(nil), "testdata.TestMessage")
	proto.RegisterType((*NestedTestMessage)(nil), "testdata.NestedTestMessage")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/common/eventupload/testdata/testmessage.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x49, 0x5b, 0x8b, 0xdd, 0xa2, 0xc5, 0xbd, 0x18, 0xa2, 0x60, 0xe8, 0xc5, 0x9e, 0x76,
	0xc1, 0x5e, 0xbc, 0x09, 0xc5, 0x8b, 0x07, 0x3d, 0xc4, 0xde, 0xc3, 0x26, 0x19, 0xd7, 0x40, 0x36,
	0x13, 0x76, 0x27, 0xfa, 0x53, 0xfc, 0xbb, 0xe2, 0x6e, 0xa3, 0x62, 0x85, 0xde, 0x86, 0x79, 0xdf,
	0x7b, 0xf3, 0x18, 0xb6, 0xd1, 0x28, 0xca, 0x57, 0x8b, 0xa6, 0xee, 0x8d, 0x40, 0xab, 0x65, 0xd3,
	0x97, 0xb5, 0x2c, 0xd1, 0x18, 0x6c, 0x25, 0xbc, 0x41, 0x4b, 0x7d, 0xd7, 0xa0, 0xaa, 0x24, 0x81,
	0xa3, 0x4a, 0x91, 0xf2, 0x83, 0x01, 0xe7, 0x94, 0x06, 0xd1, 0x59, 0x24, 0xe4, 0xc7, 0x83, 0x96,
	0x5c, 0x6a, 0x44, 0xdd, 0x80, 0xf4, 0xfb, 0xa2, 0x7f, 0x91, 0x8e, 0x6c, 0x5f, 0x52, 0xe0, 0x92,
	0xab, 0xbf, 0x2a, 0xd5, 0x06, 0x1c, 0x29, 0xd3, 0x05, 0x60, 0xf9, 0x31, 0x62, 0xf3, 0x2d, 0x38,
	0x7a, 0x0c, 0xf1, 0x9c, 0xb3, 0x49, 0xab, 0x0c, 0xc4, 0x51, 0x1a, 0xad, 0x66, 0x99, 0x9f, 0xf9,
	0x2d, 0x9b, 0x7d, 0xdb, 0xe2, 0x51, 0x1a, 0xad, 0xe6, 0x37, 0x89, 0x08, 0xc1, 0x62, 0x08, 0x16,
	0xdb, 0x81, 0xc8, 0x7e, 0x60, 0xbe, 0x66, 0xd3, 0x16, 0x1c, 0x41, 0x15, 0x8f, 0xbd, 0xed, 0x42,
	0x0c, 0xbd, 0xc5, 0x93, 0xdf, 0xff, 0x3a, 0x9d, 0xed, 0x50, 0x7e, 0xcf, 0x16, 0x16, 0x3a, 0x50,
	0x04, 0x55, 0xbe, 0x73, 0x4f, 0xd2, 0xf1, 0x21, 0xf7, 0xe9, 0xe0, 0x09, 0x12, 0xbf, 0x63, 0x8b,
	0xf7, 0xba, 0x69, 0xf2, 0x02, 0xf2, 0x5a, 0xb7, 0x68, 0xa1, 0x8a, 0x8f, 0x7c, 0x87, 0xf3, 0xbd,
	0xea, 0xcf, 0xfe, 0x63, 0xd9, 0xc9, 0x17, 0xbf, 0x81, 0x87, 0x40, 0x2f, 0xaf, 0xd9, 0xd9, 0xde,
	0x95, 0xff, 0xde, 0x53, 0x4c, 0x7d, 0xd0, 0xfa, 0x33, 0x00, 0x00, 0xff, 0xff, 0x43, 0x02, 0x5d,
	0xc9, 0xd8, 0x01, 0x00, 0x00,
}
