{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "https://www.googleapis.com/auth/userinfo.email"
        }
      }
    }
  },
  "basePath": "/api/catalog/v1",
  "baseUrl": "https://machine-provider.appspot.com/api/catalog/v1",
  "batchPath": "batch",
  "description": "Implements cloud endpoints for the Machine Provider Catalog.",
  "discoveryVersion": "v1",
  "icons": {
    "x16": "https://www.google.com/images/icons/product/search-16.gif",
    "x32": "https://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "catalog:v1",
  "kind": "discovery#restDescription",
  "methods": {
    "add_machine": {
      "description": "Handles an incoming CatalogMachineAdditionRequest.",
      "httpMethod": "POST",
      "id": "catalog.add_machine",
      "path": "add_machine",
      "request": {
        "$ref": "components.machine_provider.rpc_messages.CatalogMachineAdditionRequest",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "components.machine_provider.rpc_messages.CatalogManipulationResponse"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "add_machines": {
      "description": "Handles an incoming CatalogMachineBatchAdditionRequest. Batches are intended to save on RPCs only. The batched requests will not execute transactionally.",
      "httpMethod": "POST",
      "id": "catalog.add_machines",
      "path": "add_machines",
      "request": {
        "$ref": "components.machine_provider.rpc_messages.CatalogMachineBatchAdditionRequest",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "components.machine_provider.rpc_messages.CatalogBatchManipulationResponse"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "delete_machine": {
      "description": "Handles an incoming CatalogMachineDeletionRequest.",
      "httpMethod": "POST",
      "id": "catalog.delete_machine",
      "path": "delete_machine",
      "request": {
        "$ref": "components.machine_provider.rpc_messages.CatalogMachineDeletionRequest",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "components.machine_provider.rpc_messages.CatalogManipulationResponse"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    },
    "get": {
      "description": "Handles an incoming CatalogMachineRetrievalRequest.",
      "httpMethod": "POST",
      "id": "catalog.get",
      "path": "get",
      "request": {
        "$ref": "components.machine_provider.rpc_messages.CatalogMachineRetrievalRequest",
        "parameterName": "resource"
      },
      "response": {
        "$ref": "components.machine_provider.rpc_messages.CatalogMachineRetrievalResponse"
      },
      "scopes": [
        "https://www.googleapis.com/auth/userinfo.email"
      ]
    }
  },
  "name": "catalog",
  "parameters": {
    "alt": {
      "default": "json",
      "description": "Data format for the response.",
      "enum": [
        "json"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json"
      ],
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
      "location": "query",
      "type": "string"
    },
    "userIp": {
      "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
      "location": "query",
      "type": "string"
    }
  },
  "protocol": "rest",
  "rootUrl": "https://machine-provider.appspot.com/api/",
  "schemas": {
    "components.machine_provider.dimensions.Dimensions": {
      "description": "Represents the dimensions of a machine.",
      "id": "components.machine_provider.dimensions.Dimensions",
      "properties": {
        "backend": {
          "enum": [
            "DUMMY",
            "GCE",
            "VSPHERE"
          ],
          "type": "string"
        },
        "disk_gb": {
          "format": "int64",
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "linux_flavor": {
          "enum": [
            "UBUNTU",
            "DEBIAN"
          ],
          "type": "string"
        },
        "memory_gb": {
          "format": "double",
          "type": "number"
        },
        "num_cpus": {
          "format": "int64",
          "type": "string"
        },
        "os_family": {
          "enum": [
            "LINUX",
            "OSX",
            "WINDOWS"
          ],
          "type": "string"
        },
        "os_version": {
          "type": "string"
        },
        "project": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "components.machine_provider.policies.KeyValuePair": {
      "description": "Represents a key-value pair.",
      "id": "components.machine_provider.policies.KeyValuePair",
      "properties": {
        "key": {
          "required": true,
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "components.machine_provider.policies.Policies": {
      "description": "Represents the policies for a machine. There are two Pub/Sub channels of communication for each machine. One is the backend-level channel which the Machine Provider will use to tell the backend that the machine has been leased, or that the machine needs to be reclaimed. The other is the channel between the Machine Provider and the machine itself. The machine should listen for instructions from the Machine Provider on this channel. Since the machine itself is what's being leased out to untrusted users, we will assign this Cloud Pub/Sub topic and give it restricted permissions which only allow it to subscribe to the one topic. On the other hand, the backend is trusted so we allow it to choose its own topic. When a backend adds a machine to the Catalog, it should provide the Pub/Sub topic and project to communicate on regarding the machine, as well as the service account on the machine itself which will be used to authenticate pull requests on the subscription created by the Machine Provider for the machine.",
      "id": "components.machine_provider.policies.Policies",
      "properties": {
        "backend_attributes": {
          "description": "Represents a key-value pair.",
          "items": {
            "$ref": "components.machine_provider.policies.KeyValuePair"
          },
          "type": "array"
        },
        "backend_project": {
          "type": "string"
        },
        "backend_topic": {
          "type": "string"
        },
        "machine_service_account": {
          "type": "string"
        },
        "on_reclamation": {
          "default": "MAKE_AVAILABLE",
          "enum": [
            "MAKE_AVAILABLE",
            "RECLAIM",
            "DELETE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "components.machine_provider.rpc_messages.CatalogBatchManipulationResponse": {
      "description": "Represents a response to a batched catalog manipulation request.",
      "id": "components.machine_provider.rpc_messages.CatalogBatchManipulationResponse",
      "properties": {
        "responses": {
          "description": "Represents a response to a catalog manipulation request.",
          "items": {
            "$ref": "components.machine_provider.rpc_messages.CatalogManipulationResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "components.machine_provider.rpc_messages.CatalogMachineAdditionRequest": {
      "description": "Represents a request to add a machine to the catalog. dimensions.backend must be specified. dimensions.hostname must be unique per backend.",
      "id": "components.machine_provider.rpc_messages.CatalogMachineAdditionRequest",
      "properties": {
        "dimensions": {
          "$ref": "components.machine_provider.dimensions.Dimensions",
          "description": "Represents the dimensions of a machine.",
          "required": true
        },
        "policies": {
          "$ref": "components.machine_provider.policies.Policies",
          "description": "Represents the policies for a machine. There are two Pub/Sub channels of communication for each machine. One is the backend-level channel which the Machine Provider will use to tell the backend that the machine has been leased, or that the machine needs to be reclaimed. The other is the channel between the Machine Provider and the machine itself. The machine should listen for instructions from the Machine Provider on this channel. Since the machine itself is what's being leased out to untrusted users, we will assign this Cloud Pub/Sub topic and give it restricted permissions which only allow it to subscribe to the one topic. On the other hand, the backend is trusted so we allow it to choose its own topic. When a backend adds a machine to the Catalog, it should provide the Pub/Sub topic and project to communicate on regarding the machine, as well as the service account on the machine itself which will be used to authenticate pull requests on the subscription created by the Machine Provider for the machine.",
          "required": true
        }
      },
      "type": "object"
    },
    "components.machine_provider.rpc_messages.CatalogMachineBatchAdditionRequest": {
      "description": "Represents a batched set of CatalogMachineAdditionRequests. dimensions.backend must be specified in each CatalogMachineAdditionRequest. dimensions.hostname must be unique per backend.",
      "id": "components.machine_provider.rpc_messages.CatalogMachineBatchAdditionRequest",
      "properties": {
        "requests": {
          "description": "Represents a request to add a machine to the catalog. dimensions.backend must be specified. dimensions.hostname must be unique per backend.",
          "items": {
            "$ref": "components.machine_provider.rpc_messages.CatalogMachineAdditionRequest"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "components.machine_provider.rpc_messages.CatalogMachineDeletionRequest": {
      "description": "Represents a request to delete a machine in the catalog.",
      "id": "components.machine_provider.rpc_messages.CatalogMachineDeletionRequest",
      "properties": {
        "dimensions": {
          "$ref": "components.machine_provider.dimensions.Dimensions",
          "description": "Represents the dimensions of a machine.",
          "required": true
        }
      },
      "type": "object"
    },
    "components.machine_provider.rpc_messages.CatalogMachineRetrievalRequest": {
      "description": "Represents a request to retrieve a machine from the catalog.",
      "id": "components.machine_provider.rpc_messages.CatalogMachineRetrievalRequest",
      "properties": {
        "backend": {
          "enum": [
            "DUMMY",
            "GCE",
            "VSPHERE"
          ],
          "type": "string"
        },
        "hostname": {
          "required": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "components.machine_provider.rpc_messages.CatalogMachineRetrievalResponse": {
      "description": "Represents a response to a catalog machine retrieval request.",
      "id": "components.machine_provider.rpc_messages.CatalogMachineRetrievalResponse",
      "properties": {
        "dimensions": {
          "$ref": "components.machine_provider.dimensions.Dimensions",
          "description": "Represents the dimensions of a machine."
        },
        "lease_expiration_ts": {
          "format": "int64",
          "type": "string"
        },
        "policies": {
          "$ref": "components.machine_provider.policies.Policies",
          "description": "Represents the policies for a machine. There are two Pub/Sub channels of communication for each machine. One is the backend-level channel which the Machine Provider will use to tell the backend that the machine has been leased, or that the machine needs to be reclaimed. The other is the channel between the Machine Provider and the machine itself. The machine should listen for instructions from the Machine Provider on this channel. Since the machine itself is what's being leased out to untrusted users, we will assign this Cloud Pub/Sub topic and give it restricted permissions which only allow it to subscribe to the one topic. On the other hand, the backend is trusted so we allow it to choose its own topic. When a backend adds a machine to the Catalog, it should provide the Pub/Sub topic and project to communicate on regarding the machine, as well as the service account on the machine itself which will be used to authenticate pull requests on the subscription created by the Machine Provider for the machine."
        },
        "pubsub_subscription": {
          "type": "string"
        },
        "pubsub_subscription_project": {
          "type": "string"
        },
        "pubsub_topic": {
          "type": "string"
        },
        "pubsub_topic_project": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "components.machine_provider.rpc_messages.CatalogManipulationResponse": {
      "description": "Represents a response to a catalog manipulation request.",
      "id": "components.machine_provider.rpc_messages.CatalogManipulationResponse",
      "properties": {
        "error": {
          "enum": [
            "HOSTNAME_REUSE",
            "ENTRY_NOT_FOUND",
            "UNSPECIFIED_BACKEND",
            "MISMATCHED_BACKEND",
            "UNSPECIFIED_HOSTNAME",
            "INVALID_TOPIC",
            "INVALID_PROJECT",
            "UNSPECIFIED_TOPIC",
            "LEASED"
          ],
          "type": "string"
        },
        "machine_addition_request": {
          "$ref": "components.machine_provider.rpc_messages.CatalogMachineAdditionRequest",
          "description": "Represents a request to add a machine to the catalog. dimensions.backend must be specified. dimensions.hostname must be unique per backend."
        },
        "machine_deletion_request": {
          "$ref": "components.machine_provider.rpc_messages.CatalogMachineDeletionRequest",
          "description": "Represents a request to delete a machine in the catalog."
        }
      },
      "type": "object"
    }
  },
  "servicePath": "catalog/v1/",
  "version": "v1"
}