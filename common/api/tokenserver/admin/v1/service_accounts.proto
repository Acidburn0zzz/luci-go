// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package tokenserver.admin;

import "github.com/luci/luci-go/common/api/tokenserver/service_account.proto";
import "github.com/luci/luci-go/common/api/tokenserver/tokens.proto";

// ServiceAccounts is responsible for managing Cloud IAM Service Accounts.
//
// It is callable by the token service itself and by the admins.
service ServiceAccounts {
  // CreateServiceAccount creates Google Cloud IAM service account associated
  // with given host.
  //
  // It uses token server configuration to pick a cloud project and to derive
  // service account ID. See documentation for CertificateAuthorityConfig proto
  // message for more info.
  //
  // This operation is idempotent.
  rpc CreateServiceAccount(CreateServiceAccountRequest) returns (CreateServiceAccountResponse);

  // MintAccessToken generates a new access token for a service account
  // associated with the given host.
  //
  // It will register the service account first, if necessary.
  rpc MintAccessToken(MintAccessTokenRequest) returns (MintAccessTokenResponse);
}

// CreateServiceAccountRequest is parameters for CreateServiceAccount call.
message CreateServiceAccountRequest {
  string ca = 1;   // CN of a CA that signed the host's certificate
  string fqdn = 2; // a host to create an associated service account for (CN of a cert)
  bool force = 3;  // if true, create an account even if the server thinks it exists
}

// CreateServiceAccountResponse is returned by CreateServiceAccount call.
message CreateServiceAccountResponse {
  tokenserver.ServiceAccount service_account = 1; // created service account
}

// MintAccessTokenRequest is parameters for MintAccessToken call.
message MintAccessTokenRequest {
  string ca = 1;   // CN of a CA that signed the host's certificate
  string fqdn = 2; // a host to mint a token for

  repeated string scopes = 3; // list of scopes to request
}

// MintAccessTokenResponse is returned by MintAccessToken call.
message MintAccessTokenResponse {
  tokenserver.ServiceAccount service_account        = 1; // the account the token belongs to
  tokenserver.OAuth2AccessToken oauth2_access_token = 2; // the minted token
}
