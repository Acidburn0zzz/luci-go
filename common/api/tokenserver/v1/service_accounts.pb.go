// Code generated by protoc-gen-go.
// source: service_accounts.proto
// DO NOT EDIT!

package tokenserver

import prpccommon "github.com/luci/luci-go/common/prpc"
import prpc "github.com/luci/luci-go/server/prpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// CreateServiceAccountRequest is parameters for CreateServiceAccount call.
type CreateServiceAccountRequest struct {
	Ca    string `protobuf:"bytes,1,opt,name=ca" json:"ca,omitempty"`
	Fqdn  string `protobuf:"bytes,2,opt,name=fqdn" json:"fqdn,omitempty"`
	Force bool   `protobuf:"varint,3,opt,name=force" json:"force,omitempty"`
}

func (m *CreateServiceAccountRequest) Reset()                    { *m = CreateServiceAccountRequest{} }
func (m *CreateServiceAccountRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateServiceAccountRequest) ProtoMessage()               {}
func (*CreateServiceAccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// CreateServiceAccountResponse is returned by CreateServiceAccount call.
type CreateServiceAccountResponse struct {
	ServiceAccount *ServiceAccount `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount" json:"service_account,omitempty"`
}

func (m *CreateServiceAccountResponse) Reset()                    { *m = CreateServiceAccountResponse{} }
func (m *CreateServiceAccountResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateServiceAccountResponse) ProtoMessage()               {}
func (*CreateServiceAccountResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *CreateServiceAccountResponse) GetServiceAccount() *ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

// MintAccessTokenRequest is parameters for MintAccessToken call.
type MintAccessTokenRequest struct {
	Ca     string   `protobuf:"bytes,1,opt,name=ca" json:"ca,omitempty"`
	Fqdn   string   `protobuf:"bytes,2,opt,name=fqdn" json:"fqdn,omitempty"`
	Scopes []string `protobuf:"bytes,3,rep,name=scopes" json:"scopes,omitempty"`
}

func (m *MintAccessTokenRequest) Reset()                    { *m = MintAccessTokenRequest{} }
func (m *MintAccessTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*MintAccessTokenRequest) ProtoMessage()               {}
func (*MintAccessTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

// MintAccessTokenResponse is returned by MintAccessToken call.
type MintAccessTokenResponse struct {
	ServiceAccount    *ServiceAccount    `protobuf:"bytes,1,opt,name=service_account,json=serviceAccount" json:"service_account,omitempty"`
	Oauth2AccessToken *OAuth2AccessToken `protobuf:"bytes,2,opt,name=oauth2_access_token,json=oauth2AccessToken" json:"oauth2_access_token,omitempty"`
}

func (m *MintAccessTokenResponse) Reset()                    { *m = MintAccessTokenResponse{} }
func (m *MintAccessTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*MintAccessTokenResponse) ProtoMessage()               {}
func (*MintAccessTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *MintAccessTokenResponse) GetServiceAccount() *ServiceAccount {
	if m != nil {
		return m.ServiceAccount
	}
	return nil
}

func (m *MintAccessTokenResponse) GetOauth2AccessToken() *OAuth2AccessToken {
	if m != nil {
		return m.Oauth2AccessToken
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateServiceAccountRequest)(nil), "tokenserver.CreateServiceAccountRequest")
	proto.RegisterType((*CreateServiceAccountResponse)(nil), "tokenserver.CreateServiceAccountResponse")
	proto.RegisterType((*MintAccessTokenRequest)(nil), "tokenserver.MintAccessTokenRequest")
	proto.RegisterType((*MintAccessTokenResponse)(nil), "tokenserver.MintAccessTokenResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for ServiceAccounts service

type ServiceAccountsClient interface {
	// CreateServiceAccount creates Google Cloud IAM service account associated
	// with given host.
	//
	// It uses token server configuration to pick a cloud project and to derive
	// service account ID. See documentation for CertificateAuthorityConfig proto
	// message for more info.
	//
	// This operation is idempotent.
	CreateServiceAccount(ctx context.Context, in *CreateServiceAccountRequest, opts ...grpc.CallOption) (*CreateServiceAccountResponse, error)
	// MintAccessToken generates a new access token for a service account
	// associated with the given host.
	//
	// It will register the service account first, if necessary.
	MintAccessToken(ctx context.Context, in *MintAccessTokenRequest, opts ...grpc.CallOption) (*MintAccessTokenResponse, error)
}
type serviceAccountsPRPCClient struct {
	client *prpccommon.Client
}

func NewServiceAccountsPRPCClient(client *prpccommon.Client) ServiceAccountsClient {
	return &serviceAccountsPRPCClient{client}
}

func (c *serviceAccountsPRPCClient) CreateServiceAccount(ctx context.Context, in *CreateServiceAccountRequest, opts ...grpc.CallOption) (*CreateServiceAccountResponse, error) {
	out := new(CreateServiceAccountResponse)
	err := c.client.Call(ctx, "tokenserver.ServiceAccounts", "CreateServiceAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAccountsPRPCClient) MintAccessToken(ctx context.Context, in *MintAccessTokenRequest, opts ...grpc.CallOption) (*MintAccessTokenResponse, error) {
	out := new(MintAccessTokenResponse)
	err := c.client.Call(ctx, "tokenserver.ServiceAccounts", "MintAccessToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type serviceAccountsClient struct {
	cc *grpc.ClientConn
}

func NewServiceAccountsClient(cc *grpc.ClientConn) ServiceAccountsClient {
	return &serviceAccountsClient{cc}
}

func (c *serviceAccountsClient) CreateServiceAccount(ctx context.Context, in *CreateServiceAccountRequest, opts ...grpc.CallOption) (*CreateServiceAccountResponse, error) {
	out := new(CreateServiceAccountResponse)
	err := grpc.Invoke(ctx, "/tokenserver.ServiceAccounts/CreateServiceAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceAccountsClient) MintAccessToken(ctx context.Context, in *MintAccessTokenRequest, opts ...grpc.CallOption) (*MintAccessTokenResponse, error) {
	out := new(MintAccessTokenResponse)
	err := grpc.Invoke(ctx, "/tokenserver.ServiceAccounts/MintAccessToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ServiceAccounts service

type ServiceAccountsServer interface {
	// CreateServiceAccount creates Google Cloud IAM service account associated
	// with given host.
	//
	// It uses token server configuration to pick a cloud project and to derive
	// service account ID. See documentation for CertificateAuthorityConfig proto
	// message for more info.
	//
	// This operation is idempotent.
	CreateServiceAccount(context.Context, *CreateServiceAccountRequest) (*CreateServiceAccountResponse, error)
	// MintAccessToken generates a new access token for a service account
	// associated with the given host.
	//
	// It will register the service account first, if necessary.
	MintAccessToken(context.Context, *MintAccessTokenRequest) (*MintAccessTokenResponse, error)
}

func RegisterServiceAccountsServer(s prpc.Registrar, srv ServiceAccountsServer) {
	s.RegisterService(&_ServiceAccounts_serviceDesc, srv)
}

func _ServiceAccounts_CreateServiceAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(CreateServiceAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ServiceAccountsServer).CreateServiceAccount(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func _ServiceAccounts_MintAccessToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(MintAccessTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(ServiceAccountsServer).MintAccessToken(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _ServiceAccounts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tokenserver.ServiceAccounts",
	HandlerType: (*ServiceAccountsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateServiceAccount",
			Handler:    _ServiceAccounts_CreateServiceAccount_Handler,
		},
		{
			MethodName: "MintAccessToken",
			Handler:    _ServiceAccounts_MintAccessToken_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor3 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x52, 0xc1, 0x4a, 0xc3, 0x40,
	0x14, 0x24, 0xad, 0x16, 0x7d, 0x91, 0x06, 0xd7, 0x1a, 0x43, 0x2a, 0x22, 0xd1, 0x43, 0xbd, 0xe4,
	0x10, 0xbf, 0xa0, 0xe8, 0x55, 0x85, 0x58, 0xf0, 0x22, 0x94, 0xb8, 0x7d, 0xc5, 0x52, 0xc8, 0xa6,
	0x79, 0x1b, 0x7f, 0xcb, 0x1f, 0xf2, 0x63, 0xdc, 0xec, 0xf6, 0x90, 0x8d, 0xa1, 0x28, 0x78, 0xdb,
	0x99, 0xcc, 0xcc, 0x9b, 0xec, 0x5b, 0xf0, 0x09, 0xcb, 0x8f, 0x15, 0xc7, 0x79, 0xc6, 0xb9, 0xa8,
	0x72, 0x49, 0x71, 0x51, 0x0a, 0x29, 0x98, 0x2b, 0xc5, 0x1a, 0xf3, 0xfa, 0x23, 0x96, 0xe1, 0x69,
	0x4b, 0x64, 0x34, 0xe1, 0x91, 0xd1, 0x18, 0x14, 0xbd, 0xc0, 0xf8, 0xae, 0xc4, 0x4c, 0xe2, 0xb3,
	0x11, 0x4f, 0x8d, 0x36, 0xc5, 0x4d, 0x85, 0x24, 0xd9, 0x10, 0x7a, 0x3c, 0x0b, 0x9c, 0x4b, 0x67,
	0x72, 0x98, 0xaa, 0x13, 0x63, 0xb0, 0xb7, 0xdc, 0x2c, 0xf2, 0xa0, 0xa7, 0x19, 0x7d, 0x66, 0x23,
	0xd8, 0x5f, 0x8a, 0x92, 0x63, 0xd0, 0x57, 0xe4, 0x41, 0x6a, 0x40, 0xb4, 0x80, 0xf3, 0xee, 0x60,
	0x2a, 0x84, 0x6a, 0xc8, 0xee, 0xc1, 0x6b, 0xf5, 0xd3, 0x63, 0xdc, 0x64, 0x1c, 0x37, 0x7e, 0x22,
	0x6e, 0xb9, 0x87, 0x64, 0xe1, 0x68, 0x06, 0xfe, 0xc3, 0x2a, 0x97, 0x0a, 0x22, 0xd1, 0xac, 0xf6,
	0xfd, 0xa5, 0xb9, 0x0f, 0x03, 0xe2, 0xa2, 0x40, 0x52, 0xd5, 0xfb, 0x8a, 0xdd, 0xa2, 0xe8, 0xd3,
	0x81, 0xb3, 0x1f, 0xb1, 0xff, 0xd9, 0x9b, 0x3d, 0xc2, 0x89, 0xc8, 0x2a, 0xf9, 0x9e, 0xd4, 0x21,
	0x6a, 0xc6, 0x5c, 0x7b, 0x75, 0x39, 0x37, 0xb9, 0xb0, 0x92, 0x9e, 0xa6, 0xb5, 0xae, 0x59, 0xe5,
	0xd8, 0x58, 0x1b, 0x54, 0xf2, 0xe5, 0x80, 0x67, 0x8f, 0x24, 0xb6, 0x86, 0x51, 0xd7, 0x06, 0xd8,
	0xc4, 0x8a, 0xdf, 0xb1, 0xfd, 0xf0, 0xe6, 0x17, 0xca, 0xed, 0xb5, 0xbc, 0x82, 0xd7, 0xba, 0x31,
	0x76, 0x65, 0xb9, 0xbb, 0xd7, 0x14, 0x5e, 0xef, 0x16, 0x99, 0xf4, 0xb7, 0x81, 0x7e, 0xac, 0xb7,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x91, 0xd3, 0x18, 0xf8, 0x02, 0x00, 0x00,
}
