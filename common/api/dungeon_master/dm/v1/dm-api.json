{
 "kind": "discovery#restDescription",
 "etag": "\"u_zXkMELIlX4ktyNbM2XKD4vK8E/lgVvhcfpSHVyQd121WxIWCj8a_Q\"",
 "discoveryVersion": "v1",
 "id": "dm:v1",
 "name": "dm",
 "version": "v1",
 "description": "DungeonMaster task scheduling service",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "http://localhost:8080/_ah/api/dm/v1/",
 "basePath": "/_ah/api/dm/v1/",
 "rootUrl": "http://localhost:8080/_ah/api/",
 "servicePath": "dm/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "AddDepsReq": {
   "id": "AddDepsReq",
   "type": "object",
   "properties": {
    "AttemptNum": {
     "type": "integer",
     "format": "uint32"
    },
    "ExecutionKey": {
     "type": "string",
     "format": "byte"
    },
    "QuestID": {
     "type": "string"
    },
    "To": {
     "type": "array",
     "items": {
      "$ref": "AttemptID"
     }
    }
   }
  },
  "AddDepsRsp": {
   "id": "AddDepsRsp",
   "type": "object",
   "properties": {
    "ShouldHalt": {
     "type": "boolean"
    }
   }
  },
  "Attempt": {
   "id": "Attempt",
   "type": "object",
   "properties": {
    "Expiration": {
     "type": "string",
     "description": "The time at which this result will become Expired. Only set for attempts in the Finished or Expired states",
     "format": "date-time"
    },
    "ID": {
     "$ref": "AttemptID"
    },
    "NumExecutions": {
     "type": "integer",
     "description": "The number of executions this Attempt has had.",
     "format": "uint32"
    },
    "NumWaitingDeps": {
     "type": "integer",
     "description": "The number of dependencies that this Attempt is blocked on. Only valid for attempts in the AddingDeps or Blocked states",
     "format": "uint32"
    },
    "State": {
     "type": "integer",
     "description": "The current state of this Attempt",
     "format": "int32"
    }
   }
  },
  "AttemptID": {
   "id": "AttemptID",
   "type": "object",
   "properties": {
    "AttemptNum": {
     "type": "integer",
     "format": "uint32"
    },
    "QuestID": {
     "type": "string"
    }
   }
  },
  "AttemptResult": {
   "id": "AttemptResult",
   "type": "object",
   "properties": {
    "Data": {
     "type": "string",
     "description": "The JSON result for this Attempt"
    },
    "ID": {
     "$ref": "AttemptID"
    }
   }
  },
  "ClaimExecutionRsp": {
   "id": "ClaimExecutionRsp",
   "type": "object",
   "properties": {
    "Attempt": {
     "$ref": "Attempt"
    },
    "Execution": {
     "$ref": "ExecutionInfo"
    },
    "NoneAvailable": {
     "type": "boolean"
    },
    "Quest": {
     "$ref": "Quest"
    }
   }
  },
  "Data": {
   "id": "Data",
   "type": "object",
   "properties": {
    "AttemptResults": {
     "type": "array",
     "items": {
      "$ref": "AttemptResult"
     }
    },
    "Attempts": {
     "type": "array",
     "items": {
      "$ref": "Attempt"
     }
    },
    "BackDeps": {
     "type": "array",
     "items": {
      "$ref": "DepsFromAttempt"
     }
    },
    "Distributors": {
     "type": "array",
     "items": {
      "$ref": "Distributor"
     }
    },
    "Executions": {
     "type": "array",
     "items": {
      "$ref": "ExecutionsForAttempt"
     }
    },
    "FwdDeps": {
     "type": "array",
     "items": {
      "$ref": "DepsFromAttempt"
     }
    },
    "HadErrors": {
     "type": "boolean"
    },
    "More": {
     "type": "boolean",
     "description": "Indicates that the query has more results."
    },
    "Quests": {
     "type": "array",
     "items": {
      "$ref": "Quest"
     }
    },
    "Timeout": {
     "type": "boolean"
    }
   }
  },
  "DepsFromAttempt": {
   "id": "DepsFromAttempt",
   "type": "object",
   "properties": {
    "From": {
     "$ref": "AttemptID",
     "description": "The Quest that this dependency points from"
    },
    "To": {
     "type": "array",
     "items": {
      "$ref": "QuestAttempts"
     }
    }
   }
  },
  "Distributor": {
   "id": "Distributor",
   "type": "object",
   "properties": {
    "Name": {
     "type": "string"
    },
    "URL": {
     "type": "string"
    }
   }
  },
  "EnsureAttemptReq": {
   "id": "EnsureAttemptReq",
   "type": "object",
   "properties": {
    "AttemptNum": {
     "type": "integer",
     "format": "uint32"
    },
    "QuestID": {
     "type": "string"
    }
   }
  },
  "EnsureQuestsReq": {
   "id": "EnsureQuestsReq",
   "type": "object",
   "properties": {
    "QuestDescriptors": {
     "type": "array",
     "items": {
      "$ref": "QuestDescriptor"
     }
    }
   }
  },
  "EnsureQuestsRsp": {
   "id": "EnsureQuestsRsp",
   "type": "object",
   "properties": {
    "QuestIDs": {
     "type": "array",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "ExecutionInfo": {
   "id": "ExecutionInfo",
   "type": "object",
   "properties": {
    "DistributorToken": {
     "type": "string",
     "description": "The distributor Token that this execution has."
    },
    "ExecutionID": {
     "type": "integer",
     "description": "The Execution ID",
     "format": "uint32"
    }
   }
  },
  "ExecutionsForAttempt": {
   "id": "ExecutionsForAttempt",
   "type": "object",
   "properties": {
    "Attempt": {
     "$ref": "AttemptID"
    },
    "Executions": {
     "type": "array",
     "items": {
      "$ref": "ExecutionInfo"
     }
    }
   }
  },
  "FinishAttemptReq": {
   "id": "FinishAttemptReq",
   "type": "object",
   "properties": {
    "AttemptNum": {
     "type": "integer",
     "format": "uint32"
    },
    "ExecutionKey": {
     "type": "string",
     "format": "byte"
    },
    "QuestID": {
     "type": "string"
    },
    "Result": {
     "type": "string",
     "format": "byte"
    },
    "ResultExpiration": {
     "type": "string",
     "format": "date-time"
    }
   }
  },
  "Quest": {
   "id": "Quest",
   "type": "object",
   "properties": {
    "Created": {
     "type": "string",
     "description": "The time that this quest was created",
     "format": "date-time"
    },
    "Distributor": {
     "type": "string",
     "description": "The Distributor to use for this Quest"
    },
    "ID": {
     "type": "string",
     "description": "The Quest ID"
    },
    "Payload": {
     "type": "string",
     "description": "The Quest JSON payload for the distributor"
    }
   }
  },
  "QuestAttempts": {
   "id": "QuestAttempts",
   "type": "object",
   "properties": {
    "Attempts": {
     "type": "array",
     "description": "The Attempt(s) that this dependency points to",
     "items": {
      "type": "integer",
      "format": "uint32"
     }
    },
    "QuestID": {
     "type": "string",
     "description": "The Quest that this dependency points to"
    }
   }
  },
  "QuestDescriptor": {
   "id": "QuestDescriptor",
   "type": "object",
   "properties": {
    "Distributor": {
     "type": "string"
    },
    "Payload": {
     "type": "string",
     "format": "byte"
    }
   }
  }
 },
 "resources": {
  "executions": {
   "methods": {
    "claim": {
     "id": "dm.executions.claim",
     "path": "executions/claim",
     "httpMethod": "GET",
     "description": "TEMP: Claim an execution id/key",
     "response": {
      "$ref": "ClaimExecutionRsp"
     }
    }
   }
  },
  "quests": {
   "methods": {
    "insert": {
     "id": "dm.quests.insert",
     "path": "quests",
     "httpMethod": "PUT",
     "description": "Ensures the existence of one or more Quests",
     "request": {
      "$ref": "EnsureQuestsReq",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "EnsureQuestsRsp"
     }
    },
    "list": {
     "id": "dm.quests.list",
     "path": "quests",
     "httpMethod": "GET",
     "description": "Recursively view all quests",
     "parameters": {
      "From": {
       "type": "string",
       "location": "query"
      },
      "To": {
       "type": "string",
       "location": "query"
      },
      "WithAttempts": {
       "type": "boolean",
       "location": "query"
      }
     },
     "response": {
      "$ref": "Data"
     }
    }
   },
   "resources": {
    "attempts": {
     "methods": {
      "dependencies": {
       "id": "dm.quests.attempts.dependencies",
       "path": "quests/{QuestID}/attempts/{AttemptNum}/dependencies",
       "httpMethod": "PUT",
       "description": "Allows an Execution to add additional dependencies",
       "parameters": {
        "AttemptNum": {
         "type": "integer",
         "required": true,
         "format": "uint32",
         "location": "path"
        },
        "QuestID": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "QuestID",
        "AttemptNum"
       ],
       "request": {
        "$ref": "AddDepsReq",
        "parameterName": "resource"
       },
       "response": {
        "$ref": "AddDepsRsp"
       }
      },
      "finish": {
       "id": "dm.quests.attempts.finish",
       "path": "quests/{QuestID}/attempts/{AttemptNum}/result",
       "httpMethod": "POST",
       "description": "Sets the result of an attempt",
       "parameters": {
        "AttemptNum": {
         "type": "integer",
         "required": true,
         "format": "uint32",
         "location": "path"
        },
        "QuestID": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "QuestID",
        "AttemptNum"
       ],
       "request": {
        "$ref": "FinishAttemptReq",
        "parameterName": "resource"
       }
      },
      "get": {
       "id": "dm.quests.attempts.get",
       "path": "quests/{QuestID}/attempts/{AttemptNum}",
       "httpMethod": "GET",
       "description": "Get the status and dependencies of an Attempt",
       "parameters": {
        "AttemptNum": {
         "type": "integer",
         "required": true,
         "format": "uint32",
         "location": "path"
        },
        "Options.BackDeps": {
         "type": "boolean",
         "location": "query"
        },
        "Options.DFS": {
         "type": "boolean",
         "location": "query"
        },
        "Options.FwdDeps": {
         "type": "boolean",
         "location": "query"
        },
        "Options.MaxDepth": {
         "type": "integer",
         "format": "uint32",
         "location": "query"
        },
        "Options.Result": {
         "type": "boolean",
         "location": "query"
        },
        "QuestID": {
         "type": "string",
         "required": true,
         "location": "path"
        },
        "TimeoutMs": {
         "type": "integer",
         "format": "uint32",
         "location": "query"
        }
       },
       "parameterOrder": [
        "QuestID",
        "AttemptNum"
       ],
       "response": {
        "$ref": "Data"
       }
      },
      "insert": {
       "id": "dm.quests.attempts.insert",
       "path": "quests/{QuestID}/attempts/{AttemptNum}",
       "httpMethod": "PUT",
       "description": "Ensures the existence of an attempt",
       "parameters": {
        "AttemptNum": {
         "type": "integer",
         "required": true,
         "format": "uint32",
         "location": "path"
        },
        "QuestID": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "QuestID",
        "AttemptNum"
       ],
       "request": {
        "$ref": "EnsureAttemptReq",
        "parameterName": "resource"
       }
      },
      "list": {
       "id": "dm.quests.attempts.list",
       "path": "quests/{QuestID}/attempts",
       "httpMethod": "GET",
       "description": "Lists the attempts of a Quest",
       "parameters": {
        "QuestID": {
         "type": "string",
         "required": true,
         "location": "path"
        }
       },
       "parameterOrder": [
        "QuestID"
       ],
       "response": {
        "$ref": "Data"
       }
      }
     }
    }
   }
  }
 }
}
