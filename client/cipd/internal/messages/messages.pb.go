// Code generated by protoc-gen-go.
// source: messages.proto
// DO NOT EDIT!

/*
Package messages is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	BlobWithSHA1
	TagCache
*/
package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// BlobWithSHA1 is a wrapper around a binary blob with SHA1 hash to verify
// its integrity.
type BlobWithSHA1 struct {
	Blob             []byte `protobuf:"bytes,1,opt,name=blob" json:"blob,omitempty"`
	Sha1             []byte `protobuf:"bytes,2,opt,name=sha1" json:"sha1,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BlobWithSHA1) Reset()                    { *m = BlobWithSHA1{} }
func (m *BlobWithSHA1) String() string            { return proto.CompactTextString(m) }
func (*BlobWithSHA1) ProtoMessage()               {}
func (*BlobWithSHA1) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BlobWithSHA1) GetBlob() []byte {
	if m != nil {
		return m.Blob
	}
	return nil
}

func (m *BlobWithSHA1) GetSha1() []byte {
	if m != nil {
		return m.Sha1
	}
	return nil
}

// TagCache stores a mapping (package name, tag) -> instance ID to speed up
// subsequence ResolveVersion calls when tags are used.
type TagCache struct {
	// Capped list of entries, most recently resolved is last.
	Entries          []*TagCache_Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *TagCache) Reset()                    { *m = TagCache{} }
func (m *TagCache) String() string            { return proto.CompactTextString(m) }
func (*TagCache) ProtoMessage()               {}
func (*TagCache) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *TagCache) GetEntries() []*TagCache_Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type TagCache_Entry struct {
	Package          *string `protobuf:"bytes,1,opt,name=package" json:"package,omitempty"`
	Tag              *string `protobuf:"bytes,2,opt,name=tag" json:"tag,omitempty"`
	InstanceId       *string `protobuf:"bytes,3,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TagCache_Entry) Reset()                    { *m = TagCache_Entry{} }
func (m *TagCache_Entry) String() string            { return proto.CompactTextString(m) }
func (*TagCache_Entry) ProtoMessage()               {}
func (*TagCache_Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *TagCache_Entry) GetPackage() string {
	if m != nil && m.Package != nil {
		return *m.Package
	}
	return ""
}

func (m *TagCache_Entry) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *TagCache_Entry) GetInstanceId() string {
	if m != nil && m.InstanceId != nil {
		return *m.InstanceId
	}
	return ""
}

func init() {
	proto.RegisterType((*BlobWithSHA1)(nil), "messages.BlobWithSHA1")
	proto.RegisterType((*TagCache)(nil), "messages.TagCache")
	proto.RegisterType((*TagCache_Entry)(nil), "messages.TagCache.Entry")
}

var fileDescriptor0 = []byte{
	// 189 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x3c, 0x8d, 0x41, 0x0b, 0x82, 0x40,
	0x10, 0x85, 0x31, 0x0b, 0x75, 0x94, 0x88, 0x3d, 0x2d, 0x5d, 0x0a, 0x4f, 0x9e, 0x04, 0x3d, 0x74,
	0xaf, 0x08, 0xea, 0xba, 0x09, 0x1d, 0x63, 0xd4, 0x45, 0x97, 0x4a, 0xc5, 0xdd, 0x4b, 0xff, 0xa3,
	0x1f, 0xdc, 0xba, 0xb1, 0xdd, 0xde, 0xfb, 0xe6, 0x1b, 0x1e, 0x2c, 0x5f, 0x5c, 0x4a, 0x6c, 0xb8,
	0x4c, 0x87, 0xb1, 0x57, 0x3d, 0xf1, 0x6d, 0x8f, 0x77, 0x10, 0x1d, 0x9e, 0x7d, 0x79, 0x13, 0xaa,
	0xbd, 0x9e, 0xf7, 0x19, 0x21, 0x30, 0x2f, 0x75, 0xa7, 0xce, 0xd6, 0x49, 0x22, 0x66, 0xf2, 0xc4,
	0x64, 0x8b, 0x19, 0x9d, 0xfd, 0xd8, 0x94, 0xe3, 0x8f, 0x03, 0x7e, 0x81, 0xcd, 0x11, 0xab, 0x96,
	0x93, 0x1c, 0x3c, 0xde, 0xa9, 0x51, 0x70, 0xa9, 0xff, 0xdc, 0x24, 0xcc, 0x69, 0xfa, 0x1f, 0xb4,
	0x52, 0x7a, 0xd2, 0xc6, 0x9b, 0x59, 0x71, 0x5d, 0xc0, 0xc2, 0x10, 0x42, 0xc1, 0x1b, 0xb0, 0x7a,
	0x68, 0xd9, 0x8c, 0x06, 0xcc, 0x56, 0xb2, 0x02, 0x57, 0x61, 0x63, 0x66, 0x03, 0x36, 0x45, 0xb2,
	0x81, 0x50, 0x74, 0x52, 0x61, 0x57, 0xf1, 0xbb, 0xa8, 0xa9, 0x6b, 0x2e, 0x60, 0xd1, 0xa5, 0xfe,
	0x06, 0x00, 0x00, 0xff, 0xff, 0xec, 0xc9, 0x23, 0x2e, 0xe9, 0x00, 0x00, 0x00,
}
