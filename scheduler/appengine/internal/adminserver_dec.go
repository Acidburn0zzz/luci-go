// Code generated by svcdec; DO NOT EDIT

package internal

import (
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"

	v1 "go.chromium.org/luci/scheduler/api/scheduler/v1"
)

type DecoratedAdmin struct {
	// Service is the service to decorate.
	Service AdminServer
	// Prelude is called for each method before forwarding the call to Service.
	// If Prelude returns an error, then the call is skipped and the error is
	// processed via the Postlude (if one is defined), or it is returned directly.
	Prelude func(c context.Context, methodName string, req proto.Message) (context.Context, error)
	// Postlude is called for each method after Service has processed the call, or
	// after the Prelude has returned an error. This takes the the Service's
	// response proto (which may be nil) and/or any error. The decorated
	// service will return the response (possibly mutated) and error that Postlude
	// returns.
	Postlude func(c context.Context, methodName string, rsp proto.Message, err error) error
}

func (s *DecoratedAdmin) GetInternalJobState(c context.Context, req *v1.JobRef) (rsp *InternalJobState, err error) {
	var newCtx context.Context
	if s.Prelude != nil {
		newCtx, err = s.Prelude(c, "GetInternalJobState", req)
	}
	if err == nil {
		c = newCtx
		rsp, err = s.Service.GetInternalJobState(c, req)
	}
	if s.Postlude != nil {
		err = s.Postlude(c, "GetInternalJobState", rsp, err)
	}
	return
}
