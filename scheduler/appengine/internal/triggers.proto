// Copyright 2017 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package internal.triggers;

option go_package = "internal";

import "google/protobuf/timestamp.proto";
import "go.chromium.org/luci/scheduler/api/scheduler/v1/triggers.proto";


// Trigger can be emitted by triggering tasks (such as Gitiles tasks) and
// consumed by triggered tasks (such as Buildbucket tasks).
message Trigger {
  // Unique in time identifier of the trigger.
  //
  // It is used to deduplicate and hence provide idempotency for adding
  // a trigger. Must be provided by whoever emits the trigger.
  string id = 1;

  // ID of a job that emitted this trigger.
  //
  // Set by the engine, can't be overridden.
  string job_id = 2;

  // ID of an invocation that emitted this trigger.
  //
  // Set by the engine, can't be overridden.
  int64 invocation_id = 3;

  // Timestamp when the trigger was created.
  //
  // Set by the engine, can't be overridden.
  google.protobuf.Timestamp created = 4;

  // User friendly name for this trigger that shows up in UI.
  //
  // Can be provided by whoever emits the trigger. Doesn't have to be unique.
  string title = 5;

  // Optional HTTP link to display in UI.
  //
  // Can be provided by whoever emits the trigger. Doesn't have to be unique.
  string url = 6;

  // Actual trigger data that depends on type of the trigger.
  oneof payload {
    scheduler.NoopTrigger noop = 50;
    scheduler.GitilesTrigger gitiles = 51;
  }
}


// TriggerList is what we store in datastore entities.
message TriggerList {
  repeated Trigger triggers = 1;
}
