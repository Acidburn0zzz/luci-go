// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/luci/luci-go/scheduler/api/scheduler/v1/scheduler.proto

/*
Package scheduler is a generated protocol buffer package.

It is generated from these files:
	github.com/luci/luci-go/scheduler/api/scheduler/v1/scheduler.proto

It has these top-level messages:
	JobsRequest
	JobsReply
	Job
	JobState
*/
package scheduler

import prpc "github.com/luci/luci-go/grpc/prpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobsRequest struct {
	// If not specified or "", all projects' jobs are returned.
	Project string `protobuf:"bytes,1,opt,name=project" json:"project,omitempty"`
}

func (m *JobsRequest) Reset()                    { *m = JobsRequest{} }
func (m *JobsRequest) String() string            { return proto.CompactTextString(m) }
func (*JobsRequest) ProtoMessage()               {}
func (*JobsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *JobsRequest) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

type JobsReply struct {
	Jobs []*Job `protobuf:"bytes,1,rep,name=jobs" json:"jobs,omitempty"`
}

func (m *JobsReply) Reset()                    { *m = JobsReply{} }
func (m *JobsReply) String() string            { return proto.CompactTextString(m) }
func (*JobsReply) ProtoMessage()               {}
func (*JobsReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JobsReply) GetJobs() []*Job {
	if m != nil {
		return m.Jobs
	}
	return nil
}

type Job struct {
	Name     string    `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Project  string    `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	Schedule string    `protobuf:"bytes,3,opt,name=schedule" json:"schedule,omitempty"`
	State    *JobState `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
}

func (m *Job) Reset()                    { *m = Job{} }
func (m *Job) String() string            { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()               {}
func (*Job) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Job) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Job) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *Job) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *Job) GetState() *JobState {
	if m != nil {
		return m.State
	}
	return nil
}

type JobState struct {
	UiStatus string `protobuf:"bytes,1,opt,name=ui_status,json=uiStatus" json:"ui_status,omitempty"`
}

func (m *JobState) Reset()                    { *m = JobState{} }
func (m *JobState) String() string            { return proto.CompactTextString(m) }
func (*JobState) ProtoMessage()               {}
func (*JobState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *JobState) GetUiStatus() string {
	if m != nil {
		return m.UiStatus
	}
	return ""
}

func init() {
	proto.RegisterType((*JobsRequest)(nil), "scheduler.JobsRequest")
	proto.RegisterType((*JobsReply)(nil), "scheduler.JobsReply")
	proto.RegisterType((*Job)(nil), "scheduler.Job")
	proto.RegisterType((*JobState)(nil), "scheduler.JobState")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Scheduler service

type SchedulerClient interface {
	// GetJobs fetches all jobs satisfying JobsRequest and visibility ACLs.
	GetJobs(ctx context.Context, in *JobsRequest, opts ...grpc.CallOption) (*JobsReply, error)
}
type schedulerPRPCClient struct {
	client *prpc.Client
}

func NewSchedulerPRPCClient(client *prpc.Client) SchedulerClient {
	return &schedulerPRPCClient{client}
}

func (c *schedulerPRPCClient) GetJobs(ctx context.Context, in *JobsRequest, opts ...grpc.CallOption) (*JobsReply, error) {
	out := new(JobsReply)
	err := c.client.Call(ctx, "scheduler.Scheduler", "GetJobs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type schedulerClient struct {
	cc *grpc.ClientConn
}

func NewSchedulerClient(cc *grpc.ClientConn) SchedulerClient {
	return &schedulerClient{cc}
}

func (c *schedulerClient) GetJobs(ctx context.Context, in *JobsRequest, opts ...grpc.CallOption) (*JobsReply, error) {
	out := new(JobsReply)
	err := grpc.Invoke(ctx, "/scheduler.Scheduler/GetJobs", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Scheduler service

type SchedulerServer interface {
	// GetJobs fetches all jobs satisfying JobsRequest and visibility ACLs.
	GetJobs(context.Context, *JobsRequest) (*JobsReply, error)
}

func RegisterSchedulerServer(s prpc.Registrar, srv SchedulerServer) {
	s.RegisterService(&_Scheduler_serviceDesc, srv)
}

func _Scheduler_GetJobs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SchedulerServer).GetJobs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/scheduler.Scheduler/GetJobs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SchedulerServer).GetJobs(ctx, req.(*JobsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Scheduler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "scheduler.Scheduler",
	HandlerType: (*SchedulerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJobs",
			Handler:    _Scheduler_GetJobs_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/luci/luci-go/scheduler/api/scheduler/v1/scheduler.proto",
}

func init() {
	proto.RegisterFile("github.com/luci/luci-go/scheduler/api/scheduler/v1/scheduler.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 258 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0xa9, 0xab, 0xae, 0x7d, 0x05, 0x0f, 0x4f, 0x91, 0x30, 0x2f, 0x25, 0x97, 0xd5, 0x83,
	0x2d, 0xd6, 0x83, 0x77, 0x11, 0x84, 0x1e, 0xdb, 0x3f, 0x40, 0x9a, 0x1a, 0xb6, 0x8c, 0xce, 0xc4,
	0x26, 0x11, 0xe6, 0x5f, 0x2f, 0xcd, 0x96, 0x6d, 0xc5, 0x4b, 0xc8, 0xef, 0xfb, 0x1e, 0xdf, 0x97,
	0x3c, 0x78, 0x5d, 0x09, 0xb3, 0xb6, 0x2c, 0xef, 0xe4, 0xb6, 0xe8, 0x6d, 0x27, 0xdc, 0xf1, 0xb8,
	0x92, 0x85, 0xee, 0xd6, 0xfc, 0xd3, 0xf6, 0x7c, 0x28, 0x5a, 0x25, 0xce, 0xe8, 0xe7, 0xe9, 0x04,
	0xb9, 0x1a, 0xa4, 0x91, 0x18, 0x1f, 0x05, 0xba, 0x84, 0xa4, 0x92, 0x4c, 0xd7, 0xfc, 0xdb, 0x72,
	0x6d, 0x90, 0xc0, 0x5c, 0x0d, 0x72, 0xc3, 0x3b, 0x43, 0x82, 0x34, 0xc8, 0xe2, 0xda, 0x23, 0x2d,
	0x20, 0xde, 0x0f, 0xaa, 0x7e, 0x87, 0x14, 0xc2, 0x8d, 0x64, 0x9a, 0x04, 0xe9, 0x2c, 0x4b, 0xca,
	0xeb, 0xfc, 0x54, 0x50, 0x49, 0x56, 0x3b, 0x8f, 0xfe, 0xc2, 0xac, 0x92, 0x0c, 0x11, 0xc2, 0xaf,
	0x76, 0xcb, 0x0f, 0x71, 0xee, 0x7e, 0xde, 0x72, 0x31, 0x69, 0xc1, 0x05, 0x44, 0x3e, 0x8b, 0xcc,
	0x9c, 0x75, 0x64, 0x7c, 0x80, 0x4b, 0x6d, 0x5a, 0xc3, 0x49, 0x98, 0x06, 0x59, 0x52, 0xde, 0x4c,
	0x5b, 0x9b, 0xd1, 0xaa, 0xf7, 0x13, 0x74, 0x09, 0x91, 0x97, 0xf0, 0x1e, 0x62, 0x2b, 0x3e, 0x46,
	0xdd, 0xea, 0xc3, 0x2b, 0x22, 0x2b, 0x1a, 0xc7, 0xe5, 0x1b, 0xc4, 0x8d, 0x4f, 0xc1, 0x17, 0x98,
	0xbf, 0x73, 0x33, 0xfe, 0x12, 0xef, 0xa6, 0xe1, 0x7e, 0x3f, 0x8b, 0xdb, 0x7f, 0xba, 0xea, 0x77,
	0xec, 0xca, 0xad, 0xf5, 0xf9, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x68, 0x39, 0x5e, 0x77, 0x9c, 0x01,
	0x00, 0x00,
}
