// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/buildbucket/proto/rpc.proto

package buildbucketpb

import prpc "go.chromium.org/luci/grpc/prpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf2 "google.golang.org/genproto/protobuf/field_mask"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A request message for GetBuild rpc.
type GetBuildRequest struct {
	// Build id.
	// Mutually exclusive with builder and number.
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Builder of the build.
	// Requires number. Mutually exclusive with id.
	Builder *Builder_ID `protobuf:"bytes,2,opt,name=builder" json:"builder,omitempty"`
	// Build number.
	// Requires builder. Mutually exclusive with id.
	BuildNumber int32 `protobuf:"varint,3,opt,name=build_number,json=buildNumber" json:"build_number,omitempty"`
	// Fields to include in the repsonse.
	// If not set, the default mask is used, see Build message comments for the
	// list of fields returned by default.
	//
	// Supports advanced semantics, see
	// https://chromium.googlesource.com/infra/luci/luci-py/+/f9ae69a37c4bdd0e08a8b0f7e123f6e403e774eb/appengine/components/components/protoutil/field_masks.py#7
	// In particular, if the client needs only some output properties, they
	// can be request them with paths "output.properties.fields.foo",
	// "output.properties.fields.`a long property name`".
	Fields *google_protobuf2.FieldMask `protobuf:"bytes,100,opt,name=fields" json:"fields,omitempty"`
}

func (m *GetBuildRequest) Reset()                    { *m = GetBuildRequest{} }
func (m *GetBuildRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBuildRequest) ProtoMessage()               {}
func (*GetBuildRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *GetBuildRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetBuildRequest) GetBuilder() *Builder_ID {
	if m != nil {
		return m.Builder
	}
	return nil
}

func (m *GetBuildRequest) GetBuildNumber() int32 {
	if m != nil {
		return m.BuildNumber
	}
	return 0
}

func (m *GetBuildRequest) GetFields() *google_protobuf2.FieldMask {
	if m != nil {
		return m.Fields
	}
	return nil
}

func init() {
	proto.RegisterType((*GetBuildRequest)(nil), "buildbucket.v2.GetBuildRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Builds service

type BuildsClient interface {
	// Gets a build.
	//
	// By default the returned build does not include all fields.
	// See GetBuildRequest.fields.
	GetBuild(ctx context.Context, in *GetBuildRequest, opts ...grpc.CallOption) (*Build, error)
}
type buildsPRPCClient struct {
	client *prpc.Client
}

func NewBuildsPRPCClient(client *prpc.Client) BuildsClient {
	return &buildsPRPCClient{client}
}

func (c *buildsPRPCClient) GetBuild(ctx context.Context, in *GetBuildRequest, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := c.client.Call(ctx, "buildbucket.v2.Builds", "GetBuild", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

type buildsClient struct {
	cc *grpc.ClientConn
}

func NewBuildsClient(cc *grpc.ClientConn) BuildsClient {
	return &buildsClient{cc}
}

func (c *buildsClient) GetBuild(ctx context.Context, in *GetBuildRequest, opts ...grpc.CallOption) (*Build, error) {
	out := new(Build)
	err := grpc.Invoke(ctx, "/buildbucket.v2.Builds/GetBuild", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Builds service

type BuildsServer interface {
	// Gets a build.
	//
	// By default the returned build does not include all fields.
	// See GetBuildRequest.fields.
	GetBuild(context.Context, *GetBuildRequest) (*Build, error)
}

func RegisterBuildsServer(s prpc.Registrar, srv BuildsServer) {
	s.RegisterService(&_Builds_serviceDesc, srv)
}

func _Builds_GetBuild_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBuildRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuildsServer).GetBuild(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/buildbucket.v2.Builds/GetBuild",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuildsServer).GetBuild(ctx, req.(*GetBuildRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Builds_serviceDesc = grpc.ServiceDesc{
	ServiceName: "buildbucket.v2.Builds",
	HandlerType: (*BuildsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBuild",
			Handler:    _Builds_GetBuild_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "go.chromium.org/luci/buildbucket/proto/rpc.proto",
}

func init() { proto.RegisterFile("go.chromium.org/luci/buildbucket/proto/rpc.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 268 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x6d, 0x87, 0x55, 0x32, 0x99, 0x10, 0x10, 0x4a, 0x2f, 0xd6, 0x9d, 0x7a, 0x4a, 0x24,
	0x0e, 0x2f, 0xde, 0xca, 0x50, 0x3c, 0xb8, 0x43, 0x8e, 0x5e, 0xc6, 0xd2, 0x64, 0x35, 0xb4, 0x35,
	0x35, 0x69, 0xfc, 0xb3, 0xfc, 0x1b, 0x65, 0x2f, 0x2b, 0xcc, 0xe1, 0x61, 0xb7, 0xc7, 0xef, 0x7d,
	0x5f, 0xde, 0xf7, 0x05, 0xdd, 0xd7, 0x86, 0x54, 0x1f, 0xd6, 0x74, 0xda, 0x77, 0xc4, 0xd8, 0x9a,
	0xb6, 0xbe, 0xd2, 0x54, 0x78, 0xdd, 0x4a, 0xe1, 0xab, 0x46, 0x0d, 0xb4, 0xb7, 0x66, 0x30, 0xd4,
	0xf6, 0x15, 0x81, 0x09, 0xcf, 0x0e, 0x96, 0xe4, 0x9b, 0x65, 0x79, 0x6d, 0x4c, 0xdd, 0xaa, 0xa0,
	0x13, 0x7e, 0x4b, 0xb7, 0x5a, 0xb5, 0x72, 0xdd, 0x6d, 0x5c, 0x13, 0x1c, 0x19, 0x3b, 0xf1, 0x06,
	0x90, 0xe0, 0x99, 0xff, 0x44, 0xe8, 0xfa, 0x45, 0x0d, 0xe5, 0x0e, 0x71, 0xf5, 0xe5, 0x95, 0x1b,
	0xf0, 0x0c, 0xc5, 0x5a, 0xa6, 0x51, 0x1e, 0x15, 0x13, 0x1e, 0x6b, 0x89, 0x17, 0xe8, 0x02, 0x2c,
	0xca, 0xa6, 0x71, 0x1e, 0x15, 0x53, 0x96, 0x91, 0xbf, 0xd9, 0x48, 0x19, 0xd6, 0xe4, 0x75, 0xc9,
	0x47, 0x29, 0xbe, 0x43, 0x57, 0x30, 0xae, 0x3f, 0x7d, 0x27, 0x94, 0x4d, 0x27, 0x79, 0x54, 0x9c,
	0xf3, 0x29, 0xb0, 0x15, 0x20, 0xcc, 0x50, 0x02, 0x25, 0x5c, 0x2a, 0xf7, 0xef, 0x86, 0x8e, 0x64,
	0xec, 0x48, 0x9e, 0x77, 0xeb, 0xb7, 0x8d, 0x6b, 0xf8, 0x5e, 0xc9, 0x56, 0x28, 0x81, 0x6b, 0x0e,
	0x2f, 0xd1, 0xe5, 0x98, 0x1c, 0xdf, 0x1e, 0x27, 0x3a, 0xea, 0x94, 0xdd, 0xfc, 0x1b, 0x79, 0x7e,
	0x56, 0x3e, 0xbe, 0x2f, 0x4e, 0xfb, 0xb6, 0xa7, 0x03, 0xd2, 0x0b, 0x91, 0x00, 0x7c, 0xf8, 0x0d,
	0x00, 0x00, 0xff, 0xff, 0xa4, 0xd9, 0x61, 0xd4, 0xd9, 0x01, 0x00, 0x00,
}
