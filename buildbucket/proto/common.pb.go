// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/buildbucket/proto/common.proto

package buildbucketpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Status of a build or a step.
type Status int32

const (
	// Unspecified state. Meaning depends on the context.
	Status_STATUS_UNSPECIFIED Status = 0
	// Build was scheduled, but did not start or end yet.
	Status_SCHEDULED Status = 1
	// Build/step has started.
	Status_STARTED Status = 2
	// A build/step ended successfully.
	Status_SUCCESS Status = 4
	// A build/step ended unsuccessfully due to the input,
	// e.g. tests failed, and NOT due to a build infrastructure failure.
	Status_FAILURE Status = 8
	// A build/step ended unsuccessfully due to a build infrastructure failure.
	Status_INFRA_FAILURE Status = 16
	// A build was cancelled explicitly, e.g. via an RPC.
	Status_CANCELED Status = 32
)

var Status_name = map[int32]string{
	0:  "STATUS_UNSPECIFIED",
	1:  "SCHEDULED",
	2:  "STARTED",
	4:  "SUCCESS",
	8:  "FAILURE",
	16: "INFRA_FAILURE",
	32: "CANCELED",
}
var Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"SCHEDULED":          1,
	"STARTED":            2,
	"SUCCESS":            4,
	"FAILURE":            8,
	"INFRA_FAILURE":      16,
	"CANCELED":           32,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// A Gerrit patchset.
type GerritChange struct {
	// Gerrit hostname, e.g. "chromium-review.googlesource.com".
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	// Gerrit project, e.g. "chromium/src".
	Project string `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	// Change number, e.g. 12345.
	Change int64 `protobuf:"varint,3,opt,name=change" json:"change,omitempty"`
	// Patch set number, e.g. 1.
	Patchset int64 `protobuf:"varint,4,opt,name=patchset" json:"patchset,omitempty"`
}

func (m *GerritChange) Reset()                    { *m = GerritChange{} }
func (m *GerritChange) String() string            { return proto.CompactTextString(m) }
func (*GerritChange) ProtoMessage()               {}
func (*GerritChange) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *GerritChange) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GerritChange) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *GerritChange) GetChange() int64 {
	if m != nil {
		return m.Change
	}
	return 0
}

func (m *GerritChange) GetPatchset() int64 {
	if m != nil {
		return m.Patchset
	}
	return 0
}

// A landed Git commit hosted on Gitiles.
type GitilesCommit struct {
	// Gitiles hostname, e.g. "chromium.googlesource.com".
	Host string `protobuf:"bytes,1,opt,name=host" json:"host,omitempty"`
	// Repository name on the host, e.g. "chromium/src".
	Project string `protobuf:"bytes,2,opt,name=project" json:"project,omitempty"`
	// Commit HEX SHA1.
	Id string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	// Optional, associated git ref, e.g. "refs/heads/master".
	// NOT a branch name: if specified, must start with "refs/".
	Ref string `protobuf:"bytes,4,opt,name=ref" json:"ref,omitempty"`
}

func (m *GitilesCommit) Reset()                    { *m = GitilesCommit{} }
func (m *GitilesCommit) String() string            { return proto.CompactTextString(m) }
func (*GitilesCommit) ProtoMessage()               {}
func (*GitilesCommit) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GitilesCommit) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GitilesCommit) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *GitilesCommit) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GitilesCommit) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

// A key-value pair of strings.
type StringPair struct {
	Key   string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *StringPair) Reset()                    { *m = StringPair{} }
func (m *StringPair) String() string            { return proto.CompactTextString(m) }
func (*StringPair) ProtoMessage()               {}
func (*StringPair) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *StringPair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *StringPair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*GerritChange)(nil), "buildbucket.v2.GerritChange")
	proto.RegisterType((*GitilesCommit)(nil), "buildbucket.v2.GitilesCommit")
	proto.RegisterType((*StringPair)(nil), "buildbucket.v2.StringPair")
	proto.RegisterEnum("buildbucket.v2.Status", Status_name, Status_value)
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/buildbucket/proto/common.proto", fileDescriptor1)
}

var fileDescriptor1 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x41, 0xef, 0x9a, 0x40,
	0x14, 0xc4, 0x0b, 0x5a, 0xff, 0xf2, 0xaa, 0x86, 0x6e, 0x1a, 0x43, 0x7a, 0x32, 0x9e, 0x4c, 0x0f,
	0x90, 0x54, 0xd3, 0x4b, 0x4f, 0x74, 0x59, 0x2d, 0x89, 0x31, 0x86, 0x85, 0x4b, 0x2f, 0x06, 0x70,
	0x0b, 0x5b, 0xc1, 0x25, 0xcb, 0x62, 0xd3, 0x6f, 0xdf, 0xb0, 0xd5, 0xc6, 0x63, 0x7b, 0x9b, 0xdf,
	0x4c, 0xde, 0xcc, 0xe1, 0xc1, 0xba, 0x10, 0x6e, 0x5e, 0x4a, 0x51, 0xf3, 0xae, 0x76, 0x85, 0x2c,
	0xbc, 0xaa, 0xcb, 0xb9, 0x97, 0x75, 0xbc, 0x3a, 0x67, 0x5d, 0x7e, 0x61, 0xca, 0x6b, 0xa4, 0x50,
	0xc2, 0xcb, 0x45, 0x5d, 0x8b, 0xab, 0xab, 0x01, 0xcd, 0x9e, 0x72, 0xf7, 0xf6, 0x71, 0xd9, 0xc0,
	0x64, 0xc7, 0xa4, 0xe4, 0x0a, 0x97, 0xe9, 0xb5, 0x60, 0x08, 0xc1, 0xb0, 0x14, 0xad, 0x72, 0x8c,
	0x85, 0xb1, 0xb2, 0x22, 0xad, 0x91, 0x03, 0x2f, 0x8d, 0x14, 0x3f, 0x58, 0xae, 0x1c, 0x53, 0xdb,
	0x0f, 0x44, 0x73, 0x18, 0xe5, 0xfa, 0xce, 0x19, 0x2c, 0x8c, 0xd5, 0x20, 0xba, 0x13, 0x7a, 0x0f,
	0xe3, 0x26, 0x55, 0x79, 0xd9, 0x32, 0xe5, 0x0c, 0x75, 0xf2, 0x97, 0x97, 0x27, 0x98, 0xee, 0xb8,
	0xe2, 0x15, 0x6b, 0xb1, 0xa8, 0x6b, 0xae, 0xfe, 0x73, 0x72, 0x06, 0x26, 0x3f, 0xeb, 0x39, 0x2b,
	0x32, 0xf9, 0x19, 0xd9, 0x30, 0x90, 0xec, 0xbb, 0x5e, 0xb1, 0xa2, 0x5e, 0x2e, 0x37, 0x00, 0x54,
	0x49, 0x7e, 0x2d, 0x8e, 0x29, 0x97, 0x7d, 0x7e, 0x61, 0xbf, 0xee, 0xe5, 0xbd, 0x44, 0xef, 0xe0,
	0xf5, 0x2d, 0xad, 0x3a, 0x76, 0x6f, 0xfe, 0x03, 0x1f, 0x7e, 0xc2, 0x88, 0xaa, 0x54, 0x75, 0x2d,
	0x9a, 0x03, 0xa2, 0xb1, 0x1f, 0x27, 0xf4, 0x94, 0x1c, 0xe8, 0x91, 0xe0, 0x70, 0x1b, 0x92, 0xc0,
	0x7e, 0x85, 0xa6, 0x60, 0x51, 0xfc, 0x95, 0x04, 0xc9, 0x9e, 0x04, 0xb6, 0x81, 0xde, 0xc0, 0x0b,
	0x8d, 0xfd, 0x28, 0x26, 0x81, 0x6d, 0x6a, 0x48, 0x30, 0x26, 0x94, 0xda, 0xc3, 0x1e, 0xb6, 0x7e,
	0xb8, 0x4f, 0x22, 0x62, 0x8f, 0xd1, 0x5b, 0x98, 0x86, 0x87, 0x6d, 0xe4, 0x9f, 0x1e, 0x96, 0x8d,
	0x26, 0x30, 0xc6, 0xfe, 0x01, 0x93, 0xbe, 0x67, 0xf1, 0xe5, 0xd3, 0xb7, 0xcd, 0xbf, 0x3d, 0xf2,
	0xf3, 0x93, 0xd3, 0x64, 0xd9, 0x48, 0x9b, 0xeb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xe3, 0x57,
	0xd1, 0x2e, 0x07, 0x02, 0x00, 0x00,
}
