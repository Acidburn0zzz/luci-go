// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/luci_notify/api/config/notify.proto

package config

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	proto1 "go.chromium.org/luci/buildbucket/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ProjectConfig is a luci-notify configuration for a particular project.
type ProjectConfig struct {
	// Notifiers is a list of Notifiers which watch builders and send
	// notifications for this project.
	Notifiers            []*Notifier `protobuf:"bytes,1,rep,name=notifiers,proto3" json:"notifiers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ProjectConfig) Reset()         { *m = ProjectConfig{} }
func (m *ProjectConfig) String() string { return proto.CompactTextString(m) }
func (*ProjectConfig) ProtoMessage()    {}
func (*ProjectConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6945a7af0ec43b, []int{0}
}
func (m *ProjectConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectConfig.Unmarshal(m, b)
}
func (m *ProjectConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectConfig.Marshal(b, m, deterministic)
}
func (m *ProjectConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectConfig.Merge(m, src)
}
func (m *ProjectConfig) XXX_Size() int {
	return xxx_messageInfo_ProjectConfig.Size(m)
}
func (m *ProjectConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectConfig proto.InternalMessageInfo

func (m *ProjectConfig) GetNotifiers() []*Notifier {
	if m != nil {
		return m.Notifiers
	}
	return nil
}

// Notifier contains a set of notification configurations (which specify
// triggers to send notifications on) and a set of builders that will be
// watched for these triggers.
type Notifier struct {
	// Name is an identifier for the notifier which must be unique within a
	// project.
	//
	// Name must additionally match ^[a-z\-]+$, meaning it must only
	// use an alphabet of lowercase characters and hyphens.
	//
	// Required.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Notifications is a list of notification configurations.
	Notifications []*Notification `protobuf:"bytes,2,rep,name=notifications,proto3" json:"notifications,omitempty"`
	// Builders is a list of buildbucket builders this Notifier should watch.
	Builders             []*Builder `protobuf:"bytes,3,rep,name=builders,proto3" json:"builders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Notifier) Reset()         { *m = Notifier{} }
func (m *Notifier) String() string { return proto.CompactTextString(m) }
func (*Notifier) ProtoMessage()    {}
func (*Notifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6945a7af0ec43b, []int{1}
}
func (m *Notifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notifier.Unmarshal(m, b)
}
func (m *Notifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notifier.Marshal(b, m, deterministic)
}
func (m *Notifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notifier.Merge(m, src)
}
func (m *Notifier) XXX_Size() int {
	return xxx_messageInfo_Notifier.Size(m)
}
func (m *Notifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Notifier.DiscardUnknown(m)
}

var xxx_messageInfo_Notifier proto.InternalMessageInfo

func (m *Notifier) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Notifier) GetNotifications() []*Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

func (m *Notifier) GetBuilders() []*Builder {
	if m != nil {
		return m.Builders
	}
	return nil
}

// Notification specifies the triggers to watch for and send
// notifications on. It also specifies email recipients.
type Notification struct {
	// OnSuccess specifies a trigger to notify recipients on each build success.
	//
	// Optional.
	OnSuccess bool `protobuf:"varint,1,opt,name=on_success,json=onSuccess,proto3" json:"on_success,omitempty"`
	// OnFailure specifies a trigger to notify recipients on each build failure.
	//
	// Optional.
	OnFailure bool `protobuf:"varint,2,opt,name=on_failure,json=onFailure,proto3" json:"on_failure,omitempty"`
	// OnChange specifies a trigger to notify recipients if the builder's
	// previous build had a different result than the most recent build.
	//
	// Optional.
	OnChange bool `protobuf:"varint,3,opt,name=on_change,json=onChange,proto3" json:"on_change,omitempty"`
	// Email is the set of email addresses to notify.
	//
	// Optional.
	Email *Notification_Email `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	// Refers to which project template name to use to format this email.
	// If not present, "default" will be used.
	//
	// Optional.
	Template string `protobuf:"bytes,5,opt,name=template,proto3" json:"template,omitempty"`
	// NotifyBlamelist specifies whether to notify the computed blamelist for a
	// given build.
	//
	// If set, this notification will be sent to the blamelist of a build. Note
	// that if this is set in multiple notifications pertaining to the same
	// builder, the blamelist may recieve multiple emails.
	//
	// Optional.
	NotifyBlamelist      *Notification_Blamelist `protobuf:"bytes,6,opt,name=notify_blamelist,json=notifyBlamelist,proto3" json:"notify_blamelist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6945a7af0ec43b, []int{2}
}
func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetOnSuccess() bool {
	if m != nil {
		return m.OnSuccess
	}
	return false
}

func (m *Notification) GetOnFailure() bool {
	if m != nil {
		return m.OnFailure
	}
	return false
}

func (m *Notification) GetOnChange() bool {
	if m != nil {
		return m.OnChange
	}
	return false
}

func (m *Notification) GetEmail() *Notification_Email {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *Notification) GetTemplate() string {
	if m != nil {
		return m.Template
	}
	return ""
}

func (m *Notification) GetNotifyBlamelist() *Notification_Blamelist {
	if m != nil {
		return m.NotifyBlamelist
	}
	return nil
}

// Email is a message representing a set of mail recipients (email
// addresses).
type Notification_Email struct {
	// Recipients is a list of email addresses to notify.
	Recipients           []string `protobuf:"bytes,1,rep,name=recipients,proto3" json:"recipients,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notification_Email) Reset()         { *m = Notification_Email{} }
func (m *Notification_Email) String() string { return proto.CompactTextString(m) }
func (*Notification_Email) ProtoMessage()    {}
func (*Notification_Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6945a7af0ec43b, []int{2, 0}
}
func (m *Notification_Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification_Email.Unmarshal(m, b)
}
func (m *Notification_Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification_Email.Marshal(b, m, deterministic)
}
func (m *Notification_Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification_Email.Merge(m, src)
}
func (m *Notification_Email) XXX_Size() int {
	return xxx_messageInfo_Notification_Email.Size(m)
}
func (m *Notification_Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Notification_Email proto.InternalMessageInfo

func (m *Notification_Email) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

// Blamelist is a message representing configuration for notifying the blamelist.
type Notification_Blamelist struct {
	// A list of repositories which we are allowed to be included as part of the
	// blamelist. If unset, a blamelist will be computed based on a Builder's
	// repository field. If set, however luci-notify computes the blamelist for
	// all commits related to a build (which may span multiple repositories) which
	// are part of repository in this repository whitelist.
	//
	// Repositories should be valid Gerrit/Gitiles repository URLs, such as
	// https://chromium.googlesource.com/chromium/src
	//
	// Optional.
	RepositoryWhitelist  []string `protobuf:"bytes,1,rep,name=repository_whitelist,json=repositoryWhitelist,proto3" json:"repository_whitelist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notification_Blamelist) Reset()         { *m = Notification_Blamelist{} }
func (m *Notification_Blamelist) String() string { return proto.CompactTextString(m) }
func (*Notification_Blamelist) ProtoMessage()    {}
func (*Notification_Blamelist) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6945a7af0ec43b, []int{2, 1}
}
func (m *Notification_Blamelist) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification_Blamelist.Unmarshal(m, b)
}
func (m *Notification_Blamelist) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification_Blamelist.Marshal(b, m, deterministic)
}
func (m *Notification_Blamelist) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification_Blamelist.Merge(m, src)
}
func (m *Notification_Blamelist) XXX_Size() int {
	return xxx_messageInfo_Notification_Blamelist.Size(m)
}
func (m *Notification_Blamelist) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification_Blamelist.DiscardUnknown(m)
}

var xxx_messageInfo_Notification_Blamelist proto.InternalMessageInfo

func (m *Notification_Blamelist) GetRepositoryWhitelist() []string {
	if m != nil {
		return m.RepositoryWhitelist
	}
	return nil
}

// Builder references a buildbucket builder in the current project.
type Builder struct {
	// Bucket is the buildbucket bucket that the builder is a part of.
	//
	// Required.
	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	// Name is the name of the buildbucket builder.
	//
	// Required.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Repository is the git repository associated with this particular builder.
	//
	// The repository should look like a URL, e.g. https://chromium.googlesource.com/src
	//
	// Currently, luci-notify only supports Gerrit-like URLs since it checks
	// against gitiles commits, so the URL's path (e.g. "src" in the above
	// example) should map directly to a Gerrit project.
	//
	// Builds attached to the history of this repository will use this
	// repository's git history to determine the order between two builds for the
	// OnChange notification.
	//
	// Optional.
	//
	// If not set, OnChange notifications will derive their notion of
	// "previous" build solely from build creation time, which is potentially
	// less reliable.
	Repository           string   `protobuf:"bytes,3,opt,name=repository,proto3" json:"repository,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Builder) Reset()         { *m = Builder{} }
func (m *Builder) String() string { return proto.CompactTextString(m) }
func (*Builder) ProtoMessage()    {}
func (*Builder) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6945a7af0ec43b, []int{3}
}
func (m *Builder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Builder.Unmarshal(m, b)
}
func (m *Builder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Builder.Marshal(b, m, deterministic)
}
func (m *Builder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Builder.Merge(m, src)
}
func (m *Builder) XXX_Size() int {
	return xxx_messageInfo_Builder.Size(m)
}
func (m *Builder) XXX_DiscardUnknown() {
	xxx_messageInfo_Builder.DiscardUnknown(m)
}

var xxx_messageInfo_Builder proto.InternalMessageInfo

func (m *Builder) GetBucket() string {
	if m != nil {
		return m.Bucket
	}
	return ""
}

func (m *Builder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Builder) GetRepository() string {
	if m != nil {
		return m.Repository
	}
	return ""
}

// Notifications encapsulates a list of notifications as a proto so code for
// storing it in the datastore may be generated.
type Notifications struct {
	// Notifications is a list of notification configurations.
	Notifications        []*Notification `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Notifications) Reset()         { *m = Notifications{} }
func (m *Notifications) String() string { return proto.CompactTextString(m) }
func (*Notifications) ProtoMessage()    {}
func (*Notifications) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6945a7af0ec43b, []int{4}
}
func (m *Notifications) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notifications.Unmarshal(m, b)
}
func (m *Notifications) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notifications.Marshal(b, m, deterministic)
}
func (m *Notifications) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notifications.Merge(m, src)
}
func (m *Notifications) XXX_Size() int {
	return xxx_messageInfo_Notifications.Size(m)
}
func (m *Notifications) XXX_DiscardUnknown() {
	xxx_messageInfo_Notifications.DiscardUnknown(m)
}

var xxx_messageInfo_Notifications proto.InternalMessageInfo

func (m *Notifications) GetNotifications() []*Notification {
	if m != nil {
		return m.Notifications
	}
	return nil
}

// A collection of landed Git commits hosted on Gitiles.
type GitilesCommits struct {
	// The Gitiles commits in this collection.
	Commits              []*proto1.GitilesCommit `protobuf:"bytes,1,rep,name=commits,proto3" json:"commits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GitilesCommits) Reset()         { *m = GitilesCommits{} }
func (m *GitilesCommits) String() string { return proto.CompactTextString(m) }
func (*GitilesCommits) ProtoMessage()    {}
func (*GitilesCommits) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a6945a7af0ec43b, []int{5}
}
func (m *GitilesCommits) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GitilesCommits.Unmarshal(m, b)
}
func (m *GitilesCommits) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GitilesCommits.Marshal(b, m, deterministic)
}
func (m *GitilesCommits) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GitilesCommits.Merge(m, src)
}
func (m *GitilesCommits) XXX_Size() int {
	return xxx_messageInfo_GitilesCommits.Size(m)
}
func (m *GitilesCommits) XXX_DiscardUnknown() {
	xxx_messageInfo_GitilesCommits.DiscardUnknown(m)
}

var xxx_messageInfo_GitilesCommits proto.InternalMessageInfo

func (m *GitilesCommits) GetCommits() []*proto1.GitilesCommit {
	if m != nil {
		return m.Commits
	}
	return nil
}

func init() {
	proto.RegisterType((*ProjectConfig)(nil), "notify.ProjectConfig")
	proto.RegisterType((*Notifier)(nil), "notify.Notifier")
	proto.RegisterType((*Notification)(nil), "notify.Notification")
	proto.RegisterType((*Notification_Email)(nil), "notify.Notification.Email")
	proto.RegisterType((*Notification_Blamelist)(nil), "notify.Notification.Blamelist")
	proto.RegisterType((*Builder)(nil), "notify.Builder")
	proto.RegisterType((*Notifications)(nil), "notify.Notifications")
	proto.RegisterType((*GitilesCommits)(nil), "notify.GitilesCommits")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/luci_notify/api/config/notify.proto", fileDescriptor_9a6945a7af0ec43b)
}

var fileDescriptor_9a6945a7af0ec43b = []byte{
	// 479 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x4f, 0x8b, 0xd3, 0x40,
	0x14, 0x27, 0xed, 0x36, 0x9b, 0xbc, 0xb5, 0xee, 0x32, 0x2e, 0x12, 0x22, 0xbb, 0x94, 0x5c, 0x2c,
	0x08, 0x89, 0x76, 0x0f, 0x8a, 0x07, 0x85, 0x16, 0x95, 0x45, 0x58, 0x24, 0x22, 0x82, 0x97, 0x90,
	0x8e, 0xd3, 0x76, 0x34, 0x33, 0x2f, 0x24, 0x13, 0x65, 0x3f, 0x81, 0x1f, 0xd6, 0x2f, 0x21, 0xfb,
	0x26, 0x49, 0x5b, 0xec, 0x61, 0x2f, 0x61, 0xde, 0xef, 0xdf, 0xbc, 0xcc, 0xbc, 0x81, 0x57, 0x6b,
	0x8c, 0xf9, 0xa6, 0x42, 0x25, 0x1b, 0x15, 0x63, 0xb5, 0x4e, 0x8a, 0x86, 0x4b, 0xfa, 0x64, 0x1a,
	0x8d, 0x5c, 0xdd, 0x26, 0x79, 0x29, 0x13, 0x8e, 0x7a, 0x25, 0xd7, 0x89, 0x45, 0xe2, 0xb2, 0x42,
	0x83, 0xcc, 0xb5, 0x55, 0x78, 0x75, 0x30, 0x61, 0xd9, 0xc8, 0xe2, 0xfb, 0xb2, 0xe1, 0x3f, 0x85,
	0x49, 0x48, 0x9f, 0x70, 0x54, 0x0a, 0xb5, 0x35, 0x47, 0x6f, 0x61, 0xfc, 0xa9, 0xc2, 0x1f, 0x82,
	0x9b, 0x05, 0x45, 0xb3, 0x18, 0x7c, 0xca, 0x93, 0xa2, 0xaa, 0x03, 0x67, 0x32, 0x9c, 0x9e, 0xcc,
	0xce, 0xe2, 0x76, 0xbf, 0x9b, 0x96, 0x48, 0xb7, 0x92, 0xe8, 0x8f, 0x03, 0x5e, 0x87, 0x33, 0x06,
	0x47, 0x3a, 0x57, 0x22, 0x70, 0x26, 0xce, 0xd4, 0x4f, 0x69, 0xcd, 0x5e, 0xc3, 0xd8, 0xaa, 0x79,
	0x6e, 0x24, 0xea, 0x3a, 0x18, 0x50, 0xe8, 0xf9, 0x7e, 0xa8, 0x25, 0xd3, 0x7d, 0x29, 0x7b, 0x06,
	0x1e, 0xf5, 0x7f, 0xd7, 0xcb, 0x90, 0x6c, 0xa7, 0x9d, 0x6d, 0x6e, 0xf1, 0xb4, 0x17, 0x44, 0x7f,
	0x07, 0xf0, 0x60, 0x37, 0x8c, 0x5d, 0x00, 0xa0, 0xce, 0xea, 0x86, 0x73, 0x51, 0xd7, 0xd4, 0x93,
	0x97, 0xfa, 0xa8, 0x3f, 0x5b, 0xa0, 0xa5, 0x57, 0xb9, 0x2c, 0x9a, 0x4a, 0x04, 0x83, 0x8e, 0x7e,
	0x6f, 0x01, 0xf6, 0x04, 0x7c, 0xd4, 0x19, 0xdf, 0xe4, 0x7a, 0x2d, 0x82, 0x21, 0xb1, 0x1e, 0xea,
	0x05, 0xd5, 0xec, 0x39, 0x8c, 0x84, 0xca, 0x65, 0x11, 0x1c, 0x4d, 0x9c, 0xe9, 0xc9, 0x2c, 0x3c,
	0xf4, 0x33, 0xf1, 0xbb, 0x3b, 0x45, 0x6a, 0x85, 0x2c, 0x04, 0xcf, 0x08, 0x55, 0x16, 0xb9, 0x11,
	0xc1, 0x88, 0x8e, 0xa7, 0xaf, 0xd9, 0x35, 0x9c, 0x59, 0x7f, 0xb6, 0x2c, 0x72, 0x25, 0x0a, 0x59,
	0x9b, 0xc0, 0xa5, 0xe0, 0xcb, 0x83, 0xc1, 0xf3, 0x4e, 0x95, 0x9e, 0x5a, 0xba, 0x07, 0xc2, 0xa7,
	0x30, 0xa2, 0x6d, 0xd9, 0x25, 0x40, 0x25, 0xb8, 0x2c, 0xa5, 0xd0, 0xc6, 0x5e, 0xa4, 0x9f, 0xee,
	0x20, 0xe1, 0x1b, 0xf0, 0x7b, 0x17, 0x7b, 0x01, 0xe7, 0x95, 0x28, 0xb1, 0x96, 0x06, 0xab, 0xdb,
	0xec, 0xf7, 0x46, 0x1a, 0xdb, 0x84, 0xb5, 0x3d, 0xda, 0x72, 0x5f, 0x3b, 0x2a, 0xfa, 0x02, 0xc7,
	0xed, 0x15, 0xb0, 0xc7, 0xe0, 0xda, 0x01, 0x6b, 0xef, 0xbd, 0xad, 0xfa, 0x69, 0x18, 0xec, 0x4c,
	0x03, 0xb5, 0xd5, 0xa5, 0xd1, 0xb1, 0x52, 0x5b, 0x1d, 0x12, 0x7d, 0x84, 0xf1, 0xcd, 0xde, 0x08,
	0xfc, 0x37, 0x3e, 0xce, 0xbd, 0xc7, 0x27, 0xba, 0x86, 0x87, 0x1f, 0xa4, 0x91, 0x85, 0xa8, 0x17,
	0xa8, 0x94, 0x34, 0x35, 0x7b, 0x09, 0xc7, 0xdc, 0x2e, 0xdb, 0x9c, 0x8b, 0x78, 0xe7, 0x81, 0xc4,
	0xbf, 0x66, 0xf1, 0x9e, 0x21, 0xed, 0xd4, 0x73, 0xef, 0x9b, 0x6b, 0xdf, 0xde, 0xd2, 0xa5, 0x87,
	0x73, 0xf5, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x36, 0x0a, 0x9e, 0x1c, 0xb1, 0x03, 0x00, 0x00,
}
