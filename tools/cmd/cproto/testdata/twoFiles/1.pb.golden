// Code generated by protoc-gen-go.
// source: 1.proto
// DO NOT EDIT!

/*
Package test is a generated protocol buffer package.

It is generated from these files:
	1.proto
	2.proto

It has these top-level messages:
	Req
	Res
*/
package test

import prpc "github.com/luci/luci-go/server/prpc"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Req struct {
	X int64 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
}

func (m *Req) Reset()                    { *m = Req{} }
func (m *Req) String() string            { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()               {}
func (*Req) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Res struct {
	X int64 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
}

func (m *Res) Reset()                    { *m = Res{} }
func (m *Res) String() string            { return proto.CompactTextString(m) }
func (*Res) ProtoMessage()               {}
func (*Res) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Req)(nil), "test.Req")
	proto.RegisterType((*Res)(nil), "test.Res")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// Client API for S1 service

type S1Client interface {
	M(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Res, error)
}

type s1Client struct {
	cc *grpc.ClientConn
}

func NewS1Client(cc *grpc.ClientConn) S1Client {
	return &s1Client{cc}
}

func (c *s1Client) M(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := grpc.Invoke(ctx, "/test.S1/M", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for S1 service

type S1Server interface {
	M(context.Context, *Req) (*Res, error)
}

func RegisterS1Server(s prpc.Registrar, srv S1Server) {
	s.RegisterService(&_S1_serviceDesc, srv)
}

func _S1_M_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(S1Server).M(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _S1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.S1",
	HandlerType: (*S1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "M",
			Handler:    _S1_M_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 92 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x62, 0x37, 0xd4, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x29, 0x49, 0x2d, 0x2e, 0x51, 0x12, 0xe0, 0x62, 0x0e, 0x4a, 0x2d,
	0x14, 0xe2, 0xe4, 0x62, 0xac, 0x90, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x86, 0x88, 0x14, 0x23, 0x89,
	0x18, 0x29, 0x72, 0x31, 0x05, 0x1b, 0x0a, 0x49, 0x73, 0x31, 0xfa, 0x0a, 0x71, 0xea, 0x81, 0x74,
	0xe9, 0x01, 0xb5, 0x48, 0xc1, 0x99, 0xc5, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x33, 0x8d, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x2c, 0x75, 0xe9, 0x86, 0x5e, 0x00, 0x00, 0x00,
}
