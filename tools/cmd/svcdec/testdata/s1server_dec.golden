// Code generated by svcdec; DO NOT EDIT

package test

import (
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"

	google_protobuf "github.com/luci/luci-go/common/proto/google"
	sub "github.com/luci/luci-go/tools/internal/svctool/testdata/sub"
)

type DecoratedS1 struct {
	// Service is the service to decorate.
	Service S1Server
	// Prelude is called in each method before forwarding the call to Service.
	// If Prelude returns an error, it is returned without forwarding the call.
	Prelude func(c context.Context, methodName string, req proto.Message) (context.Context, error)
}

func (s *DecoratedS1) M(c context.Context, req *M1) (*M2, error) {
	c, err := s.Prelude(c, "M", req)
	if err != nil {
		return nil, err
	}
	return s.Service.M(c, req)
}

type DecoratedS2 struct {
	// Service is the service to decorate.
	Service S2Server
	// Prelude is called in each method before forwarding the call to Service.
	// If Prelude returns an error, it is returned without forwarding the call.
	Prelude func(c context.Context, methodName string, req proto.Message) (context.Context, error)
}

func (s *DecoratedS2) Get(c context.Context, req *Void) (*M1, error) {
	c, err := s.Prelude(c, "Get", req)
	if err != nil {
		return nil, err
	}
	return s.Service.Get(c, req)
}

func (s *DecoratedS2) Set(c context.Context, req *M1) (*Void, error) {
	c, err := s.Prelude(c, "Set", req)
	if err != nil {
		return nil, err
	}
	return s.Service.Set(c, req)
}

func (s *DecoratedS2) Imp(c context.Context, req *sub.Sub) (*google_protobuf.Empty, error) {
	c, err := s.Prelude(c, "Imp", req)
	if err != nil {
		return nil, err
	}
	return s.Service.Imp(c, req)
}
