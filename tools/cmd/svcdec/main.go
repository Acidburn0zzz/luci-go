// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Command svcdec reads a service interface XYZServer generated by protoc
// and generates DecoratedXYZ that has XYZServer field and "Prelude" func field.
// Each service method calls Prelude before forwarding the call to the decorated
// service.
//
// Example of usage:
// 	//go:generate svcdec -type GreetServer
package main

import (
	"os"
	"strings"

	"golang.org/x/net/context"

	"github.com/luci/luci-go/tools/internal/svctool"
)

func generate(c context.Context, a *svctool.GeneratorArgs) error {
	args := templateArgs{
		PackageName:  a.PackageName,
		ExtraImports: a.ExtraImports,
	}
	for _, svc := range a.Services {
		args.Services = append(args.Services, &service{
			Service:    svc,
			StructName: "Decorated" + strings.TrimSuffix(svc.TypeName, "Server"),
		})
	}

	// Execute template.
	return tmpl.Execute(a.Out, args)
}

func tool() *svctool.Tool {
	return &svctool.Tool{Name: "svcdec", OutputFilenameSuffix: "dec"}
}

func main() {
	tool().Main(os.Args[1:], generate)
}
