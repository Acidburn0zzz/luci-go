// Copyright 2016 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

package main

import "text/template"

var (
	tmpl = template.Must(template.New("").Parse(
		`// Code generated by svcmux; DO NOT EDIT

package {{.PackageName}}

import (
	svcmux "github.com/luci/luci-go/server/svcmux"
	context "golang.org/x/net/context"
)

{{range .MuxTypes}}
{{$StructName := .StructName}}
type {{$StructName}} struct {
	// Default is the version used if {{.VersionMetadataKey}} metadata
	// is not present.
	Default string
	// Impls maps versions to service implementations.
	Impls map[string]{{.InterfaceName}}
}

{{range .Methods}}
func (s *{{$StructName}}) {{.Name}}(c context.Context, req {{.InputType}}) ({{.OutputType}}, error) {
	ver := svcmux.GetServiceVersion(c, s.Default)
	impl := s.Impls[ver]
	if impl == nil {
		return nil, svcmux.NoImplementation(ver)
	}
	return impl.{{.Name}}(c, req)
}
{{end}}
{{end}}
`))
)

type (
	templateArgs struct {
		PackageName string
		MuxTypes    []*muxType
	}

	muxType struct {
		StructName         string
		InterfaceName      string
		VersionMetadataKey string
		Methods            []*muxMethod
	}

	muxMethod struct {
		Name       string
		InputType  string
		OutputType string
	}
)
