// Copyright 2017 The LUCI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package cipd;

option go_package = "api";


// Exposes content-addressable storage that stores the package files.
//
// All CIPD package instances (actual physical files) are residing in this
// storage, and the package repository data structures just reference them by
// their digest.
//
// Most of the Storage service API is used internally by the backend and
// corresponding RPC methods are ACLed only to admins, with exception of
// FinishUpload that is allowed to be used directly by clients to finalize
// upload sessions started by the backend.
service Storage {
  // Produces a signed URL that can be used to fetch an object.
  //
  // Returns NOT_FOUND status code if there's no such object.
  rpc GetObjectURL(GetObjectURLRequest) returns (ObjectURL);
}


////////////////////////////////////////////////////////////////////////////////


// Supported hashing algorithms used by the content-addressable storage.
//
// Literal names are important, since they are used to construct Google Storage
// paths internally.
enum HashAlgo {
  HASH_ALGO_UNSPECIFIED = 0;
  SHA1 = 1;
}


// A reference to an object in the content-addressable storage.
message ObjectRef {
  HashAlgo hash_algo = 1;  // an algorithm applied to the body to get the name
  string hex_digest  = 2;  // the name as lowercase hex string, e.g 'abcdef...'
}


message GetObjectURLRequest {
  // A reference to the object the client wants to fetch.
  ObjectRef object = 1;

  // If present, the returned URL will be served with Content-Disposition header
  // that includes the given filename. It makes browsers save the file under the
  // given name.
  string download_filename = 2;
}


message ObjectURL {
  // A signed HTTPS URL to the object's body.
  //
  // Fetching it doesn't require authentication. Expires after some unspecified
  // short amount of time. It is expected that callers will use it immediately.
  //
  // The URL isn't guaranteed to have any particular internal structure. Do not
  // attempt to parse it.
  string signed_url = 1;
}
