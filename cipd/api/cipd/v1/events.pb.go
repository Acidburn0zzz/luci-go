// Code generated by protoc-gen-go. DO NOT EDIT.
// source: go.chromium.org/luci/cipd/api/cipd/v1/events.proto

package api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EventKind int32

const (
	EventKind_EVENT_KIND_UNSPECIFIED EventKind = 0
	// Prefix events: relate to some CIPD prefix.
	EventKind_PREFIX_ACL_CHANGED EventKind = 100
	// Package events: relate to a package (as a whole).
	EventKind_PACKAGE_CREATED  EventKind = 200
	EventKind_PACKAGE_DELETED  EventKind = 201
	EventKind_PACKAGE_HIDDEN   EventKind = 202
	EventKind_PACKAGE_UNHIDDEN EventKind = 203
	// Instance events: relate to a particular package instance.
	EventKind_INSTANCE_CREATED      EventKind = 300
	EventKind_INSTANCE_DELETED      EventKind = 301
	EventKind_INSTANCE_REF_SET      EventKind = 302
	EventKind_INSTANCE_REF_UNSET    EventKind = 303
	EventKind_INSTANCE_TAG_ATTACHED EventKind = 304
	EventKind_INSTANCE_TAG_DETACHED EventKind = 305
)

var EventKind_name = map[int32]string{
	0:   "EVENT_KIND_UNSPECIFIED",
	100: "PREFIX_ACL_CHANGED",
	200: "PACKAGE_CREATED",
	201: "PACKAGE_DELETED",
	202: "PACKAGE_HIDDEN",
	203: "PACKAGE_UNHIDDEN",
	300: "INSTANCE_CREATED",
	301: "INSTANCE_DELETED",
	302: "INSTANCE_REF_SET",
	303: "INSTANCE_REF_UNSET",
	304: "INSTANCE_TAG_ATTACHED",
	305: "INSTANCE_TAG_DETACHED",
}

var EventKind_value = map[string]int32{
	"EVENT_KIND_UNSPECIFIED": 0,
	"PREFIX_ACL_CHANGED":     100,
	"PACKAGE_CREATED":        200,
	"PACKAGE_DELETED":        201,
	"PACKAGE_HIDDEN":         202,
	"PACKAGE_UNHIDDEN":       203,
	"INSTANCE_CREATED":       300,
	"INSTANCE_DELETED":       301,
	"INSTANCE_REF_SET":       302,
	"INSTANCE_REF_UNSET":     303,
	"INSTANCE_TAG_ATTACHED":  304,
	"INSTANCE_TAG_DETACHED":  305,
}

func (x EventKind) String() string {
	return proto.EnumName(EventKind_name, int32(x))
}

func (EventKind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e76d2755b4d4b01e, []int{0}
}

// Event in a global structured event log.
//
// It exists in both BigQuery (for adhoc queries) and in Datastore (for showing
// in web UI, e.g. for "recent tags" feature).
//
// Datastore entities contains serialized Event as is, plus a copy of some of
// its fields for indexing.
type Event struct {
	Kind EventKind `protobuf:"varint,1,opt,name=kind,proto3,enum=cipd.EventKind" json:"kind,omitempty"`
	Who  string    `protobuf:"bytes,2,opt,name=who,proto3" json:"who,omitempty"`
	// Real time is used only for up to millisecond precisions. Nanoseconds are
	// abused to order events emitted by a single transaction.
	When     *timestamp.Timestamp `protobuf:"bytes,3,opt,name=when,proto3" json:"when,omitempty"`
	Package  string               `protobuf:"bytes,4,opt,name=package,proto3" json:"package,omitempty"`
	Instance string               `protobuf:"bytes,5,opt,name=instance,proto3" json:"instance,omitempty"`
	Ref      string               `protobuf:"bytes,6,opt,name=ref,proto3" json:"ref,omitempty"`
	Tag      string               `protobuf:"bytes,7,opt,name=tag,proto3" json:"tag,omitempty"`
	// An ACL diff for PREFIX_ACL_CHANGED.
	GrantedRole          []*PrefixMetadata_ACL `protobuf:"bytes,8,rep,name=granted_role,json=grantedRole,proto3" json:"granted_role,omitempty"`
	RevokedRole          []*PrefixMetadata_ACL `protobuf:"bytes,9,rep,name=revoked_role,json=revokedRole,proto3" json:"revoked_role,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_e76d2755b4d4b01e, []int{0}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetKind() EventKind {
	if m != nil {
		return m.Kind
	}
	return EventKind_EVENT_KIND_UNSPECIFIED
}

func (m *Event) GetWho() string {
	if m != nil {
		return m.Who
	}
	return ""
}

func (m *Event) GetWhen() *timestamp.Timestamp {
	if m != nil {
		return m.When
	}
	return nil
}

func (m *Event) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *Event) GetInstance() string {
	if m != nil {
		return m.Instance
	}
	return ""
}

func (m *Event) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

func (m *Event) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Event) GetGrantedRole() []*PrefixMetadata_ACL {
	if m != nil {
		return m.GrantedRole
	}
	return nil
}

func (m *Event) GetRevokedRole() []*PrefixMetadata_ACL {
	if m != nil {
		return m.RevokedRole
	}
	return nil
}

func init() {
	proto.RegisterEnum("cipd.EventKind", EventKind_name, EventKind_value)
	proto.RegisterType((*Event)(nil), "cipd.Event")
}

func init() {
	proto.RegisterFile("go.chromium.org/luci/cipd/api/cipd/v1/events.proto", fileDescriptor_e76d2755b4d4b01e)
}

var fileDescriptor_e76d2755b4d4b01e = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x8f, 0xd2, 0x40,
	0x18, 0xc6, 0x6d, 0x81, 0xdd, 0x65, 0x30, 0xbb, 0xcd, 0xe8, 0xae, 0x4d, 0x2f, 0x12, 0xbd, 0x10,
	0x0f, 0x53, 0xc5, 0xa3, 0xa7, 0xb1, 0x1d, 0xa0, 0x01, 0x1b, 0x52, 0x8a, 0x31, 0x5e, 0x9a, 0x59,
	0x3a, 0x94, 0x06, 0xe8, 0x34, 0xc3, 0xc0, 0xfa, 0xa1, 0x5c, 0xff, 0x7c, 0x05, 0x4f, 0xfe, 0xf9,
	0x52, 0x66, 0x5a, 0x8a, 0x12, 0x0f, 0xee, 0xed, 0x7d, 0x7f, 0xcf, 0xfb, 0x3c, 0x4f, 0xda, 0x0c,
	0xe8, 0x26, 0x1c, 0xcd, 0x16, 0x82, 0xaf, 0xd3, 0xed, 0x1a, 0x71, 0x91, 0xd8, 0xab, 0xed, 0x2c,
	0xb5, 0x67, 0x69, 0x1e, 0xdb, 0x34, 0xdf, 0x0f, 0xbb, 0x17, 0x36, 0xdb, 0xb1, 0x4c, 0x6e, 0x50,
	0x2e, 0xb8, 0xe4, 0xb0, 0xae, 0xa8, 0xf5, 0xfc, 0x6e, 0x4e, 0xc1, 0x72, 0x5e, 0xfa, 0xac, 0xc7,
	0x09, 0xe7, 0xc9, 0x8a, 0xd9, 0xc5, 0x76, 0xbd, 0x9d, 0xdb, 0x32, 0x5d, 0xb3, 0x8d, 0xa4, 0xeb,
	0xbc, 0x3c, 0x78, 0xf2, 0x4d, 0x07, 0x0d, 0xa2, 0x9a, 0xe0, 0x53, 0x50, 0x5f, 0xa6, 0x59, 0x6c,
	0x6a, 0x6d, 0xad, 0x73, 0xde, 0xbd, 0x40, 0x2a, 0x0d, 0x15, 0xd2, 0x30, 0xcd, 0xe2, 0xa0, 0x10,
	0xa1, 0x01, 0x6a, 0x37, 0x0b, 0x6e, 0xea, 0x6d, 0xad, 0xd3, 0x0c, 0xd4, 0x08, 0x11, 0xa8, 0xdf,
	0x2c, 0x58, 0x66, 0xd6, 0xda, 0x5a, 0xa7, 0xd5, 0xb5, 0x50, 0x59, 0x88, 0xaa, 0x42, 0x14, 0x56,
	0x85, 0x41, 0x71, 0x07, 0x4d, 0x70, 0x9a, 0xd3, 0xd9, 0x92, 0x26, 0xcc, 0xac, 0x17, 0x29, 0xd5,
	0x0a, 0x2d, 0x70, 0x96, 0x66, 0x1b, 0x49, 0xb3, 0x19, 0x33, 0x1b, 0x85, 0x74, 0xd8, 0x55, 0xaf,
	0x60, 0x73, 0xf3, 0xa4, 0xec, 0x15, 0x6c, 0xae, 0x88, 0xa4, 0x89, 0x79, 0x5a, 0x12, 0x49, 0x13,
	0xf8, 0x0a, 0xdc, 0x4f, 0x04, 0xcd, 0x24, 0x8b, 0x23, 0xc1, 0x57, 0xcc, 0x3c, 0x6b, 0xd7, 0x3a,
	0xad, 0xae, 0x59, 0x7e, 0xc8, 0x58, 0xb0, 0x79, 0xfa, 0xe1, 0x0d, 0x93, 0x34, 0xa6, 0x92, 0x22,
	0xec, 0x8c, 0x82, 0xd6, 0xfe, 0x3a, 0xe0, 0x2b, 0xa6, 0xcc, 0x82, 0xed, 0xf8, 0xb2, 0x32, 0x37,
	0xff, 0x67, 0xde, 0x5f, 0x2b, 0xf3, 0xb3, 0x5b, 0x1d, 0x34, 0x0f, 0x7f, 0x0a, 0x5a, 0xe0, 0x8a,
	0xbc, 0x25, 0x7e, 0x18, 0x0d, 0x3d, 0xdf, 0x8d, 0xa6, 0xfe, 0x64, 0x4c, 0x1c, 0xaf, 0xe7, 0x11,
	0xd7, 0xb8, 0x07, 0xaf, 0x00, 0x1c, 0x07, 0xa4, 0xe7, 0xbd, 0x8b, 0xb0, 0x33, 0x8a, 0x9c, 0x01,
	0xf6, 0xfb, 0xc4, 0x35, 0x62, 0xf8, 0x10, 0x5c, 0x8c, 0xb1, 0x33, 0xc4, 0x7d, 0x12, 0x39, 0x01,
	0xc1, 0x21, 0x71, 0x8d, 0xef, 0xda, 0xdf, 0xd4, 0x25, 0x23, 0xa2, 0xe8, 0x0f, 0x0d, 0x3e, 0x00,
	0xe7, 0x15, 0x1d, 0x78, 0xae, 0x4b, 0x7c, 0xe3, 0xa7, 0x06, 0x2f, 0x81, 0x51, 0xc1, 0xa9, 0xbf,
	0xc7, 0xbf, 0x0a, 0xec, 0xf9, 0x93, 0x10, 0xfb, 0xce, 0x9f, 0xe0, 0x8f, 0xfa, 0x11, 0xae, 0x92,
	0x6f, 0x8f, 0x71, 0x40, 0x7a, 0xd1, 0x84, 0x84, 0xc6, 0x27, 0x1d, 0x3e, 0x02, 0xf0, 0x08, 0x4f,
	0x7d, 0x25, 0x7c, 0xd6, 0xa1, 0x05, 0x2e, 0x0f, 0x42, 0x88, 0xfb, 0x11, 0x0e, 0x43, 0xec, 0x0c,
	0x88, 0x6b, 0x7c, 0xf9, 0x57, 0x73, 0xc9, 0x5e, 0xfb, 0xaa, 0xbf, 0x6e, 0xbc, 0xaf, 0xd1, 0x3c,
	0xbd, 0x3e, 0x29, 0x1e, 0xc9, 0xcb, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf1, 0x79, 0x1b, 0x6e,
	0x11, 0x03, 0x00, 0x00,
}
